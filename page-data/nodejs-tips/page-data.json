{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/nodejs-tips/",
    "result": {"data":{"allSummaryGroup":{"nodes":[]},"mdx":{"id":"27683d87-8994-5a53-8b6e-311962df3ac1","tableOfContents":{"items":[{"url":"#nodejs-tips","title":"Nodejs Tips","items":[{"url":"#answers","title":"Answers"}]}]},"fields":{"title":"Nodejs Tips","slug":"/nodejs-tips/","url":"https://wiki.owenyoung.com/nodejs-tips/","editUrl":"https://github.com/theowenyoung/wiki/tree/main/nodejs-tips.md","lastUpdatedAt":"2021-08-27T03:43:35.000Z","lastUpdated":"8/27/2021","gitCreatedAt":"2021-08-27T03:43:35.000Z"},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Nodejs","Tips","Programming-Languages"],"date":null,"dateModified":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Nodejs\", \"Tips\", \"Programming-Languages\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"nodejs-tips\"\n  }, \"Nodejs Tips\"), mdx(\"h2\", {\n    \"id\": \"answers\"\n  }, \"Answers\"), mdx(\"h3\", {\n    \"id\": \"delete-node_modules-folder-recursively-from-a-specified-path-using-command-line\"\n  }, \"Delete node_modules folder recursively from a specified path using command line\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/42950501/delete-node-modules-folder-recursively-from-a-specified-path-using-command-line\"\n  }, \"Delete node_modules folder recursively from a specified path using command line - Stack Overflow\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\\n\")), mdx(\"h3\", {\n    \"id\": \"get-npm-token\"\n  }, \"Get NPM Token\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm token create\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntags:\n  - Nodejs\n  - Tips\n  - Programming-Languages\n---\n\n# Nodejs Tips\n\n## Answers\n\n### Delete node_modules folder recursively from a specified path using command line\n\n> [Delete node_modules folder recursively from a specified path using command line - Stack Overflow](https://stackoverflow.com/questions/42950501/delete-node-modules-folder-recursively-from-a-specified-path-using-command-line)\n\n```bash\nfind . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n```\n\n### Get NPM Token\n\n```bash\nnpm token create\n```\n","excerpt":"Nodejs Tips Answers Delete node_modules folder recursively from a specified path using command line Delete node_modules folder recursively â€¦","outboundReferences":[],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Monorepo\", \"Nodejs\", \"Workflows\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"nodejs-monorepo\"\n  }, \"Nodejs Monorepo\"), mdx(\"h2\", {\n    \"id\": \"tools\"\n  }, \"Tools\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets\"\n  }, \"GitHub - atlassian/changesets: \\uD83E\\uDD8B A way to manage your versioning and changelogs with a focus on monorepos\")), mdx(\"h2\", {\n    \"id\": \"use-changesets-as-monorepo-manager\"\n  }, \"Use Changesets as monorepo manager\"), mdx(\"h3\", {\n    \"id\": \"init-a-monorepo\"\n  }, \"Init a monorepo\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir monorepo && cd monorepo\\ngit init\\n# Add .gitignore file for nodejs <https://github.com/github/gitignore/blob/master/Node.gitignore>\\nnpm init --yes\\n\")), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"private\\\":\\\"true\\\"\"), \" to the root \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm init -w packages/a\\nnpm init -w packages/b\\nnpm init -w packages/c\\n\")), mdx(\"p\", null, \"Let \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"c\"), \" depends \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"b\"), \",\"), mdx(\"p\", null, \"Add\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"dependencies\\\": {\\n  \\\"a\\\":\\\"^1.0.0\\\",\\n  \\\"b\\\":\\\"^1.0.0\\\"\\n}\\n\")), mdx(\"p\", null, \"to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"packages/c/package.json\")), mdx(\"h3\", {\n    \"id\": \"install-changesets\"\n  }, \"Install changesets\"), mdx(\"p\", null, \"Also see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets/blob/main/docs/intro-to-using-changesets.md\"\n  }, \"here\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install -D @changesets/cli && npx changeset init\\n\")), mdx(\"p\", null, \"This action will add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".changeset\"), \" folder, and a couple of files to help you out:\"), mdx(\"p\", null, \"You should change the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".changeset/config.json\"), \" -> \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"baseBranch\"), \" to yourself main branch, also change \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"access\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\")), mdx(\"p\", null, \"Commit current files.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git add .\\ngit commit -m \\\"feat: init\\\"\\n\")), mdx(\"p\", null, \"That's done.\"), mdx(\"h3\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"h4\", {\n    \"id\": \"first-publish\"\n  }, \"First publish\"), mdx(\"p\", null, \"First publish you should just use the follow command to publish your module\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset publish\\n\")), mdx(\"h4\", {\n    \"id\": \"future-changes\"\n  }, \"Future changes\"), mdx(\"p\", null, \"You should see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets/blob/main/docs/detailed-explanation.md\"\n  }, \"changesets philosophy\")), mdx(\"p\", null, \"You should first create an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"intent to change\"), \", that said, before what ever changes you want to make, you should create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"intent change\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset\\n\")), mdx(\"p\", null, \"...Make some changes\"), mdx(\"p\", null, \"Now, generate new version, changeset will take care your dependences,\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note, by default, if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" upgrade from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.1\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.2\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"c\"), \" depends on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a@^1.0.1\"), \", then \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"c\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" will not change, cause npm will auto update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a@^1.0.1\"), \" to the last version \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.2\"), \"\\nif you want change to the exact version every time, you can set the config to\"), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \" \\\"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH\\\": {\\n    \\\"updateInternalDependents\\\": \\\"always\\\"\\n }\\n\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset version\\n\")), mdx(\"p\", null, \"Then, you can publish it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npx changeset publish\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git add .\\ngit commit -m \\\"chore: version\\\"\\ngit push --follow-tags\\n\")), mdx(\"h2\", {\n    \"id\": \"with-ci\"\n  }, \"With CI\"), mdx(\"p\", null, \"I'll use Github Actions as example.\"), mdx(\"p\", null, \"The CI workflow assume that you use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/git-workflows/\",\n    \"title\": \"Git workflows\"\n  }, \"git-workflows\"), \" as your git workflow.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note, you can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/atlassian/changesets/tree/main/packages/changelog-github\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"@changesets/changelog-github\")), \" as your changelog format log. with this, you can generate a log like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-b%401.1.0\"\n  }, \"this\"), \" , without this, then the log will only include \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-c%401.1.2\"\n  }, \"commit link\"), \" > \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm i -D @changesets/changelog-github\")), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"changelog\\\": [\\n    \\\"@changesets/changelog-github\\\",\\n    { \\\"repo\\\": \\\"theowenyoung/monorepo-example\\\" }\\n  ]\\n}\\n\"))), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a script in root \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"package.json\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"scripts\\\": {\\n    \\\"version-packages\\\": \\\"changeset version\\\",\\n    \\\"release\\\": \\\"changeset publish\\\"\\n  }\\n}\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create github actions workflows\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir -p .github/workflows\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"touch .github/workflows/release.yml\\n\")), mdx(\"p\", null, \"With the following content:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Release\\n\\non:\\n  workflow_dispatch:\\n  push:\\n    branches:\\n      - main\\n\\njobs:\\n  release:\\n    name: Release\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout Repo\\n        uses: actions/checkout@master\\n        with:\\n          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits\\n          fetch-depth: 0\\n\\n      - name: Setup Node.js 12.x\\n        uses: actions/setup-node@master\\n        with:\\n          node-version: 12.x\\n      - name: Setup NPM Latest\\n        run: npm i -g npm\\n      - name: Install Dependencies\\n        run: npm i\\n\\n      - name: Create Release Pull Request or Publish to npm\\n        uses: changesets/action@master\\n        with:\\n          # this expects you to have a script called release which does a build for your packages and calls changeset publish\\n          publish: npm run release\\n          version: npm run version-packages\\n        env:\\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NPM_TOKEN\"), \" to your github repo secret settings\")), mdx(\"p\", null, \"By \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/nodejs-tips/\",\n    \"title\": \"Nodejs Tips\"\n  }, \"nodejs-tips\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm token create\\n\")), mdx(\"p\", null, \"Done.\"), mdx(\"p\", null, \"Every time you use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx changeset\"), \" to generate a new changeset intent, and the change is pulled to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"main\"), \" branch, then CI will create a pull request to generate a new version, and after the pull request was merged, CI will publish npm packages, and create a new release.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/nodejs-monorepo/","title":"Nodejs Monorepo"}}]}},"pageContext":{"slug":"/nodejs-tips/","sidebarItems":[{"title":"Tags","items":[{"title":"#API","items":[{"title":"API Tokens","url":"/api-tokens/"}]},{"title":"#Approvals","items":[{"title":"æ—…è¡Œæ‰‹ç»­","url":"/travel-approvals/"}]},{"title":"#Auth","items":[{"title":"API Tokens","url":"/api-tokens/"},{"title":"Auth Gateway","url":"/auth-gateway/"},{"title":"Use ssh key for Git","url":"/git-sshkey/"}]},{"title":"#Awesome","items":[{"title":"Awesome Backup","url":"/awesome-backup/"},{"title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"title":"Awesome Bookmarks","url":"/awesome-bookmarks/"},{"title":"Awesome File Managers","url":"/awesome-file-managers/"},{"title":"Awesome Gatsby","url":"/awesome-gatsby/"},{"title":"Awesome Jackett Indexes","url":"/awesome-jackett-indexes/"},{"title":"Awesome JS Date","url":"/awesome-js-date/"},{"title":"Awesome Socials","url":"/awesome-socials/"},{"title":"Awesome Static Site Generator","url":"/awesome-static-site-generator/"},{"title":"Awesome UI","url":"/awesome-ui/"}]},{"title":"#BBR","items":[{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"}]},{"title":"#BT","items":[{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Bash","items":[{"title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"#Benchmark","items":[{"title":"Awesome Benchmark","url":"/awesome-benchmark/"}]},{"title":"#Caddy","items":[{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"}]},{"title":"#Commands","items":[{"title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"#Date","items":[{"title":"Awesome JS Date","url":"/awesome-js-date/"}]},{"title":"#Debian","items":[{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Debian Server Setup","url":"/debian-server-setup/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Docker","items":[{"title":"Docker Setup","url":"/docker-setup/"}]},{"title":"#Downloads","items":[{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Editors","items":[{"title":"Vim Tips","url":"/vim-tips/"},{"title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"#Files","items":[{"title":"Awesome File Managers","url":"/awesome-file-managers/"},{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"FileBrowser Setup","url":"/filebrowser-setup/"},{"title":"Rclone Setup","url":"/rclone-setup/"}]},{"title":"#Front-End","items":[{"title":"Awesome UI","url":"/awesome-ui/"},{"title":"SVG","url":"/svg/"}]},{"title":"#Git","items":[{"title":"Use ssh key for Git","url":"/git-sshkey/"},{"title":"Git Tips","url":"/git-tips/"},{"title":"Git workflows","url":"/git-workflows/"}]},{"title":"#Go","items":[{"title":"Go Template Tips","url":"/go-template-tips/"}]},{"title":"#Jackett","items":[{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Javascript","items":[{"title":"Awesome JS Date","url":"/awesome-js-date/"}]},{"title":"#Jellyfin","items":[{"title":"Jellyfin setup","url":"/jellyfin-setup/"}]},{"title":"#Linux","items":[{"title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"#Makefile - Templates - Workflows","items":[{"title":"Makefile Templates","url":"/makefile-templates/"}]},{"title":"#Medias","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"Jellyfin setup","url":"/jellyfin-setup/"},{"title":"Radarr Setup","url":"/radarr-setup/"},{"title":"Rclone Setup","url":"/rclone-setup/"},{"title":"Sonarr Setup","url":"/sonarr-setup/"},{"title":"Subtitles","url":"/subtitles/"},{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Metube","items":[{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Monorepo","items":[{"title":"Nodejs Monorepo","url":"/nodejs-monorepo/"}]},{"title":"#Nodejs","items":[{"title":"Nodejs Monorepo","url":"/nodejs-monorepo/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Nodejs Tips","url":"/nodejs-tips/"}]},{"title":"#Programming-Languages","items":[{"title":"Go Template Tips","url":"/go-template-tips/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Nodejs Tips","url":"/nodejs-tips/"}]},{"title":"#Proxies","items":[{"title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Radarr","items":[{"title":"Radarr Setup","url":"/radarr-setup/"}]},{"title":"#Rclone","items":[{"title":"Rclone Setup","url":"/rclone-setup/"}]},{"title":"#Rust","items":[{"title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#SSH","items":[{"title":"Use ssh key for Git","url":"/git-sshkey/"}]},{"title":"#SVG","items":[{"title":"SVG","url":"/svg/"}]},{"title":"#Self-Hosted","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"Jellyfin setup","url":"/jellyfin-setup/"},{"title":"Radarr Setup","url":"/radarr-setup/"},{"title":"Sonarr Setup","url":"/sonarr-setup/"},{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Server","items":[{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Debian Server Setup","url":"/debian-server-setup/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Setup","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Debian Server Setup","url":"/debian-server-setup/"},{"title":"Docker Setup","url":"/docker-setup/"},{"title":"FileBrowser Setup","url":"/filebrowser-setup/"},{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"Jellyfin setup","url":"/jellyfin-setup/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"title":"Radarr Setup","url":"/radarr-setup/"},{"title":"Rclone Setup","url":"/rclone-setup/"},{"title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Shadowsocks","items":[{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Social","items":[{"title":"Awesome Socials","url":"/awesome-socials/"}]},{"title":"#Sonarr","items":[{"title":"Sonarr Setup","url":"/sonarr-setup/"}]},{"title":"#Static-Site-Generator","items":[{"title":"Awesome Static Site Generator","url":"/awesome-static-site-generator/"}]},{"title":"#Subtitles","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Subtitles","url":"/subtitles/"}]},{"title":"#Templates","items":[{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Go Template Tips","url":"/go-template-tips/"}]},{"title":"#Tips","items":[{"title":"Common URL Scheme","url":"/common-url-scheme/"},{"title":"Git Tips","url":"/git-tips/"},{"title":"Go Template Tips","url":"/go-template-tips/"},{"title":"Linux Common Commands","url":"/linux-common-commands/"},{"title":"Nodejs Tips","url":"/nodejs-tips/"},{"title":"Vim Tips","url":"/vim-tips/"},{"title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"#Torrents","items":[{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Travel","items":[{"title":"æ—…è¡Œæ‰‹ç»­","url":"/travel-approvals/"}]},{"title":"#UI","items":[{"title":"Awesome UI","url":"/awesome-ui/"}]},{"title":"#URL","items":[{"title":"Common URL Scheme","url":"/common-url-scheme/"}]},{"title":"#VS Code","items":[{"title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"#Vim","items":[{"title":"Vim Tips","url":"/vim-tips/"}]},{"title":"#Workflows","items":[{"title":"Git workflows","url":"/git-workflows/"},{"title":"Nodejs Monorepo","url":"/nodejs-monorepo/"}]},{"title":"#Youtube","items":[{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#qBittorrent","items":[{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]}]}]}},
    "staticQueryHashes": ["1831670082","2962529501","3495835395","3583993237","476497397","900254191"]}