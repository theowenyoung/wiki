{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/","title":"Everything I Know by Owen"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Everything I Know by Owen\nseoTitle: Everything I Know by Owen - A Personal Knowledge Based Wiki\ndescription: Personal wiki, share everything I learned, and spend a lifetime updating it. I hope it'll be a good gift for my grandchildren.\nimage: ./attachments/graph-visualisation.jpg\nimageAlt: Graph Visualisation\ntags:\n  - Me\n---\n\n> A personal knowledge based wiki, where I share everything I know. I will be updating this wiki quite often as I use it myself daily both to keep an account of things I know as well as things I want to know and everything in-between.\n\nSince I found [Everything I know](https://wiki.nikitavoloboev.xyz), I was fascinated by this concept, about the wiki, second brain, lifetime notes, backlinks, tags. I realized that \"Yes, this is what I want to do\", I used to create many blogs, Tumblr, WordPress, Hexo, Hugo, Gatsbyjs, etc. But I do not post too many posts, cause there is a certain cost for a blog post. But not for note/wiki. And also I like tags, wiki links for connecting my notes, and there are no other themes that support this. So I created a new [Gatsby theme](https://github.com/theowenyoung/gatsby-theme-primer-wiki) for this. If you you want to build a wiki like this, you can get started from [this foam template](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki) or [obsidian template](https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki) if you prefer Obsidian.\n\nNow , I'am using [foam](https://github.com/foambubble/foam) and [obsidian](https://obsidian.md/) to edit the wiki.\n\nI hope it's a gift for my grandchildren(if I have :)\n\n[Read this wiki online.](https://wiki.owenyoung.com/)\n\n## Why I build this?\n\n- Knowledge that is not remembered/not found is useless\n- My memory is poor\n- I am eager to show(show off) what I know\n- Records make me feel like I'm not wasting my time\n- The cost of writing a blog is high, but the cost of writing notes is low\n- I need a non-vendor locked solution to motivate me to record permanently\n- Plain text is forever\n\n## How I build this?\n\nThe source and site are hosted on [GitHub - theowenyoung/wiki: Personal Knowledge Base Wiki, Everything I Know.](https://github.com/theowenyoung/wiki)\n\nI am proud to have developed my own theme [GitHub - theowenyoung/gatsby-theme-primer-wiki: Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki), If you want to build your own wiki like this, you can follow [GitHub - theowenyoung/foam-template-gatsby-theme-primer-wiki](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki) or [obsidian-template-gatsby-theme-primer-wiki](https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki) if you prefer Obsidian.\n\n## About Me\n\n- [[about]]\n- [[now]]\n- [[projects]]\n- [[goals-2021]]\n\n## Follow Me\n\n- Wiki [Everything I Know](https://wiki.owenyoung.com/)\n- Blog [Owen's Story](https://blog.owenyoung.com)\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- Twitter for Chinese [@owenyoung_zh](https://twitter.com/owenyoung_zh)\n- Github [@theowenyoung](https://github.com/theowenyoung)\n- Telegram [@theowenyoung](https://t.me/theowenyoung)\n- Instagram [@iamowenyoung](https://www.instagram.com/iamowenyoung/)\n- Patreon [@theowenyoung](https://www.patreon.com/theowenyoung)\n\n## Graph Visualisation Preview\n\n![Graph Visualisation](./attachments/graph-visualisation.jpg)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[about]: about.md \"About Me\"\n[now]: now.md \"What I’m doing now?\"\n[projects]: projects.md \"Projects\"\n[goals-2021]: goals-2021.md \"2021 Goals\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/about/","title":"About Me"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: About Me\ntags:\n  - Me\n---\n\nProgrammer, Freelancer, Workflow lover, Personal Finance Enthusiast\n\nSee what am I doing now at [here](now.md)\n\n## A failure of English learning\n\nI've learned English more than 10 years, but it still sucks, so I registered a Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung) for only English tweets, and this [wiki](https://wiki.owenyoung.com) and [blog](https://blog.owenyoung.com) to force me to use more English.\n\n## Programmer\n\nFull stack developer, main technology stack is javascript. Find more my projects [[projects]]\n\n## Follow me at the following platforms\n\n- Wiki [Everything I Know](https://wiki.owenyoung.com/)\n- Blog [Owen's Story](https://blog.owenyoung.com)\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- Twitter for Chinese [@owenyoung_zh](https://twitter.com/owenyoung_zh)\n- Github [@theowenyoung](https://github.com/theowenyoung)\n- Telegram [@theowenyoung](https://t.me/theowenyoung)\n- Instagram [@iamowenyoung](https://www.instagram.com/iamowenyoung/)\n- Patreon [@theowenyoung](https://www.patreon.com/theowenyoung)\n- Read.cv [@owenyoung](https://read.cv/owenyoung)\n\n## How I built my wiki?\n\n- [Source Repository](https://github.com/theowenyoung/wiki)\n\n## How I built my blog?\n\n- [How I Built my Blog?](https://blog.owenyoung.com/en/posts/how-i-built-my-blog/)\n- [Content Repository](https://github.com/theowenyoung/story)\n- [Site Repository](https://github.com/theowenyoung/theowenyoung.github.io)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[projects]: projects.md \"Projects\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/api-tokens/","title":"API Tokens"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - API\n  - Auth\n---\n\n# API Tokens\n\n## List\n\n- [API Tokens: A Tedious Survey](https://fly.io/blog/api-tokens-a-tedious-survey/)\n"},{"fields":{"slug":"/auth-gateway/","title":"Auth Gateway"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Auth\n---\n\n# Auth Gateway\n\n## List\n\n- [GitHub - linuxserver/docker-swag: Nginx webserver and reverse proxy with php support and a built-in Certbot (Let's Encrypt) client. It also contains fail2ban for intrusion prevention.](https://github.com/linuxserver/docker-swag)\n- [Setting Up Authelia With SWAG | LinuxServer.ioGitBook icon](https://www.linuxserver.io/blog/2020-08-26-setting-up-authelia)\n- [GitHub - authelia/authelia: The Single Sign-On Multi-Factor portal for web apps](https://github.com/authelia/authelia)\n- [GitHub - greenpau/caddy-auth-portal: Authentication Plugin for Caddy v2 implementing Form-Based, Basic, Local, LDAP, OpenID Connect, OAuth 2.0 (Github, Google, Facebook, Okta, etc.), SAML Authentication](https://github.com/greenpau/caddy-auth-portal)\n"},{"fields":{"slug":"/awesome-algorithm/","title":"Awesome Algorithm"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Algorithm\ntags:\n  - Awesome\n  - Algorithm\n  - Recommend\n---\n\nCurating awesome algorithm related resource.\n\n## List\n\n- [Gorse](https://github.com/zhenghaoz/gorse) - An open source recommender system service written in Go\n"},{"fields":{"slug":"/awesome-alternatives/","title":"Awesome Alternatives"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Alternatives\ntags:\n  - Awesome\n  - Alternatives\n---\n\nCurating awesome alternative resources.\n\n- [alternative-front-ends](https://github.com/mendel5/alternative-front-ends) - #Front-End\n- [Alternative Internet](https://github.com/redecentralize/alternative-internet)\n- Twitter\n  - [Nitter](https://github.com/zedeus/nitter) - Twitter front end alternative.\n  - Official instance: <https://nitter.net/> #Twitter\n  - [kizie](https://kizie.co/) - twitter redesign\n- Youtube\n  - [Invidious](https://github.com/iv-org/invidious) - Invidious is an alternative front-end to YouTube #Youtube\n  - Instances: <https://instances.invidious.io/>\n- [Open source Alternatives](https://www.btw.so/open-source-alternatives) - Curated 200+ open source alternatives to tools that businesses require in day-to-day operations. #Open-Source\n- [awesome-alternatives-in-rust](https://github.com/TaKO8Ki/awesome-alternatives-in-rust) - A curated list of replacements for existing software written in Rust #Rust\n- [Bloom](https://github.com/skerkour/bloom) - The simplest way to de-Google your life and business: Inbox, Calendar, Files, Contacts & much more\n\n- Discord\n  - [revolt](https://github.com/revoltchat/revolt)\n- Firebase\n  - [etesync](https://github.com/etesync/server)\n  - [nhost](https://github.com/nhost/nhost) - another firebase alternative.\n- Hacker News\n  - [hacker news open source in ruby](hhttps://github.com/lobsters/lobsters)\n- Netlify\n  - [Meli](https://github.com/getmeli/meli)\n"},{"fields":{"slug":"/awesome-answers/","title":"有意思的问题收集"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 有意思的问题收集\ntags:\n  - Awesome\n  - FAQ\n  - Answer\n  - 中文\n---\n\n收集网上看到的有意思的问题。\n\n## 来源\n\n- [reddit 热门提问中文版](https://ask.buzzing.cc/)\n\n## 人生\n\n- [你收到过的最糟糕的建议是什么？](https://www.reddit.com/r/AskReddit/comments/ph4pax/what_was_the_worst_advice_you_have_ever_received/)\n- [你个人发现有哪些生活小窍门可以改善你的生活？](https://www.reddit.com/r/AskReddit/comments/pk5x1q/what_life_hacks_have_you_personally_found_that/)\n\n## 两性\n\n- [除了安全套之外，其他的男性避孕选择？](https://www.reddit.com/r/TooAfraidToAsk/comments/pgwrjx/aside_from_condoms_why_are_there_no_birth_control/)\n\n## 通用\n\n- [什么东西疯狂流行而你却毫无兴趣？](https://www.reddit.com/r/AskReddit/comments/pguqh1/what_is_something_crazy_popular_that_you_have_no/)\n- [你对过去的互联网有什么怀念？](https://www.reddit.com/r/AskReddit/comments/pgqeq8/what_do_you_miss_about_the_internet_of_the_past/)\n"},{"fields":{"slug":"/awesome-apis/","title":"Awesome APIs"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome APIs\ntags:\n  - Awesome\n  - API\n---\n\nCurating APIs.\n\n## Interesting\n\n- [extract table](https://extract-table.com/) - Extract a table from an image or a PDF\n"},{"fields":{"slug":"/awesome-applications/","title":"Awesome Applications"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Applications\ntags:\n  - Awesome\n  - Applications\n---\n\nCurating awesome applications.\n\n## Only Macos\n\n- [Radar](https://getradar.co/) - Menu bar app to check the things that matter to you\n\n## iOS\n\n- [Logo BeReal](https://bere.al/en) - Your Friends for Real. Everyday at a random time, everyone is notified simultaneously to capture and share a Photo in 2 Minutes. A new and unique way to discover who your friends really are in their daily life.\n- [HouseBook](https://apps.apple.com/us/app/housebook/id1489866496?utm_campaign=newsletter-2020-07-17&utm_medium=email&utm_source=10words) - Keep track of your stuff.\n- [Your life weekly calendar](https://apps.apple.com/app/id1474476414?utm_campaign=newsletter-2020-03-20&utm_medium=email&utm_source=10words) - List your life by weeks. every week is a dot.\n- [使命闹钟](https://apps.apple.com/cn/app/alarmy-alarm-clock-%E4%BD%BF%E5%91%BD%E9%97%B9%E9%92%9F/id1163786766) - Alarmy 可以帮助您先起床，并让您每天早上成功完成所有“要做的事情”。借助各种有趣的任务和响亮的随机铃声，您可以轻松唤醒并刷新每天养成成功习惯的习惯\n\n## Web\n\n- [Stupid RSS Reader](https://github.com/gurov/stupid-rss-reader) - ⊕ PWA RSS client on Angular 11\n"},{"fields":{"slug":"/awesome-automations/","title":"Awesome Automations"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Automations\ntags:\n  - Awesome\n  - Automations\n  - Self-Hosted\n---\n\n## PAAS\n\n- [cloudron](https://www.cloudron.io/index.html)\n- [sandstorm](https://sandstorm.io/)\n- [freedombox](https://freedombox.org/)\n"},{"fields":{"slug":"/awesome-backup/","title":"Awesome Backup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Backup\n\n## List\n\n- [Save-to-the-Wayback-Machine](https://github.com/VerifiedJoseph/Save-to-the-Wayback-Machine) - A browser extension that allow you to save the webpage to wayback machine\n"},{"fields":{"slug":"/awesome-benchmark/","title":"Awesome Benchmark"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Benchmark\n  - Proxies\n  - Bash\n  - Awesome\n---\n\n# Awesome Benchmark\n\n## Proxy\n\n- [GitHub - NickMRamirez/Proxy-Benchmarks: Benchmarks for several proxies](https://github.com/NickMRamirez/Proxy-Benchmarks)\n\n## Templates\n\n- [rust templates](https://github.com/djc/template-benchmarks-rs)\n"},{"fields":{"slug":"/awesome-bookmarks/","title":"Awesome Bookmarks"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Bookmarks\n\n## List\n\n- [shiori](https://github.com/go-shiori/shiori) - Pocket open-source alternative.\n"},{"fields":{"slug":"/awesome-browsers/","title":"Awesome Browsers"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Browser\n---\n\n# Awesome Browsers\n\nCurating awesome browsers.\n\n## Common List\n\n- [Microsoft Edge](https://www.microsoft.com/en-us/edge) - Microsoft Edge is the fast and secure browser, which I'm using now. its the best for now.\n- [Vivaldi Browser | Now with built-in Translate, Mail, and Calendar](https://vivaldi.com/)\n- [Waterfox](https://www.waterfox.net/) - The way to surf the web. Striking the perfect balance of privacy and useability.\n\n## For developer\n\n- [Blisk](https://blisk.io/)- Cross-Device Testing Done Right\n- [bonsai](https://bonsaibrowser.com/) - Web-browser for research that helps programmers think clearly.\n\n## Paid Browser\n\n- https://sizzy.co/ - The browser for developers, view one page with multiple devices once\n- https://www.meetsidekick.com/ - The fastest browser for work ever made, Designed to be the ultimate online work experience, it brings together your team and every web tool you use – all in one interface. Actually, not so fast, but the UI, the workflow, the sidebar, will give your new experience.\n"},{"fields":{"slug":"/awesome-chat/","title":"Awesome Chat"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Chat\ntags:\n  - Awesome\n  - Chat\n---\n\nCurating awesome chat resources.\n\n## Chat Manage\n\n- [airy](https://github.com/airyhq/airy) - Open source conversational platform to power conversations with an open source Live Chat, Messengers like Facebook Messenger, WhatsApp and more\n"},{"fields":{"slug":"/awesome-code-learning/","title":"Awesome Code Learning"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Code\n  - Learning\n---\n\n# Awesome Code Learning\n\nCurating awesome code learning resources.\n\n## List\n\n- [Free code camp](https://www.freecodecamp.org/) - Learn to code — for free.\n"},{"fields":{"slug":"/awesome-communities/","title":"收集一些有意思的社区"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntags:\n  - Awesome\n  - Communities\n  - Social\n  - 中文\n---\n\n# 收集一些有意思的社区\n\n收集一些有意思的社区，人间观察。\n\n## Index\n\n- [Hive Index](https://thehiveindex.com/) - Find online communities, find your people.\n- [Get community list](https://getcommunitylist.com/) - Find hundreds of Communities to Promote your Product $49 #Paid\n- [community list](https://www.notion.so/Community-908921f2f6584ae990bea68b048b8ea9) - List of some active community you must follow, Free\n- [Reddit List](http://redditlist.com/sfw) - Reddit subs trends, categories\n- [reddit subreddistats](https://subredditstats.com/)\n\n## 服务器\n\n- [Low End Talk](https://lowendtalk.com/) - 国外的底价主机论坛，上面经常会有主机商提供的活动\n- [全球主机交流](https://hostloc.com/) - 国内的主机论坛\n\n## 八卦\n\n- [豆瓣鹅组](https://www.douban.com/group/blabla/) - 豆瓣鹅组，讨论明星八卦等。目前为仅登录可见，游客无法搜索和进入\n- [小象乐园](https://www.douban.com/group/613560/) - 小象乐园，前小象八卦，讨论网红的豆瓣小组\n\n## 问题\n\n- [TooAfraidToAsk reddit 小组](https://www.reddit.com/r/TooAfraidToAsk/) - 太害怕而不敢问的问题，各种政治不正确的问题\n\n## 关系建议\n\n- [关系建议小组 reddit 小组](https://www.reddit.com/r/relationshipadvice/) - 各种关系的建议，讨论\n\n## Maker\n\n- [Make.rs](https://make.rs/) - What are you working on?\n- [Something I Made Reddit](https://www.reddit.com/r/somethingimade/)\n- [Side Project](https://www.reddit.com/r/SideProject)\n- [Get Maker Log](https://getmakerlog.com/) - How makers stay productive\n\n## Developers\n\n- [Make friends making the web. ✨](https://webwide.chat/) - Webwide is an inclusive, supportive community of professional and hobbyist web designers & developers.\n\n## Foods\n\n- [速食食品爱好者联盟-豆瓣小组](https://www.douban.com/group/682274/)\n\n## 迷惑\n\n- [神人](https://www.reddit.com/r/nextfuckinglevel/)\n"},{"fields":{"slug":"/awesome-databases/","title":"Awesome Databases"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Databases\ntags:\n  - Awesome\n  - Database\n---\n\nCurating awesome database resources.\n\n## ORM\n\n- [prisma](https://github.com/prisma/prisma) - Next-generation ORM for Node.js & TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite & MongoDB (Preview)\n\n## Offline\n\n- [rxdb](https://github.com/pubkey/rxdb) - 🔄 A realtime Database for JavaScript Applications\n- [couchdb](https://github.com/apache/couchdb) - Seamless multi-master syncing database with an intuitive HTTP/JSON API, designed for reliability\n- [localforage](https://github.com/localForage/localForage) - 💾 Offline storage, improved. Wraps IndexedDB, WebSQL, or localStorage using a simple but powerful API.\n- [kinto](https://github.com/Kinto/kinto.js/) - An Offline-First JavaScript Client for Kinto.\n- [puchdb](https://github.com/pouchdb/pouchdb) - 🐨 - PouchDB is a pocket-sized database.\n\n## Tools\n\n- [sqlite playgound](https://sqlime.org/)\n- [supabase/postgres](https://github.com/supabase/postgres) - Unmodified Postgres with some useful plugins\n"},{"fields":{"slug":"/awesome-decentralization/","title":"Awesome Decentralization"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Decentralization\ntags:\n  - Awesome\n  - Decentralization\n---\n\nCurating awesome decentralized applications.\n\n## List\n\n- [awesome-decentralized-web](https://github.com/gdamdam/awesome-decentralized-web) - A curated list about the decentralized technologies and tools to develop decentralized applications.\n\n## Social\n\n- [mastodon](https://github.com/mastodon/mastodon) - twitter open-source alternatives `ruby`\n- [pleroma](https://git.pleroma.social/pleroma/pleroma/) - another twitter open-source alternatives `erlang`\n  - [soapbox](https://gitlab.com/soapbox-pub/soapbox-fe) - a fronend for pleroma\n  - [docker-pleroma](https://github.com/angristan/docker-pleroma) -docker pleroma\n- [okuna](https://github.com/OkunaOrg/okuna-api) - another forum. `python`\n- [twtxt - yarn](https://git.mills.io/yarnsocial/yarn) - yarn is a Self-Hosted, Twitter™-like Decentralised micro-Blogging platform. No ads, no tracking, your content, your data!\n  - [twtxt](https://github.com/buckket/twtxt) - origianl twtxt\n  - [tt](https://git.isobeef.org/lyse/tt/) - a python cli for twtxt\n  - [jenny](https://www.uninformativ.de/git/jenny/file/README.html) - another python cli for twtxt\n  - [mutt](https://gitlab.com/muttmua/mutt) - simillar but for email.\n  - [jenny + mutt: Getting started with twtxt](https://www.uninformativ.de/blog/postings/2021-09-19/0/POSTING-en.html)\n  - [rusttxt](https://github.com/rustwtxt/rustwtxt)\n  - [twtxt-registry](https://github.com/DracoBlue/twtxt-registry)\n  - [twtxt xyz](http://twtxt.xyz/) - A twtxt user list\n    - [source](https://github.com/reednj/twtxt-directory)\n\n## Mail\n\n- [MNM](https://mnmnotmail.org/) - Email alternatives\n"},{"fields":{"slug":"/awesome-deno/","title":"Awesome Deno"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Deno\ntags:\n  - Awesome\n  - Deno\n---\n\n## Library\n\n- [aleph](https://github.com/alephjs/aleph.js) - The Full-stack Framework in Deno.\n- [ultra](https://github.com/exhibitionist-digital/ultra)\n"},{"fields":{"slug":"/awesome-editors/","title":"Awesome-Editors"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Editors\n  - Tools\n---\n\nCurating awesome editors tools.\n\nAll see [vscode-tips](vscode-tips.md)\n\n\n## AI Enhance\n\n- [GitHub Copilot · Your AI pair programmer](https://copilot.github.com/) - Github Copilot"},{"fields":{"slug":"/awesome-emails.md/","title":"Awesome Emails"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Emails\ntags:\n  - Awesome\n  - Email\n---\n\nCurating awesome email letter.\n\n## Startups\n\n- [laskie](https://laskie.substack.com/) - We create products and services to save your company time and make you more money.\n"},{"fields":{"slug":"/awesome-english-learning/","title":"收集英语学习工具"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - English\n  - Learning\n---\n\n# 收集英语学习工具\n\n收集英语学习工具\n\n## 交流，笔友\n\n- [My Language Change](https://www.mylanguageexchange.com/Search.asp?selX3=1&selTxtChat=true) - 找到语言交换的笔友，按照最近上线时间排序，可以按照不同条件筛选。\n- [多语言在线聊天室 linguaroom 免费](https://www.linguaroom.io/)\n\n## 工具\n\n- [Anki](https://apps.ankiweb.net/) - Anki, 卡片背诵，记忆，按照频率每天背诵一些卡片。\n- [Eudic](https://www.eudic.net/v4/en/app/eudic) - 欧陆词典 mac 版，屏幕取词特别方便，选中自动查询词典并朗读。\n"},{"fields":{"slug":"/awesome-explore/","title":"Awesome Explore"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Explore\n---\n\n# Awesome Explore\n\nCurating the place for explore interesting things.\n\n## Product\n\n- [Product Hunt Trending (producthunt-trending.js.org)](https://producthunt-trending.js.org/?range=monthly) - Browser producthunk by ranking, weekly, monthly, yearly.\n- [r/SideProject - A community for sharing side projects (reddit.com)](https://www.reddit.com/r/SideProject/)\n- [Product Hunt](https://www.producthunt.com/) - The best new products in tech\n- [circlebatch](https://circlebatch.com/) - Circlebatch is a collaborative community to practice skills and work on projects with others, 寻找业余项目的合伙人\n- [Hacker news show 中文](https://hn.buzzing.cc/tags/show-hn)\n- [Hacker News Show](https://news.ycombinator.com/show)\n  - [hn show sort by points](https://hn.algolia.com/?dateRange=pastMonth&page=0&prefix=true&query=show%20hn&sort=byPopularity&type=story)\n- [Betalist](https://betalist.com/) - Discover tomorrow's startups, today.\n- [startupbase](https://startupbase.io/) - Discover early access products.\n- [10words](https://10words.io/) - 10words: Discover new apps and startups in 10 words or less\n- [Read.cv explore](https://read.cv/explore) - profile 聚合,个人简历聚合\n\n## Self-Hosted\n\n- [Self-Hosted Reddit](https://www.reddit.com/r/selfhosted/)\n- [Track Awesome-Selfhosted](https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/)\n\n## Decentralized\n\n- [awesome-decentralized](https://github.com/croqaz/awesome-decentralized)\n\n## Trends\n\n- [Discover Exploding Topics](https://explodingtopics.com/) - We surface rapidly growing topics before they take off.\n- [treendly](https://treendly.com/) - Discover rising trends you haven't heard of\n\n## Github\n\n- [GitHubDaily](https://github.com/GitHubDaily/GitHubDaily) - GitHubDaily 分享内容定期整理与分类。\n\n## Tech\n\n- [Hacker News](https://news.ycombinator.com/news)\n- [ACM Tech News](https://technews.acm.org)\n- [indie hackers](https://www.indiehackers.com/)\n\n## 中文\n\n- [用中文浏览 Product Hunt 热门 App，网站和产品 - Product Hunt 热门 (buzzing.cc)](https://ph.buzzing.cc/)\n- [用中文浏览 reddit 业余项目讨论 - 业余项目分享交流 (buzzing.cc)](https://sideproject.buzzing.cc/)\n- [沉迷优秀 App 不能自拔-豆瓣小组 ](https://www.douban.com/group/689011/)\n- [这小程序针不戳啊-豆瓣小组](https://www.douban.com/group/718741/)\n- [分享创造-v2ex](https://v2ex.com/go/create)\n- [分享发现-v2ex](https://v2ex.com/go/share)\n\n## 信息订阅/推送\n\n- [Cortadomail](https://cortadomail.com/) - 免费版的 Mailbrew\n\n## Fun\n\n- [病毒步行](https://www.viralwalk.com/) - 通过互联网漫步发现新网站\n\n## Life\n\n- [Life Hacker](https://lifehacker.com/) - 生活黑客，提高生活质量的方法\n\n## Image\n\n- [deviantart](https://www.deviantart.com/) - 艺术家社区\n\n## Maker\n\n- [Get Maker Log](https://getmakerlog.com/) - How makers stay productive\n\n## Indexes\n\n- [[awesome-indexes]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[awesome-indexes]: awesome-indexes.md \"Awesome Indexes\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/awesome-file-managers/","title":"Awesome File Managers"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Files\n---\n\n# Awesome File Managers\n\n## List\n\n- [GitHub - filebrowser/filebrowser: 📂 Web File Browser](https://github.com/filebrowser/filebrowser)\n"},{"fields":{"slug":"/awesome-flutter/","title":"Awesome Flutter"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Flutter\ntags:\n  - Awesome\n  - Flutter\n---\n\nCurating Flutter resources.\n\n## List\n\n- [awesome flutter](https://github.com/Solido/awesome-flutter)\n  - [track](https://www.trackawesomelist.com/Solido/awesome-flutter/readme/)\n\n## Roadmap\n\n- [flutter roadmap](https://github.com/olexale/flutter_roadmap)\n\n## 中文资源\n\n- [Flutter 实战](https://book.flutterchina.club/)\n- [Flutter 视频教程-从零到上架](https://www.bilibili.com/video/BV1pp4y187w6?p=2)\n- [用 flutter 构建一个聊天应用界面-谷歌官方出品](https://codelabs.developers.google.com/codelabs/flutter/#0)\n- [Dart 语言概览](https://www.dartcn.com/guides/language/language-tour)\n"},{"fields":{"slug":"/awesome-free/","title":"Awesome Free"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Free\ntags:\n  - Free\n  - Awesome\n  - Tools\n---\n\n## Mail\n\n- [Mailtie](https://mailtie.com) - Free Email Forwarding for Your Domain\n- [FakerMail](https://fakermail.com) - Unlimited Temporary Email Provider\n\n## Git\n\n- [ Codeberg.org ](https://codeberg.org) - free git, privacy\n\n## Video\n\n- [Create amazing videos with our online video editor - Mastershot](https://mastershot.app)\n\n## Domain\n\n- [freedns](https://freedns.afraid.org/domain/registry/) - free subdomain dns\n\n## Name\n\n- [namae](https://namae.dev) - name checking\n\n## Free Paid Wall\n\n- [Article reader](https://t.me/chotamreaderbot) - A telegram bot that can access paid wall article with a instant view article."},{"fields":{"slug":"/awesome-gatsby/","title":"Awesome Gatsby"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Gatsby\n\n## Plugins\n\n- [GitHub - kraynel/gatsby-transformer-gitinfo](https://github.com/kraynel/gatsby-transformer-gitinfo) - Add git info to file, so you can get last update date for your files.\n- [gatsby-plugin-local-search](https://github.com/angeloashmore/gatsby-plugin-local-search) - Gatsby plugin for providing client-side search for data available in Gatsby's GraphQL layer using a variety of engines\n\n## Tutorials\n\n[How to get 'Last Update Date' of a blog post in GATSBY.js - Stack Overflow](https://stackoverflow.com/questions/56025679/how-to-get-last-update-date-of-a-blog-post-in-gatsby-js)\n"},{"fields":{"slug":"/awesome-indexes/","title":"Awesome Indexes"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Indexes\ntags:\n  - Awesome\n  - Indexes\n  - Trends\n---\n\nCurating awesome indexes about trends.\n\n## Applications\n\n- [Top Ranked iOS App Store Apps](https://appfigures.com/top-apps/ios-app-store/united-states/iphone/top-overall)\n- [app store rank](https://www.similarweb.com/zh/apps/trends/apple/store-rank/us/all/top-free/iphone/)\n\n## Socials\n\n- [Find Reddit](findareddit.com) - Find reddit\n"},{"fields":{"slug":"/awesome-interview/","title":"Awesome Interview"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Interview\ntags:\n  - Awesome\n  - Interview\n---\n\nCurating interview preparation materials.\n\n## Resources\n\n- [Tech Interview Handbook](https://techinterviewhandbook.org/)\n"},{"fields":{"slug":"/awesome-investing/","title":"Awesome Investing"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Investing\n  - Stocks\n---\n\n# Awesome Investing\nCurating investing related resources.\n\n\n## Communities\n\n- [Investing Communities](https://thehiveindex.com/topics/investing/)"},{"fields":{"slug":"/awesome-jackett-indexes/","title":"Awesome Jackett Indexes"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Jackett Indexes\n\n## List\n\n- EZTV\n- RARBG\n- YTS\n\n## References\n\n[高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n"},{"fields":{"slug":"/awesome-jobs/","title":"Awesome Jobs"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Jobs\ntags:\n  - Awesome\n  - Jobs\n---\n\nCurating awesome jobs.\n\n## List\n\n- [sidequestjobs](https://sidequestjobs.com/) - 非全职工作岗位收集\n- [relocate](https://relocate.me/) - 在国外获得一份职位\n- [free resume writor service](https://www.leetresumes.com/)\n"},{"fields":{"slug":"/awesome-js-date/","title":"Awesome JS Date"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Javascript\n  - Date\n---\n\n# Awesome JS Date\n\n## Articles\n\n[You probably don't need Moment.js](https://dev.to/aminnairi/you-probably-don-t-need-moment-js-493m)\n\n## Github\n\n[GitHub - you-dont-need/You-Dont-Need-Momentjs: List of functions which you can use to replace moment.js + ESLint Plugin](https://github.com/you-dont-need/You-Dont-Need-Momentjs)\n"},{"fields":{"slug":"/awesome-js/","title":"收集 Javascript 里好用的库"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集 Javascript 里好用的库\nlanguage: zh\ntags:\n  - Awesome\n  - Javascript\n  - 中文\n---\n\n收集用过的，好用的 Javascipt 库。\n\n## 其他 Javascript 相关的 Awesome List\n\n- [[awesome-js-date]]\n- [[awesome-gatsby]]\n\n## 文章\n\n- [Are we web yet?](https://www.arewewebyet.org/) - web 框架的挑选\n\n## UI 框架\n\n- [GitHub - system-ui/theme-ui: Build consistent, themeable React apps based on constraint-based design principles](https://github.com/system-ui/theme-ui) - ThemeUI, 我愿意称之为真正的以配置主题为核心的 UI 框架，基本所有的元素样式都是配置出来的，页面 UI 里基本不怎么需要内联样式了，缺点（也可以说是优点）是内置组件少，适合自定义 UI 风格。\n\n## UI 组件\n\n- [Tippyjs](https://github.com/atomiks/tippyjs) - 弹出提示，tips, tooltip, popup\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[awesome-js-date]: awesome-js-date.md \"Awesome JS Date\"\n[awesome-gatsby]: awesome-gatsby.md \"Awesome Gatsby\"\n[//end]: # \"Autogenerated link references\"\n\n## 语言\n\n- [imba](https://github.com/imba/imba) - IMBA 语言，全栈语言，最终编译为 Javascript，内置 html,style\n\n## 性能测试\n\n- [js 框架性能测试](https://github.com/krausest/js-framework-benchmark)\n- [ui bench](https://localvoid.github.io/uibench/) - another ui bench\n\n## 前端框架\n\n- [solid](https://github.com/solidjs/solid) - react like 的写法，但是性能极大的提高\n  - [solid real world example](https://github.com/solidjs/solid-realworld)\n  - [solid headless ui](https://github.com/LXSMNSYC/solid-headless)\n- [lit](https://github.com/lit/lit) - Lit is a simple library for building fast, lightweight web components.\n- [redwood](https://github.com/redwoodjs/redwood) - Bringing full-stack to the Jamstack.\n- [svelte](https://github.com/sveltejs/svelte) - Cybernetically enhanced web apps\n  - [sapper](https://github.com/sveltejs/sapper) - The next small thing in web development, powered by Svelte\n  - [svelte kit](https://github.com/sveltejs/kit)\n\n## 汇总资源\n\n- [awesome-react](https://github.com/enaqx/awesome-react)\n"},{"fields":{"slug":"/awesome-kol/","title":"Awesome KOL"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome KOL\ntags:\n  - Awesome\n  - KOL\n---\n\n## Twitter\n\n- [Next Fucking Level](https://twitter.com/nextfukinglevel)\n"},{"fields":{"slug":"/awesome-list/","title":"Awesome List"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome List\ntags:\n  - Awesome\n  - List\n---\n\nCurating the best of list on the internet with good summaries from others.\n\n## Awesome\n\n- [GitHub - sindresorhus/awesome: 😎 Awesome lists about all kinds of interesting topics](https://github.com/sindresorhus/awesome)\n\n## Social\n\n- [Reddit List](https://redditlist.io) - Discover Subreddits for different topics\n- [awesome-decentralized](https://github.com/croqaz/awesome-decentralized)\n\n## Communities\n\n- [Hive Index](https://thehiveindex.com/) - Find online communities, find your people.\n\n## Startup\n\n- [STARTUP LAUNCH LIST](https://startuplaunchlist.com) - A​rticle list you need to read before launching a startup.\n\n## Freelancer\n\n- [Freelancer Resources List](https://nira.com/templates/freelancer-templates/) - All the free resources and templates you need to get work done as a freelancer\n\n## HR\n\n- [Nomad List](https://nomadlist.com) - The biggest crowdsourced list of cities in the world to help you choose where to go next.\n\n## Market\n\n- [Marketing Resources List](https://nira.com/templates/marketing-templates/) - The biggest collection of free marketing resources\n\n## API\n\n- [API list](https://apilist.fun/) - A collective list of APIs\n\n## Travel\n\n- [Visa List](https://visalist.io) - Know where you can travel with your passport tension free\n- [What is one country that you will never visit again?](https://www.reddit.com/r/AskReddit/comments/om38bx/what_is_one_country_that_you_will_never_visit/)\n- [What is one country you will gladly visit again? : AskReddit](https://www.reddit.com/r/AskReddit/comments/omnrxb/what_is_one_country_you_will_gladly_visit_again/)\n\n## Media\n\n- [Tech Blogs List](https://airtable.com/shriIvyyV3gAJf0x4/tblcakhoBi0A33QhB/viwWIaPD1CBQtE5e1) - Curated list of 3,800+ tech journalists\n"},{"fields":{"slug":"/awesome-low-code/","title":"常见的低代码/无代码列表"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 常见的低代码/无代码列表\ntags:\n  - Awesome\n  - Low-Code\n---\n\n收集常见的无代码/低代码资源。\n\n## Selfhosted\n\n- [lowdefy](https://github.com/lowdefy/lowdefy) - An open-source, self-hosted, low-code framework to build internal tools, web apps, admin panels, BI dashboards, workflows, and CRUD apps with YAML or JSON. 用 yaml 生成内部工具\n"},{"fields":{"slug":"/awesome-movies/","title":"值得观看的电影"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 值得观看的电影\nlanguage: zh\ntags:\n  - Movies\n  - Awesome\n  - 中文\n---\n\n## List\n"},{"fields":{"slug":"/awesome-news/","title":"Awesome News"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome News\ntags:\n  - Awesome\n  - News\n---\n\nCurating news sources.\n\n## Chinese\n\n- [thenewslens](https://www.thenewslens.com/) - Taiwan indie media\n- [The Stand News](https://www.thestandnews.com/) - Hong Kong indie media\n- [The Initium News ](https://theinitium.com/) - Taiwan/Hong Kong media\n- [HK CNews](https://www.hkcnews.com/) - Hong Kong indie media\n"},{"fields":{"slug":"/awesome-notes/","title":"Awesome Notes"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Notes\ntags:\n  - Awesome\n  - Notes\n  - Tools\n---\n\n## VS Code Extensions\n\n- [GitHub - foambubble/foam: A personal knowledge management and sharing system for VSCode](https://github.com/foambubble/foam)\n\n## Applications\n\n- [Obsidian](https://obsidian.md/)\n"},{"fields":{"slug":"/awesome-p2p/","title":"Awesome P2P"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - P2P\n---\n\n# Awesome P2P\n\nCurating P2P things.\n\n## List\n\n- [Awesome Peer-to-Peer](https://github.com/kgryte/awesome-peer-to-peer) - A list of peer-to-peer resources.\n- [awesome-decentralized-web](https://github.com/gdamdam/awesome-decentralized-web) - A curated list about the decentralized technologies and tools to develop decentralized applications.\n- [awesome-blockchains](https://github.com/openblockchains/awesome-blockchains)\n\n## Database\n\n- [Gun](https://github.com/amark/gun) - An open source cybersecurity protocol for syncing decentralized graph data.\n- [remotestorage](https://github.com/remotestorage/remotestorage.js) - An open protocol for per-user storage on the Web\n  - [apps](https://remotestorage.io/apps/)\n\n## Protocol\n\n- [Scuttlebutt](https://scuttlebutt.nz/get-started/) - Scuttlebutt is a social network and it works like others social apps we already use. The key difference is that it is decentralised, meaning not centralised\n- [urbit](https://urbit.org/) - A clean-slate OS and network for the 21st century.\n\n## Torrents\n\n- [exatorrent](https://github.com/varbhat/exatorrent) - Self-hostable , easy-to-use , lightweight and feature-rich torrent client written in Go . It comes with beautiful Web UI and Optional Multi-User Support . Run Locally or Host in Server . Open/Download/Stream Torrents in Browser Right Away!\n- [qBittorrent](https://www.qbittorrent.org/) - The qBittorrent project aims to provide an open-source software alternative to µTorrent.\n"},{"fields":{"slug":"/awesome-privacy/","title":"Awesome Privacy"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Privacy\ntags:\n  - Awesome\n  - Privacy\n---\n\nCurating awesome privacy things.\n\n## Resource\n\n- [anonymousplanet](https://anonymousplanet.org/guide.html) - The Hitchhiker’s Guide to Online Anonymity\n\n## Alternatives\n\n- [Nitter](https://github.com/zedeus/nitter) - Twitter front end alternative.\n  - Official instance: <https://nitter.net/>\n- [Invidious](https://github.com/iv-org/invidious) - Invidious is an alternative front-end to YouTube\n  - Instances: <https://instances.invidious.io/>\n"},{"fields":{"slug":"/awesome-products/","title":"Awesome Products"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Social\n  - Products\n---\n\n# Awesome Products\n\nCurating interesting Products\n\n## List\n\n- [Sincerely Me](https://www.sincerelyme.us/) - Write and send a real letter to someone you ❤️, Just type your letter, specify addresses, and we’ll send it via USPS right away.\n"},{"fields":{"slug":"/awesome-quotes/","title":"收集发人深省的话"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 收集发人深省的话\ntags:\n  - Awesome\n  - Quotes\n  - 中文\n---\n\n收集看到的一些有意思的话。值得高亮再次回味的话。\n\n- > 80 岁的富人在经营国家和公司，而贫穷的 80 岁老人被认为不适合工作。\n  > by [nothing_in_my_mind](https://www.reddit.com/r/TooAfraidToAsk/comments/pgvecw/how_are_7080_year_olds_generally_regarded_as/hbffv43/?utm_source=reddit&utm_medium=web2x&context=3)\n- > “川陀的覆灭，”谢顿说，“是任何努力都无法阻止的。然而，要使它加速却非常容易。\n  > by 《银河帝国》\n"},{"fields":{"slug":"/awesome-rss/","title":"Awesome RSS"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome RSS\ntags:\n  - RSS\n  - Awesome\n---\n\n## Feed Tools\n\n- [feddsmage](https://www.feedsmage.com/) - I found 40 feeds in your timeline ✨ 5 are newsletters 📨 11 are slow feeds 🐌 (usually lost in the noise).\n"},{"fields":{"slug":"/awesome-rust/","title":"Awesome Rust"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Rust\ntags:\n  - Awesome\n  - Rust\n  - Learning\n---\n\nCurating awesome rust resources.\n\n## Resources\n\n- [Easy Rust](https://github.com/Dhghomon/easy_rust) - A book that let you learn rust easy, rust explained using easy English, for non-English native.\n  - [中文版](https://kumakichi.github.io/easy_rust_chs/Chapter_0.html)\n- [rustlings](https://github.com/rust-lang/rustlings/) - 🦀 Small exercises to get you used to reading and writing Rust code!\n  - [Learning Rust by Working Through the Rustlings Exercises](https://egghead.io/courses/learning-rust-by-solving-the-rustlings-exercises-a722)\n- [GitHub - Mercateo/rust-for-node-developers: An introduction to the Rust programming language for Node developers.](https://github.com/Mercateo/rust-for-node-developers)\n- [Rust by Example](https://doc.rust-lang.org/rust-by-example/index.html)\n- [rust-learning](https://github.com/ctjhoa/rust-learning) - A bunch of links to blog posts, articles, videos, etc for learning Rust\n- [rust cookbook](https://github.com/rust-lang-nursery/rust-cookbook) - This Rust Cookbook is a collection of simple Rust examples that demonstrate good practices to accomplish common programming tasks, using the crates of the Rust ecosystem.\n- [Rust Design Patterns](https://github.com/rust-unofficial/patterns) - A catalogue of Rust design patterns, anti-patterns and idioms\n- [Microsoft Rust First Class](https://docs.microsoft.com/en-us/learn/paths/rust-first-steps/)\n  - [中文版](https://docs.microsoft.com/zh-cn/learn/paths/rust-first-steps/)\n- [awesome-alternatives-in-rust](https://github.com/TaKO8Ki/awesome-alternatives-in-rust) - A curated list of replacements for existing software written in Rust\n- [Rust Language Cheat Sheet](https://cheats.rs/)\n- [Rust Latam: learn procedural macros workshop](https://github.com/dtolnay/proc-macro-workshop)\n- [Native Rust support on Cloudflare Workers](https://blog.cloudflare.com/workers-rust-sdk/)\n- [rust error handling](https://www.lpalmieri.com/posts/error-handling-rust/)\n- [actix examples](https://github.com/actix/examples)\n- [Rust 程序设计语言中文版](https://kaisery.github.io/trpl-zh-cn/)\n\n## Answeres\n\n- [【翻译】 Rust 中的 String 和&str](https://zhuanlan.zhihu.com/p/123278299)\n- [【翻译】细谈 Rust 的所有权](https://zhuanlan.zhihu.com/p/115651233)\n- [【译】Rust 宏：教程与示例（二）](https://zhuanlan.zhihu.com/p/356427780)\n- [如何合并 error](https://stackoverflow.com/questions/52438988/what-is-the-most-idiomatic-way-to-merge-two-error-types)\n- [rust 配置文件指南](https://blog.logrocket.com/configuration-management-in-rust-web-services/)\n\n## Communities\n\n- [Rust Reddit](https://www.reddit.com/r/rust/top/?t=year)\n\n## Tools\n\n- [cargo-generate](https://github.com/cargo-generate/cargo-generate) - cargo, make me a project\n- [wasm-pack](https://github.com/rustwasm/wasm-pack) - your favorite rust -> wasm workflow tool!\n- [gitoxide](https://github.com/Byron/gitoxide) - Git in Rust\n- [Cargo Watch](https://github.com/watchexec/cargo-watch) - Cargo watch, hot reload rust.\n- [Cargo Make](https://github.com/sagiegurari/cargo-make) - Rust task runner and build tool.\n- [roapi](https://github.com/roapi/roapi) - Create full-fledged APIs for static datasets without writing a single line of code.\n- [binserve](https://github.com/mufeedvh/binserve) - A blazingly fast static web server with routing, templating, and security in a single binary you can set up with zero code. ⚡🦀\n\n## Libraries\n\n- [bevy](https://github.com/bevyengine/bevy) - 游戏引擎\n- [tokio](https://github.com/tokio-rs/tokio) - A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language\n- [Rocket](https://github.com/SergioBenitez/Rocket) - A web framework for Rust.\n- [axum](https://github.com/tokio-rs/axum) - web framework\n- [A data-first Rust-native UI toolkit. Druid](https://github.com/linebender/druid) - A data-first Rust-native UI design toolkit.\n- [cratetorrent](https://github.com/mandreyel/cratetorrent) - A BitTorrent V1 engine library for Rust (and currently Linux) #Torrents\n- [egui](https://github.com/emilk/egui) - GUI library in Rust\n- [structopt](https://github.com/TeXitoi/structopt) - Parse command line arguments by defining a struct. It combines clap with custom derive.\n- [telegram-bot](https://github.com/telegram-rs/telegram-bot) - Rust Library for creating a Telegram Bot\n- [anyhow](https://github.com/dtolnay/anyhow) - General error handle\n- [thiserror](https://github.com/dtolnay/thiserror) - Specific error handle\n- [frankenstein](https://github.com/ayrat555/frankenstein) - telegram bot api\n- [config-rs](https://github.com/mehcode/config-rs) - Default config for rs\n- [ssr-rs](https://github.com/shakacode/ssr-rs) - rust ssr with js\n- [sycamore](https://github.com/sycamore-rs/sycamore) - A reactive library for creating web apps in Rust and WebAssembly\n- [percy](https://github.com/chinedufn/percy) - Build frontend browser apps with Rust + WebAssembly. Supports server side rendering.\n- [actix-web](https://github.com/actix/actix-web) - Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust.\n- [env-logger](https://github.com/env-logger-rs/env_logger/) - log for rust\n- [fluent-rs](https://github.com/projectfluent/fluent-rs) - rust i18n\n  - [handlebars-fluent](https://github.com/manishearth/handlebars-fluent)\n- [handlebars-rust](https://github.com/sunng87/handlebars-rust)\n  - [handlebars_misc_helpers](https://github.com/davidB/handlebars_misc_helpers)\n- [glob](https://github.com/rust-lang-nursery/glob) - Support for matching file paths against Unix shell style patterns.\n- [walkdir](https://github.com/BurntSushi/walkdir) - Rust library for walking directories recursively.\n- [askama](https://github.com/djc/askama) - type safe template engine\n- [ramhorns](https://github.com/maciejhirsz/ramhorns) - Fast Mustache template engine implementation in pure Rust.\n- [sqlx](https://github.com/launchbadge/sqlx) - 🧰 The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, SQLite, and MSSQL.\n- [couch-rs](https://github.com/mibes/couch-rs) - CouchDB library for Rust\n- [sled](https://github.com/spacejam/sled) - the champagne of beta embedded databases, redis alternatives\n- [rksuid](https://github.com/nharring/rksuid) - Rust implementation of Segment.io's ksuid, id generator.\n  - [sonyflake-rs](https://github.com/bahlo/sonyflake-rs) - sony flake id generator rust\n\n## Projects\n\n- [mini-redis](https://github.com/tokio-rs/mini-redis/) - based on tokio, redis example\n- [hacker news in rust](https://github.com/ivanceras/hackernews-sauron)\n- [blade site](https://github.com/grego/bladesite) - rust static site generator, blaze fast\n\n## Applications\n\n- [ttyper](https://github.com/max-niederman/ttyper) - Terminal-based typing test.\n- [gobang](https://github.com/TaKO8Ki/gobang) - A cross-platform TUI database management tool written in Rust\n\n## Criticism\n\n- [Why not Rust](https://matklad.github.io/2020/09/20/why-not-rust.html)\n\n## Jobs\n\n- [Rust Careers](https://rust.careers/)\n\n## Real world example\n\n- [portier](https://github.com/portier/portier-broker) Portier Broker reference implementation, written in Rust, email login.\n- [plume](https://github.com/Plume-org/Plume) - Federated blogging application, thanks to ActivityPub\n- [lemmy](https://github.com/LemmyNet/lemmy) - 🐀 Building a federated alternative to reddit in rust\n\n## Templates\n\n- [rust cli starter](https://github.com/rust-starter/rust-starter) - rust cli template\n"},{"fields":{"slug":"/awesome-selfhosted/","title":"Awesome Self-hosted"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Self-Hosted\n  - Tools\n---\n\n# Awesome Self-hosted\n\n## KOL\n\n- [calendso/calendso: The open-source Calendly alternative. (github.com)](https://github.com/calendso/calendso) - Make an appointment, connect with your calendar\n\n## Time tracking\n\n- [timetagger](https://github.com/almarklein/timetagger) - Tag your time, get the insight\n\n## Shopping\n\n- [Mpedussa](https://github.com/medusajs/medusa) - Shopify alternative #Alternative\n\n## Services\n\n- [LibreTranslate](https://github.com/LibreTranslate/LibreTranslate) - Free and Open Source Machine Translation API. 100% self-hosted, no limits, no ties to proprietary translation services.\n\n## Medias\n\n- [RapidBay](https://github.com/hauxir/rapidbay) - Self-hosted torrent video streaming service compatible with Chromecast and AppleTV deployable in the cloud\n\n## PAAS\n\n- [cloudron](https://www.cloudron.io/index.html)\n- [sandstorm](https://sandstorm.io/)\n- [freedombox](https://freedombox.org/)\n\n## Federation\n\n- [Mobilizon](https://joinmobilizon.org/en/) - Mobilizon is a tool that helps you find, create and organize events.\n- [Orbit](https://github.com/orbitdb/orbit) - A distributed, serverless, peer-to-peer chat application on IPFS.\n- [Iris](https://github.com/irislib/iris-messenger) - Decentralized messenger\n- [Twt.social](https://twt.social/) - Twt.social is a new Social Media platform\n\n## Old school\n\n- [gemini](https://gemini.circumlunar.space/) - Gemini is a new internet protocol which: Is heavier than gopher, Is lighter than the web, Will not replace either, Strives for maximum power to weight ratio, Takes user privacy very seriously\n\n## Livestreaming\n\n- [Lightspeed](https://github.com/GRVYDEV/Project-Lightspeed) - A self contained OBS -> FTL -> WebRTC live streaming server. Comprised of 3 parts once configured anyone can achieve sub-second OBS to the browser livestreaming\n\n## Admin\n\n- [ToolJet](https://github.com/ToolJet/ToolJet/) - ToolJet is an open-source low-code platform for building and deploying internal tools with minimal engineering efforts 🚀\n"},{"fields":{"slug":"/awesome-seo/","title":"Awesome SEO Tools"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome SEO Tools\ntags:\n  - SEO\n  - Awesome\n  - Tools\n---\n\n## Tools\n\n- [Twitter Card Validator](https://cards-dev.twitter.com/validator)\n"},{"fields":{"slug":"/awesome-service/","title":"Awesome Services"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Services\ntags:\n  - Awesome\n  - Service\n---\n\nCurating awesome services.\n\n## Monitors\n\n- [Little Warden](https://littlewarden.com) - Monitor your websides for things like expires, ssl error. £24.99/Month\n\n## Matches\n\n- [diggz](https://www.diggz.co/) - Find Roommates & Rooms today.\n\n## Inbox\n\n- [Crono](https://crono.app/) - Get mobile notifications and SMS on desktop\n\n## Enviroments\n\n- [digitalhumani](https://digitalhumani.com/) A platform which easily integrates with your products to reforest the planet\n\n## Life\n\n- [Wedding Planning ](https://planning.wedding/) - Online Wedding Planning Assistant\n- [boss as a service](https://bossasaservice.life/) - We make sure you achieve your goals\n\n## Applications\n\n- [make passport photo](https://makepassportphoto.com/?utm_campaign) - Get your biometric Passport/Visa/ID photos in minutes, #Photos #Print\n\n## APIs\n\n- [API LIST](https://apilist.fun/)\n\n## Sample\n\n- [Bad SSL](https://badssl.com/)\n\n## Pets\n\n- [Rover](https://www.rover.com/uk/) - The world’s largest network of 5‑star pet sitters and dog walkers.\n- [dog spot](https://hellodogspot.com/) - A DogSpot is a smart sidewalk sanctuary, providing your dog a safe and cozy home away from home while you briefly go somewhere they aren't allowed. With DogSpot, you don't have to choose between adventures and spending time with your dog. You have the freedom to live your life with your dog... without having to take risks like tying them up or leaving them in the car.\n\n## Resume/Profile\n\n- [read cv](https://read.cv/)\n\n## News\n\n- [Their news](https://www.their.news/) - left or right news\n\n## Image process\n\n- [screen stab](https://www.screenstab.com/editor/) - convert image to a more seo mode.\n\n## Code in Cloud\n\n- [never install](https://neverinstall.com/)\n"},{"fields":{"slug":"/awesome-socials/","title":"收集有意思的社交应用"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntags:\n  - Social\n  - Awesome\n---\n\n# 收集有意思的社交应用\n\n## 文字交友\n\n- [SLOWLY](https://slowly.app/en/) - SLOWLY 让你从你的智能手机上认识笔友！按照距离远近，和不同的人发信有不同的发送时间，有的高达 10 多个小时才能发出去。与有共同爱好的人配对，写信并收集来自世界各地的邮票。说出你的想法--一次一封信!\n- [Addchat](https://apps.apple.com/us/app/addchat-random-chat/id1464989529) - Make Random Friends and Chat !\n\n## Location based\n\n- [Zown](http://www.zown.co) - Zown 让你看到离你超级近的人（半径 500 米内）。\n  一旦你与某人建立联系，它只给你 15 分钟的聊天时间，所以它迫使你在现实生活中与对方见面以保持联系。\n\n## 视频对话\n\n- [Superpeer](https://superpeer.com/) - Host cohort-based courses, live events, or 1:1 sessions, an all-in-one video platform that gives you the tools you need to engage with your audience through video, and connect in a more authentic way.\n  - [Awesome Peers](https://awesomepeers.com/) - A list includes 900+ free peers\n\n## 协作社交\n\n- [WT.social](https://wt.social/) - 维基百科式的社交网络，所有都可以协作编辑所有人的帖子。\n\n## 图片\n\n- [pixelfled](https://pixelfed.org)\n- [deviantart](https://www.deviantart.com/) - 艺术家社区\n\n## 语音交流\n\n- [Dialup](https://dialup.com/) - 偶然的声音聊天。\n\n## 匿名\n\n- [Turtle - Chat Anonymously ](https://apps.apple.com/us/app/turtle-chat-anonymously/id1313518475) - Turtle is an app that lets you message people and remain anonymous for three days. After three days, the other person will be able to see who you are. In an essence, it’s almost like meeting someone with a blindfold on. There is no room for implicit bias. The first impressions will be based off character, instead of appearance or status.\n\n## 约会\n\n- [bumble](https://bumble.com/zh/) - 女性友好\n- [vina](https://www.heyvina.com/) - 女性交友社区\n\n## All in one chat\n\n- [beeper](https://www.beeper.com/?hn) - 真正的 all in one 聊天，整合 15 个 app 的聊天，降维打击啊这是。\n\n## 复古\n\n- [spacehey](https://spacehey.com/home) - 重制了 mysapce，令人感慨那个年代的互联网的纯真\n"},{"fields":{"slug":"/awesome-speed/","title":"Awesome Speed"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: Awesome Speed\ntags:\n  - Awesome\n  - Speed\n  - Netwok\n---\n\n## Speed Test\n\n- [CSR](https://hostcsr.com/speedtest.html) - CSR 测速，有不少家的主机可以在线测试速度\n"},{"fields":{"slug":"/awesome-startups/","title":"Awesome Startups"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Startups\n  - Tools\n---\n\n# Awesome Startups\n\n## Prelaunch\n\n- [Waiting list](https://waitinglist.app/) - Build your audience before you launch, #API\n\n## Publish\n\n- [betalist](https://betalist.com/) - Discover tomorrow's startups, today.\n- [ProductHunt](https://www.producthunt.com/)\n- [Hacknew Show](https://news.ycombinator.com/show)\n- [Side Project Reddit](https://www.reddit.com/r/SideProject/)\n- [productlift](https://productlift.ai/) - ProductLift helps you find relevant communities and influencers so you can:\n- [280+ Websites To Share Your Startup / Public](https://airtable.com/shrwqaak73gy83w9A/tblu5RcUft9fYp9Ju/viwFHmIyMniXzlpK4?blocks=show)\n- [The best places to post your startup. Twitter Thread](https://twitter.com/jakeprins_nl/status/1293243281556594690?s=21)\n\n## Cooperation\n\n- [Circlebatch](https://circlebatch.com/) - Circlebatch is a collaborative community to practice skills and work on projects with others\n\n## Market\n\n- [Free Article Publishing](https://liquidary.com/freearticle/) - Get free press coverage for your project or startup\n- [Microacquire](https://microacquire.com/buyers/) - Sell your company online, Sell your startup within 30 days. Anonymous listings. No fees.\n- [promote your next startup](https://github.com/trekhleb/promote-your-next-startup) - 🚀 Free resources you may use to promote your next startup\n- [My Side Project rocks](https://mysideproject.rocks/)\n\n## Sharing\n\n- [#buildinpublic](https://buildinpublic.com/) - Share your process at Twitter with #buildinpublic\n\n## Tools\n\n- [AppLaunchpad - (1000) Best Free Mockup Generator (theapplaunchpad.com)](https://theapplaunchpad.com/mockup-generator/) - Screen Shot Generator\n\n## Investing\n\n- [Micro investment](https://www.micro-invest.io/) - Micro investment for solo founders\n- [Maker Fellow Ship](https://www.makerfellowship.com/) - We offer $500 grant to indie makers to ship something useful within four weeks.\n\n## Ideas\n\n- [110+ Actionable tasks to get from Zero to $$$](https://www.notion.so/110-Actionable-tasks-to-get-from-Zero-to-2a28bd237e964f75a8f4cf8fcd8182c5)\n\n## Legel\n\n- [avodocs](https://www.avodocs.com/) - Free legal documents for startups\n\n## Communities\n\n- [Get Maker Log](https://getmakerlog.com/) - How makers stay productive\n"},{"fields":{"slug":"/awesome-static-site-generator/","title":"Awesome Static Site Generator"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Static-Site-Generator\n---\n\n# Awesome Static Site Generator\n\n## List\n\n- [Eleventy](https://www.11ty.dev/docs/getting-started/)\n- [Gatsby](https://www.gatsbyjs.com/docs/tutorial/)\n- [Docusaurus](https://docusaurus.io/)\n- [blade site](https://github.com/grego/bladesite) - rust generator, blaze fast\n\n## Starter\n\n- [GitHub - stefanfrede/11st-starter-kit: 11ty, powered by Snowpack with Tailwind CSS and Alpine.js.](https://github.com/stefanfrede/11st-starter-kit)\n"},{"fields":{"slug":"/awesome-swift/","title":"Awesome Swift"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Swift\ntags:\n  - Awesome\n  - Swift\n---\n\nCurating Swift resources.\n\n## Resource\n\n- [Swift Ebook in Chinese](https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese)\n- [Awesome-Swift-Playgrounds](https://github.com/uraimo/Awesome-Swift-Playgrounds)\n"},{"fields":{"slug":"/awesome-tech-anwser/","title":"收集一些有用的技术/环境问题的解决方案"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集一些有用的技术/环境问题的解决方案\ntags:\n  - Awesome\n  - FAQ\n  - Tech\n  - Serverless\n---\n\n收集一些有用的技术/环境问题的解决方案。\n\n## Serverless\n\n- [阿里云函数计算 php 环境如何自定义内置扩展，覆盖系统自带扩展](https://developer.aliyun.com/article/645670?spm=5176.smartservice_service_chat.0.0.6a33709aQ2zFPh)\n"},{"fields":{"slug":"/awesome-templates/","title":"Awesome Templates"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Templates\ntags:\n  - Awesome\n  - Templates\n---\n\nCurating awesome templates for projects.\n\n## SAAS\n\n- [utlimate-saas-js](https://github.com/gmpetrov/utlimate-saas-js) - Ultimate SAAS template Typescript/Next.js/NextAuth.js/Prisma/Stripe/Tailwindcss/Postgresql , Stop loosing time implementing authentication and payment over and over again. Focus on what brings value to your customers\n\n## Template Engine\n\n- [mustache](https://github.com/mustache/mustache) - Logic-less templates.\n  - [rust-mustache](https://github.com/nickel-org/rust-mustache)\n- [handlebars](https://github.com/handlebars-lang/handlebars.js#)\n  - [handlebars-rust](https://github.com/sunng87/handlebars-rust)\n\n## Boilerplate\n\n- [makenew](https://github.com/makenew/) - Tested project skeletons to instantly bootstrap and reliably maintain your next project.\n"},{"fields":{"slug":"/awesome-tools/","title":"最好用的工具集合"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 最好用的工具集合\nlanguage: zh\ntags:\n  - Awesome\n  - Tools\n  - 中文\n---\n\n## 打字\n\n- [Code Typing Script(https://codingspeedtest.com) - 用代码测试你的打字速度，可以选语言比如 js,go\n\n## 公众号 RSS\n\n- [Feedadd](https://feeddd.org/) - 众包的形式运行爬虫机器人，上传数据\n\n## 测试，命理\n\n- [八字，命理测试](http://www.freehoro.net/FreeHoro/index.php)\n\n## 追贼\n\n- [I Know what your download](https://iknowwhatyoudownload.com/) - 我知道你下载了什么，追踪 ip 的下载列表，有点可怕。。\n\n## 转换\n\n- [百度文库转 word 或 pdf](http://www.html22.com/zh/) - 有瑕疵，勉强能用。\n- [微友活码](https://www.huomaqun.com/) - 用微友活码生成的营销二维码，具有不受个人号加人数量限制，不受扫码进群百人限制，群二维码过期灵活更新，扫码数据实时统计等优点，是个人号、微群及企业微信私域流量沉淀，营销引流必备的免费工具！\n\n## Server\n\n- [Nginx Playground](https://nginx-playground.wizardzines.com/) - 在线调试 nginx 服务器\n\n## Developmenets\n\n- [cosmopolitan - build-once run-anywhere c library](https://github.com/jart/cosmopolitan) - 编译生成单一的可执行文件的服务器\n\n## Stocks\n\n- [GamestonkTerminal](https://github.com/GamestonkTerminal/GamestonkTerminal) - Investment Research for Everyone. python 写的投资情绪等分析。\n\n## Wifi\n\n- [Wificard](https://wificard.io/) - print wifi info to card\n\n## 图片生成\n\n- [漂亮的代码截图生成](https://ray.so/)\n- [另一个代码截图生成器](https://carbon.now.sh/)\n- [52 斗图](https://www.52doutu.cn/) - 表情包在线生成\n- [rust 生成线条图片](https://github.com/lf94/img2utf)\n\n## URL 缩短器\n\n- [利用 github Issues 缩短网址](https://github.com/nelsontky/gh-pages-url-shortener)\n\n## 图片裁剪\n\n- [photo 16x9](https://photo16x9.com/) - 填充背景色以使得图片满足 16:9 的推特比例\n"},{"fields":{"slug":"/awesome-tv-quotes/","title":"划线的电视剧截图"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 划线的电视剧截图\ntags:\n  - TV\n  - Quotes\n  - 中文\n---\n\n1. ![他们不知道该怎么做，需要你来告诉他们](attachments/the-morning-show-screenshot-1.jpg)\n\n> -- 《早间新闻》S01E09\n\n2. ![一个穷人什么时候有时间发疯啊](attachments/Man.Of.La.Mancha.1972-quote1.jpg)\n\n> -- 《梦幻骑士》1972\n\n3. > 如果人们不知道你在做什么，那么他们就不知道你做错了什么。 -- 《是，大臣》S01E01\n\n4. ![](attachments/life-truth.jpg) ![](attachments/life-truth-2.png)\n\n> 事实证明，生活就是一系列令人失望的事，它们间隔的时间刚刚够让下一次失望令人大吃一惊。 -- 《早间新闻》S02E02\n"},{"fields":{"slug":"/awesome-tv-shows/","title":"值得观看的电视剧"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 值得观看的电视剧\ntags:\n  - Awesome\n  - TV\n  - List\n  - 中文\n---\n\n## Answers\n\n- [哪些美剧可以称为「神作」？ - 知乎](https://www.zhihu.com/question/22398342)\n\n## List\n"},{"fields":{"slug":"/awesome-ui/","title":"Awesome UI"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - UI\n  - Front-End\n---\n\n# Awesome UI\n\nCurating awesome UI tools, resources.\n\n## Tools\n\n- [RGB to hex, hsl convert tool by Google](https://www.google.com/search?q=rgb+to+hex&oq=rgb+to+hex&aqs=edge.0.0i433i512l4j0i512l2j69i65.2649j0j1&sourceid=chrome&ie=UTF-8)\n- [screely](https://www.screely.com) - Instantly Turn a Screenshot into a Browser Mockup\n- [Logo generator](https://formito.com/tools/favicon) - generate logo like stripe or hacker news\n\n## Free Resources\n\n- [Open source illustrations kit](https://illlustrations.co/) - Free illustrations images resource, #Free #Image #UI\n\n## Demos\n\n- [体验 3D 互动 30 个使用 WebGL 技术的优秀网页设计案例](https://www.shejidaren.com/30-best-webgl-demo-examples.html)\n\n## CSS 框架\n\n- [bulma](https://github.com/jgthms/bulma)\n- [tailwindcss](https://github.com/tailwindlabs/tailwindcss)\n  - [headwind](https://github.com/heybourn/headwind) vscode extension for sort class name\n  - [tailwindcss-forms](https://github.com/tailwindlabs/tailwindcss-forms)\n  - [daisy ui](https://daisyui.com/)\n  - [track awesome tailwind](https://www.trackawesomelist.com/aniftyco/awesome-tailwindcss/readme#ui-libraries-components--templates)\n  - [kutty ui](https://kutty.netlify.app/docs/)\n  - [tailwind landing page](https://github.com/cruip/tailwind-landing-page-template)\n- [milligram](https://github.com/milligram/milligram) - 极简主义 css\n- [headlessui](https://github.com/tailwindlabs/headlessui)\n\n## CSS Tools\n\n- [theme-change](https://github.com/saadeghi/theme-change) - Change CSS theme with toggle, buttons or select using CSS custom properties and localStorage\n\n## Realworld inspiration\n\n- [remotestories](https://www.remotestories.com)\n"},{"fields":{"slug":"/awesome-websites/","title":"收集一些好玩的网站"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集一些好玩的网站\nlanguage: zh\ntags:\n  - Awesome\n  - Tools\n  - 中文\n---\n\n## 发现类\n\n- [Reddit 小组趋势](https://subredditstats.com/) 在这可以发现很多有意思的 Reddit 小组，有各种维度的排序\n- [Your Stack 你的工具栈](https://yourstack.com/) 分享自己使用的产品，在这可以发现不少好用的东西，App\n- [Hacker News 黑客新闻](https://news.ycombinator.com/news) 著名的 HN，很多互联网用户的聚集地，上面的新闻还有讨论大多数是技术相关，也有少数社会新闻，当你有新产品要冷启动的时候，里面的子版块 Show HN 很适合去宣传，当然也有可能收到评论里的不看好。\n- [Hacker News 热门](https://hn.buzzing.cc/) 这是我做的一款抓取 Hacker News 的热门条目，然后用 Deepl 翻译标题和简介，帮助英文不是特别的非母语者做中文导读的站点，对我自己英文提升帮助很大，因为更容易找到感兴趣的文章，然后才点进去详读\n\n## 有意思\n\n- [我今天的上网体验](https://how-i-experience-web-today.com/) - 嘲讽的网站，展示了 21 世纪的今天，是如何被网站强奸眼睛的。\n- [stumbled](https://stumbled.cc/stumble) - 随机发现有意思的网站\n- [哪个艺术品更贵](https://expensivetaste.art/)\n- [ipod 复古界面听音乐](https://tannerv.com/ipod/)\n- [Gif.so](https://welcome.gif.so/) - 随便填个子域名，他会返回一个对应的表情包\n- [their news](https://www.their.news/) - 左派/右派新闻对比\n- [从图片/PDF 中提取表格](https://extract-table.com/)\n- [youtube 上的教程分类集合](ytt-tech.com)\n- [摄像头捕捉变成复选框动画](https://www.bryanbraun.com/checkboxland/docs/demos/webcam-test/)\n  - [源代码库](https://github.com/bryanbraun/checkboxland)\n- [将网站的 console 控制台变成聊天室](https://www.consolechat.io/)\n- [生成一次性秘密用一次性 url](https://github.com/sniptt-official/ots)\n- [收集有意思的网站到一个个清单](https://bunklist.com/)\n"},{"fields":{"slug":"/awesome-what-was-your-moment/","title":"Awesome What Was Your Moment"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome What Was Your Moment\ntags:\n  - Awesome\n---\n\nCurating what was your xxx moment.\n\n## List\n\n- [What was your \"Shit I'm getting old\" moment ? : AskReddit](https://www.reddit.com/r/AskReddit/comments/phs99j/what_was_your_shit_im_getting_old_moment/)\n"},{"fields":{"slug":"/awesome-windows/","title":"收集Windows上好玩，好用的东西"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 收集Windows上好玩，好用的东西\ntags:\n  - Windows\n  - Awesome\n  - Tools\n  - Development-Environment\n  - 中文\n---\n\n## 开发环境\n\n- [在 Windows 上用 WSL 优雅开发](https://dowww.spencerwoo.com/) - 可能是市面上最详尽的中文 WSL 开发环境配置指南 的文档现场，本章我们将对 WSL 本身、WSL 近期更新和 WSL 的优越特性进行简单介绍，带领你熟悉利用 WSL 在 Windows 上面开发学习的基础知识。\n"},{"fields":{"slug":"/awesome-workflows/","title":"Awesome workflows"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome workflows\ntags:\n  - Awesome\n  - Workflows\n---\n\nCurating workflows.\n\n## Product\n\n- [Tara](https://tara.ai/) - Git ship done Define, plan & track mission-critical product updates, in one place.\n"},{"fields":{"slug":"/bazarr-setup/","title":"Bazarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Subtitles\n  - Setup\n  - Self-Hosted\n---\n\n# Bazarr Setup\n\n## Install\n\nSee also [here](https://wiki.bazarr.media/Getting-Started/Installation/Linux/linux/)\n\n```bash\nsudo apt-get install python3-pip python3-distutils -y\nwget https://github.com/morpheus65535/bazarr/releases/latest/download/bazarr.zip\nunzip bazarr.zip -d ~/bazarr\ncd bazarr\npython3 -m pip install -r requirements.txt\n```\n\n### Setup as system service\n\nReference at [here](https://wiki.bazarr.media/Getting-Started/Autostart/Linux/linux/)\n\nYou have to create a `bazarr.service` file in `/etc/systemd/system` that would contain the following text:\n\n```bash\nsudo vim /etc/systemd/system/bazarr.service\n```\n\n```bash\n[Unit]\nDescription=Bazarr Daemon\nAfter=syslog.target network.target\n\n# After=syslog.target network.target sonarr.service radarr.service\n\n[Service]\nWorkingDirectory=/home/green/bazarr/\nUser=green\nGroup=admin\nUMask=0002\nRestart=on-failure\nRestartSec=5\nType=simple\nExecStart=/usr/bin/python3 /home/green/bazarr/bazarr.py\nKillSignal=SIGINT\nTimeoutStopSec=20\nSyslogIdentifier=bazarr\nExecStartPre=/bin/sleep 30\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now bazarr\nsudo systemctl status bazarr\nsudo systemctl restart bazarr\n\n```\n\n## Configure\n\nYou can set your password at the UI.\n\n### Sonarr\n\nEnabled, See [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#sonarr)\n\n### Provider\n\nAdd Zimuku, assrt, Opensubtitle\n\n### Language\n\nSee [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#languages)\n\nAdd default settings, see [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#default-settings)\n"},{"fields":{"slug":"/books/","title":"读书笔记"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 读书笔记\ntags:\n  - Books\n  - Notes\n  - 中文\n---\n\n记录自己看过的书，基本上从 2021 开始记的，以前的由于没有及时建立这个第二大脑，基本都忘的差不多了。按年份排序，星星 ✨ 是我自己的评分，如有笔记则另外链接。\n\nAlso see [[tv-shows]], [[movies]]\n\n## 其他人的书籍推荐资源\n\n- [汇总了 hacker news 上评论里提到的书籍的排名](https://hacker-recommended-books.vercel.app/)\n\n## 人生必读系列\n\n这里放我自己觉得必读的一些书籍：\n\n- 动物农场\n- 基督山伯爵\n- 少数派报告\n- 那不勒斯四部曲\n\n## 2020\n\n- [x] 那不勒斯四部曲，埃莱娜费兰特，✨✨✨✨✨，看完电视剧看的书，小镇做题家最感同身受的一本书。\n\n## 2021\n\n- [x] 动物农场英文版，乔治奥威尔，✨✨✨✨✨，适合初级阶段的英语学习者阅读\n- [ ] 第二性，波伏娃，好吧，这个看了几章有点看不下去，这种偏哲学的书目前阶段有点不适合我，太难读下去了，读一会儿就犯困，只能先弃，再过几年再读。\n- [x] 基督山伯爵，大仲马，✨✨✨✨✨，神作，人生必看，情节设计太精彩了，不知道有没有类似的读物，还想再读类似的。\n- [x] 三个火枪手，大仲马，✨✨✨，看完基督山伯爵之后，感觉这本就一般般了，直到看完之后也没啥大惊喜，果然基督山伯爵是巅峰。\n- [ ] 包法利夫人，福楼拜，✨✨✨✨，经典的力量就是过多少年之后，书里探讨的问题依然存在。\n- [x] 失踪的人，卡夫卡，✨✨✨，没咋看懂，本来想看完全集，但是有点看不下去，以后再说吧\n- [x] 少数派报告，菲利普迪克，✨✨✨✨✨，神作，50 年前作者在思考和探索的宇宙，人类，智能的问题，以及情节的设计，都太牛了，人生必读。\n- [x] 堂吉诃德，塞万提斯,✨✨✨✨ “《堂吉诃德》是一个令人伤感的故事，它越是令人发笑，则越使人感到难过。这位英雄是主持正义的，制伏坏人是他的唯一宗旨。正是那些美德使他发了疯。” -- 乔治·戈登·拜伦\n- [ ] 罪与罚，陀思妥耶夫斯基，看了两章，暂时弃了，主要是还是对漫长的心理活动没有耐心。\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[tv-shows]: tv-shows.md \"电视剧笔记\"\n[movies]: movies.md \"电影笔记\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/caddy-file-server-url-scheme/","title":"Caddy File Server Browser with URL Scheme"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Files\n  - Server\n  - Proxies\n  - Templates\n---\n\n# Caddy File Server Browser with URL Scheme\n\n[Template](https://gist.github.com/theowenyoung/e09cb6e2c59f247fdc3f4e6fe4401481)\n\nUse this template to display the follow page:\n![screenshot](./attachments/caddy-file-template-screenshot.png)\n\n```bash\nlocalhost {\n  root * /root\n  encode gzip\n  file_server {\n    browse ./file-browser-template-for-caddy.html\n    hide .*\n  }\n}\n```\n"},{"fields":{"slug":"/caddy2-setup-for-debian/","title":"Caddy2 Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Caddy\n  - Debian\n  - Setup\n  - Proxies\n  - Server\n---\n\n# Caddy2 Setup for Debian\n\n[Official Site](https://caddyserver.com/v2)\n\n## Install\n\n```bash\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install caddy\n```\n\nOnce installed, caddy is running.\n\nThe default config file at `/etc/caddy/Caddyfile`\n\n## Resources\n\n- [GitHub - greenpau/caddy-auth-portal: Authentication Plugin for Caddy v2 implementing Form-Based, Basic, Local, LDAP, OpenID Connect, OAuth 2.0 (Github, Google, Facebook, Okta, etc.), SAML Authentication](https://github.com/greenpau/caddy-auth-portal)\n- [GitHub - greenpau/caddy-auth-jwt: JWT Authorization Plugin for Caddy v2](https://github.com/greenpau/caddy-auth-jwt)\n- [basicauth (Caddyfile directive) — Caddy Documentation](https://caddyserver.com/docs/caddyfile/directives/basicauth#basicauth)\n"},{"fields":{"slug":"/common-url-scheme/","title":"Common URL Scheme"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - URL\n  - Tips\n---\n\n# Common URL Scheme\n\n## IINA\n\n[IINA - The modern media player for macOS](https://iina.io/)\n\nOpen stream video:\n\n```bash\niina://weblink?url={encoed url}\n```\n"},{"fields":{"slug":"/debian-server-setup/","title":"Debian Server Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Debian\n  - Server\n  - Setup\n---\n\n# Debian Server Setup\n\n> For linux common commands, see [[linux-common-commands]]\n\n1. Update Source\n\n   ```bash\n   apt update --yes && apt upgrade --yes\n   ```\n\n2. Install sudo package\n\n   ```bash\n   apt install -y sudo\n   ```\n\n3. Open BBR: [[open-bbr-for-debian]]\n\n4. Use ssh key login instead of password, for more details see [How To Configure SSH Key-Based Authentication on a Linux Server](https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server)\n\n5. In your local machine:\n\n```bash\nssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\n```\n\n3. Change the default password\n\n   1. `passwd`\n\n4. Create an admin group\n   1. `groupadd admin`\n   2. Give admin group root access, and no password sudo\n      1. Backup sudo files `cp /etc/sudoers /root/sudoers.bak`\n      2. Edit the `/etc/sudoers` file by typing the command: `visudo`\n      3. Add `%admin ALL=(ALL:ALL) NOPASSWD:ALL` after `sudo` group\n5. Create a admin group user\n   1. `useradd username -g admin`\n6. Use ssh key login instead of password for normal user\n   1. `ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host`\n7. Login with new normal user `ssh username@ip`\n8. Install common utils:\n   1. `sudo apt install build-essential software-properties-common curl vim unzip --yes`\n9. Create `/data` for store data files with `777` permissions, avoid to use `/home` directory\n\n\nYou might want to read also:\n\n- [[shadowsocks-rust-setup-for-debian]]\n- [[caddy2-setup-for-debian]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[linux-common-commands]: linux-common-commands.md \"Linux Common Commands\"\n[open-bbr-for-debian]: open-bbr-for-debian.md \"Open BBR for Debian\"\n[shadowsocks-rust-setup-for-debian]: shadowsocks-rust-setup-for-debian.md \"Shadowsocks Rust Setup for Debian\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/docker-common-commands/","title":"Docker Common Commands"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Docker Common Commands\ntags:\n  - Docker\n  - Tips\n---\n\n## docker compose exec bin\n\n```bash\ndocker-compose exec service-name /bin/sh\n```\n"},{"fields":{"slug":"/docker-setup/","title":"Docker Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Docker\n  - Setup\n---\n\n# Docker Setup\n\n## Install\n\nSee [here](https://docs.docker.com/engine/install/debian/)\n\n[Install Docker compose](https://docs.docker.com/compose/install/)\n"},{"fields":{"slug":"/filebrowser-setup/","title":"FileBrowser Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Setup\n  - Files\n---\n\n# FileBrowser Setup\n\n## Install\n\n```bash\ncurl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash\n```\n\n## Systemd\n\n```bash\nsudo vim /etc/systemd/system/filebrowser.service\n```\n\n```bash\n[Unit]\nDescription=File browser: %I\nAfter=network.target\n\n[Service]\nUser=www-data\nGroup=www-data\nExecStart=/usr/local/sbin/filebrowser -c /etc/filebrowser/%I -d /etc/filebrowser/filebrowser.db\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now filebrowser\n```\n"},{"fields":{"slug":"/git-sshkey/","title":"Use ssh key for Git"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Git\n  - SSH\n  - Auth\n---\n\n# Use ssh key for Git\n\nReference: [Generating a new SSH key and adding it to the ssh-agent - GitHub Docs](https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)\n\n## Generate ssh key\n\n```bash\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n# Start the ssh-agent in the background.\neval \"$(ssh-agent -s)\"\n# Add your SSH private key to the ssh-agent\nssh-add ~/.ssh/id_ed25519\n```\n\n## Add ssh key to Github\n\n```bash\ncat .ssh/id_ed25519.pub\n```\n\n[SSH Keys Setting](https://github.com/settings/keys)\n"},{"fields":{"slug":"/git-tips/","title":"收集常用Git技巧"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集常用Git技巧\nlanguage: zh\ntags:\n  - Git\n  - Tips\n  - 中文\n---\n\n## 回答合集\n\n- [Finding the date/time a file was first added to a Git repository - Stack Overflow](https://stackoverflow.com/questions/2390199/finding-the-date-time-a-file-was-first-added-to-a-git-repository/25633731) - 获取首次提交时间\n\n## 合并上游的时候不弹出确认框\n\n```bash\ngit pull upstream main --commit --no-edit\n```\n\n## 对所有采用上游的更新\n\n```bash\ngit checkout --theirs .\n```\n"},{"fields":{"slug":"/git-workflows/","title":"Git workflows"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Git\n  - Workflows\n---\n\n# Git workflows\n\n## Intro\n\nSee [here](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)\n\n![](https://wac-cdn.atlassian.com/dam/jcr:8f00f1a4-ef2d-498a-a2c6-8020bb97902f/03%20Release%20branches.svg?cdnVersion=1770)\n"},{"fields":{"slug":"/go-template-tips/","title":"Go Template Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Go\n  - Templates\n  - Tips\n  - Programming-Languages\n---\n\n# Go Template Tips\n\n- Parent Variable, `{{$.XX}}`\n- URL encode, `urlquery \"https://test.com\"`\n"},{"fields":{"slug":"/goals-2021/","title":"2021 Goals"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 2021 Goals\ntags:\n  - \"Year2021\"\n  - Todo\n---\n\n- [ ] Post 100 articles/wikis this year\n- [ ] More patient about stocks.\n- [ ] Significantly improve English level\n"},{"fields":{"slug":"/install-php8-on-centos7/","title":"Install PHP 8.0 On CentOS 7 / RHEL 7"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Install PHP 8.0 On CentOS 7 / RHEL 7\ntags:\n  - Setup\n  - PHP\n  - CentOS\n---\n\n```bash\n\nyum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\nyum install -y https://rpms.remirepo.net/enterprise/remi-release-7.rpm\nyum install -y --enablerepo=remi-php80 php php-cli\nphp -v\n```\n"},{"fields":{"slug":"/jackett-setup/","title":"Jackett Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Jackett\n  - Torrents\n  - BT\n  - Self-Hosted\n  - Setup\n---\n\n# Jackett Setup\n\nRead more at [here](https://github.com/Jackett/Jackett#install-as-service)\n\n1. Download and extract the latest `Jackett.Binaries.LinuxAMDx64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases)\n\n```bash\nwget https://github.com/Jackett/Jackett/releases/download/v0.18.545/Jackett.Binaries.LinuxAMDx64.tar.gz\n# tar to a directory you want\ntar -xf Jackett.Binaries.LinuxAMDx64.tar.gz\n```\n\n2. To install Jackett as a service, open a Terminal, cd to the jackett folder and run `sudo ./install_service_systemd.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\n`http://your-ip:9117`\n\nYou can set password, or port by UI.\n"},{"fields":{"slug":"/jellyfin-setup/","title":"Jellyfin setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Jellyfin\n  - Setup\n  - Self-Hosted\n---\n\n# Jellyfin setup\n\n## Install\n\nSee [Installing Jellyfin | Documentation - Jellyfin Project](https://jellyfin.org/docs/general/administration/installing.html#debian)\n\n## Usage\n\n```bash\nsudo systemctl restart jellyfin\n```\n\n## 中文字体\n\n1. Download google noto fonts:\n   This [repo](https://github.com/CodePlayer/webfont-noto) compiled noto fonts, so you can just download it and use it.\n\n   ```bash\n   wget https://github.com/CodePlayer/webfont-noto/raw/master/dist/NotoSans/NotoSansCJKsc-hinted/subset/NotoSansCJKsc-hinted-standard/NotoSansCJKsc-Regular.woff2\n   ```\n\n   At Jellyfin Admin dashboard, player, open back font, add the font path\n\n## FAQ\n\n- [Jellyfin 中文字体问题](https://github.com/jellyfin/jellyfin-web/issues/934)\n"},{"fields":{"slug":"/license-comparison/","title":"License比较"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: License比较\nlanguage: zh\ntags:\n  - License\n  - Comparison\n  - 中文\n---\n\n![License Comparison](attachments/license-comparision.png)\n\n> By [如何选择开源许可证？](https://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html)\n"},{"fields":{"slug":"/linux-common-commands/","title":"Linux Common Commands"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Tips\n  - Linux\n  - Commands\n  - Bash\n---\n\n# Linux Common Commands\n\n## View current system info\n\n```bash\nlsb_release -a\n```\n\nOutput:\n\n```bash\nDistributor ID:\tDebian\nDescription:\tDebian GNU/Linux 10 (buster)\nRelease:\t10\nCodename:\tbuster\n```\n\n## View all users\n\n```bash\ncat /etc/passwd | grep -v nologin|grep -v halt|grep -v shutdown|awk -F\":\" '{ print $1\"|\"$3\"|\"$4 }'|more\n```\n\n## Get Publish IP\n\n```bash\nhostname -I\n```\n\n## Change user group\n\n```bash\nusermod -g groupname username\n```\n\n## Get user group\n\n```bash\nid -g -n\n```\n\n## Remove apt ppa\n\n```bash\nsudo add-apt-repository --remove ppa:qbittorrent-team/qbittorrent-stable\n```\n\n## Get current shell\n\n```bash\necho \"$SHELL\"\n```\n\n## Get current cpu arch\n\n```bash\narch\n```\n\nor\n\n```bash\ndpkg --print-architecture\n```\n\n## Unzip tar.gz\n\n```bash\ntar -xf x.tar.gz\n```\n\nSee also [here](https://linuxize.com/post/how-to-extract-unzip-tar-gz-file/)\n\nTar to specific directory\n\n```bash\ntar -xf x.tar.gz -C ./xxx\n```\n\n## Stdout to File\n\n```bash\ncommand &> file\n```\n\nOverwrite:\n\n```bash\ncommand >| file.txt 2>&1\n```\n\n## Download/Upload file by SSH SCP\n\nDownload to local:\n\n```bash\nscp root@ip:/path ~/Downloads\n```\n\n## Remove node_modules\n\n```bash\nfind . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n```\n\n## Remove target\n\n```bash\nfind . -name 'target' -type d -prune -exec rm -rf '{}' +\n```\n"},{"fields":{"slug":"/makefile-templates/","title":"Makefile Templates"},"frontmatter":{"draft":false},"rawBody":"---\ntags: \n\t- Makefile\n  - Templates\n  - Workflows\n---\n\n# Makefile Templates\n\n```Makefile\n.PHONY: start reload stop\nstart:\n\tsystemctl start caddy\nstop:\n\tsystemctl stop caddy\nreload:\n\tsystemctl reload caddy\n```\n"},{"fields":{"slug":"/mastdon-development-setup/","title":"Mastdon Development Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Mastdon Development Setup\ntags:\n  - Mastdon\n  - Setup\n---\n\nAlso see [dev/setup](https://docs.joinmastodon.org/dev/setup/) [admin/install](https://docs.joinmastodon.org/admin/install/)\n\n1. Install Ruby\n\n[[ruby-setup]]\n\n2. Install Node\n\nSee [nvm](https://github.com/nvm-sh/nvm)\n\n3. Install postgres\n\n[[postgres-setup-for-macos]]\n\n4. Install redit\n\n```bash\nbrew install redis\nbrew services start redis\n```\n\n5. Clone\n\n```bash\ngit clone git@github.com:mastodon/mastodon.git live\n```\n\n6. Install ruby dependences\n\n```bash\ncd live\nbundle config set --local with 'development'\nbundle install\n```\n\n6. Install yarn\n\n```bash\nnpm install --global yarn\n```\n\n7. Install nodejs dependences\n\n```bash\nyarn\n```\n\n1. Init database\n\n```bash\nRAILS_ENV=development bundle exec rails db:setup\n```\n\n8. Install foreman for multiple run\n\n```bash\ngem install foreman --no-document\n```\n\n9. Open\n\n<http://localhost:3000>\n\nemail: `admin@localhost:3000`\npassword: `mastodonadmin`\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[ruby-setup]: ruby-setup.md \"Ruby Setup for MacOS\"\n[postgres-setup-for-macos]: postgres-setup-for-macos.md \"Postgres Setup for Macos\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/mini-reset-css/","title":"Mini Reset CSS"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - CSS\n---\n\n# Mini Reset CSS\n\n> Forked by <https://github.com/jgthms/minireset.css/blob/master/minireset.css>\n\n```css\nhtml {\n  font-family: \"SF Pro SC\", \"SF Pro Text\", \"SF Pro Icons\", \"PingFang SC\",\n    \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n}\nbody {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\nhtml,\nbody,\np,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal;\n}\n\nbutton,\ninput,\nselect {\n  margin: 0;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nimg,\nvideo {\n  height: auto;\n  max-width: 100%;\n}\n\niframe {\n  border: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n```\n"},{"fields":{"slug":"/movies/","title":"电影笔记"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 电影笔记\ntags:\n  - Movies\n  - Notes\n  - 中文\n---\n\n记录自己看过的电影，按年份排序，星星 ✨ 是我自己的评分，如有笔记则另外链接。基本上从 2021 开始记的，以前的由于没有及时建立这个第二大脑，基本都忘的差不多了。\n\nAlso see [[books]], [[tv-shows]]\n\n## workflows\n\n目前主要是用 [[qbittorrent-setup-for-debian]],[[jackett-setup]]在下载电影，买了一台 1T 的 VPS 作为 NAS。本来想用[[jellyfin-setup]]来作为影视中心的，但是使用后感觉客户端并不是 native 的，略卡，可能暂时还不胜用，所以索性直接上[[caddy-file-server-url-scheme]], 然后 mac 用 [IINA](https://iina.io/)，或者[迅雷看看](https://video.xunlei.com/)（大多数剧的字幕匹配做的好一点），手机端用 [nplayer](https://nplayer.com/)或[VLC](https://www.videolan.org/) 打开流文件。目前这样的体验是最爽的。\n\n![Root Screenshot](attachments/caddy-root.png)\n![Movie Demo](attachments/movie-demo.png)\n\n## 人生必看系列\n\n这里放我自己觉得必看的一些电影：\n\n- 黑客帝国\n\n## 2021\n\n- [x] 梦幻骑士, 1972,✨✨✨✨， 戏剧+电影结合的非常好的一部剧，仅节选了原著中的第一个故事，但是结局改的非常感人，唐吉可德救赎了自己的女神。\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[books]: books.md \"读书笔记\"\n[tv-shows]: tv-shows.md \"电视剧笔记\"\n[qbittorrent-setup-for-debian]: qbittorrent-setup-for-debian.md \"qBittorrent setup for Debian\"\n[jackett-setup]: jackett-setup.md \"Jackett Setup\"\n[jellyfin-setup]: jellyfin-setup.md \"Jellyfin setup\"\n[caddy-file-server-url-scheme]: caddy-file-server-url-scheme.md \"Caddy File Server Browser with URL Scheme\"\n[//end]: # \"Autogenerated link references\"ences\"\n"},{"fields":{"slug":"/netdata-setup-for-debian/","title":"Netdata Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Netdata Setup for Debian\ntags:\n  - Debian\n  - Netdata\n  - Monitor\n---\n\n## Install\n\n```bash\nbash <(curl -Ss https://my-netdata.io/kickstart.sh)\n```\n"},{"fields":{"slug":"/nodejs-monorepo/","title":"Nodejs Monorepo"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Monorepo\n  - Javascript\n  - Workflows\n---\n\n# Nodejs Monorepo\n\n## Tools\n\n[GitHub - atlassian/changesets: 🦋 A way to manage your versioning and changelogs with a focus on monorepos](https://github.com/atlassian/changesets)\n\n## Use Changesets as monorepo manager\n\n### Init a monorepo\n\n```bash\nmkdir monorepo && cd monorepo\ngit init\n# Add .gitignore file for nodejs <https://github.com/github/gitignore/blob/master/Node.gitignore>\nnpm init --yes\n```\n\nAdd `\"private\":\"true\"` to the root `package.json`\n\n```bash\nnpm init -w packages/a\nnpm init -w packages/b\nnpm init -w packages/c\n```\n\nLet `c` depends `a` and `b`,\n\nAdd\n\n```json\n\"dependencies\": {\n  \"a\":\"^1.0.0\",\n  \"b\":\"^1.0.0\"\n}\n```\n\nto `packages/c/package.json`\n\n### Install changesets\n\nAlso see [here](https://github.com/atlassian/changesets/blob/main/docs/intro-to-using-changesets.md)\n\n```bash\nnpm install -D @changesets/cli && npx changeset init\n```\n\nThis action will add a `.changeset` folder, and a couple of files to help you out:\n\nYou should change the `.changeset/config.json` -> `baseBranch` to yourself main branch, also change `access` to `public`\n\nCommit current files.\n\n```bash\ngit add .\ngit commit -m \"feat: init\"\n```\n\nThat's done.\n\n### Usage\n\n#### First publish\n\nFirst publish you should just use the follow command to publish your module\n\n```bash\nnpx changeset publish\n```\n\n#### Future changes\n\nYou should see [changesets philosophy](https://github.com/atlassian/changesets/blob/main/docs/detailed-explanation.md)\n\nYou should first create an `intent to change`, that said, before what ever changes you want to make, you should create a `intent change`\n\n```bash\nnpx changeset\n```\n\n...Make some changes\n\nNow, generate new version, changeset will take care your dependences,\n\n> Note, by default, if `a` upgrade from `1.0.1` to `1.0.2`, `c` depends on `a@^1.0.1`, then `c` `package.json` will not change, cause npm will auto update `a@^1.0.1` to the last version `1.0.2`\n> if you want change to the exact version every time, you can set the config to\n>\n> ```bash\n>  \"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH\": {\n>     \"updateInternalDependents\": \"always\"\n>  }\n> ```\n\n```bash\nnpx changeset version\n```\n\nThen, you can publish it.\n\n```bash\nnpx changeset publish\n```\n\n```bash\ngit add .\ngit commit -m \"chore: version\"\ngit push --follow-tags\n```\n\n## With CI\n\nI'll use Github Actions as example.\n\nThe CI workflow assume that you use [[git-workflows]] as your git workflow.\n\n> Note, you can use [`@changesets/changelog-github`](https://github.com/atlassian/changesets/tree/main/packages/changelog-github) as your changelog format log. with this, you can generate a log like [this](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-b%401.1.0) , without this, then the log will only include [commit link](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-c%401.1.2) > `npm i -D @changesets/changelog-github`\n>\n> ```json\n> {\n>   \"changelog\": [\n>     \"@changesets/changelog-github\",\n>     { \"repo\": \"theowenyoung/monorepo-example\" }\n>   ]\n> }\n> ```\n\n1. Create a script in root `package.json`\n\n```json\n{\n  \"scripts\": {\n    \"version-packages\": \"changeset version\",\n    \"release\": \"changeset publish\"\n  }\n}\n```\n\n2. Create github actions workflows\n\n```bash\nmkdir -p .github/workflows\n```\n\n```bash\ntouch .github/workflows/release.yml\n```\n\nWith the following content:\n\n```yaml\nname: Release\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@master\n        with:\n          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits\n          fetch-depth: 0\n\n      - name: Setup Node.js 12.x\n        uses: actions/setup-node@master\n        with:\n          node-version: 12.x\n      - name: Setup NPM Latest\n        run: npm i -g npm\n      - name: Install Dependencies\n        run: npm i\n\n      - name: Create Release Pull Request or Publish to npm\n        uses: changesets/action@master\n        with:\n          # this expects you to have a script called release which does a build for your packages and calls changeset publish\n          publish: npm run release\n          version: npm run version-packages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n```\n\n3. Add `NPM_TOKEN` to your github repo secret settings\n\nBy [[nodejs-tips]]:\n\n```bash\nnpm token create\n```\n\nDone.\n\nEvery time you use `npx changeset` to generate a new changeset intent, and the change is pulled to the `main` branch, then CI will create a pull request to generate a new version, and after the pull request was merged, CI will publish npm packages, and create a new release.\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[git-workflows]: git-workflows.md \"Git workflows\"\n[nodejs-tips]: nodejs-tips.md \"Nodejs Tips\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/nodejs-setup-for-debian/","title":"Nodejs Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Server\n  - Javascript\n  - Setup\n  - Debian\n  - Programming-Languages\n---\n\n# Nodejs Setup for Debian\n\n## Install\n\nSee also [here](https://github.com/nodesource/distributions/blob/master/README.md)\n\n```bash\n# Using Debian, as root\ncurl -fsSL https://deb.nodesource.com/setup_14.x | bash -\napt-get install -y nodejs\n```\n"},{"fields":{"slug":"/nodejs-tips/","title":"Nodejs Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Javascript\n  - Tips\n  - Programming-Languages\n---\n\n# Nodejs Tips\n\n## Answers\n\n### Delete node_modules folder recursively from a specified path using command line\n\n> [Delete node_modules folder recursively from a specified path using command line - Stack Overflow](https://stackoverflow.com/questions/42950501/delete-node-modules-folder-recursively-from-a-specified-path-using-command-line)\n\n```bash\nfind . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n```\n\n### Get NPM Token\n\n```bash\nnpm token create\n```\n"},{"fields":{"slug":"/now/","title":"What I’m doing now?"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: What I’m doing now?\ntags:\n  - Now\n  - Journal\n  - Me\n---\n\n> This is a [now](https://nownownow.com/about) page, read more about me at [[about]] page or [[projects]] page.\n\n## Projects now\n\n- **Maintaining [Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki)**\n- **Maintaining [Track Awesome List](https://www.trackawesomelist.com)**\n- **Maintaining [Actionsflow](https://github.com/actionsflow/actionsflow)**\n\n  [Actionsflow](https://github.com/actionsflow/actionsflow) helps you automate workflows - it's a free [IFTTT](https://ifttt.com/)/[Zapier](https://zapier.com/) alternative for developers. With [Actionsflow](https://github.com/actionsflow/actionsflow) you can connect your favorite apps, data, and APIs, receive notifications of actions as they occur, sync files, collect data, and more.\n\n- **Maintaining [Buzzing](https://www.buzzing.cc/)**\n\n  You can use [Buzzing](https://www.buzzing.cc/) to see hot discussions in your native language. Browse in your native language, Read more into the original text. Currently, it supports Chinese, I hope it can support more languages, and more topics.\n\n- **Starting a new Project about merchandising**\n\n  I'm ready into a new app about fresh food merchandising, hope I can get it online soon.\n\n- **Writing Letters**\n\n  Recently, I found a new penpal app [SLOWLY](https://slowly.app/en/), SLOWLY lets you meet pen pals from your smartphone! Match with someone that shares your passion, write a letter and collect stamps from around the world. Speak your mind – one letter at a time! I really like it, and now I have 5 firends.\n\n- **Practicing English**\n\n  I'm a failure of English learning. I've learned English more than 10 years, but it still sucks, so I registered a Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung) for only English tweets, and this [blog](https://blog.owenyoung.com) to force me to use more English. It's Feb, 01, 2021 today when I writing this, I hope this is my last goal after making so many goals. Once I reach my goal, I'll update here.\n\n## Goals\n\n[[goals-2021]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[about]: about.md \"About Me\"\n[projects]: projects.md \"Projects\"\n[goals-2021]: goals-2021.md \"2021 Goals\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/open-bbr-for-debian/","title":"Open BBR for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Debian\n  - Server\n  - BBR\n  - Proxies\n---\n\n# Open BBR for Debian\n\n## Steps\n\n1. Open the following configuration file to enable enable TCP BBR.\n\n```bash\nvi /etc/sysctl.conf\n```\n\n2. At the end of the config file, add the following lines.\n\n```bash\nnet.core.default_qdisc=fq\nnet.ipv4.tcp_congestion_control=bbr\n```\n\n3. reload\n\n```bash\nsysctl -p\n```\n\nNow, Verify if BBR is enabled in your system,\n\n```bash\nsysctl net.ipv4.tcp_congestion_control\n```\n\nOutput:\n\n```bash\nroot@vps:~# sysctl net.ipv4.tcp_congestion_control\nnet.ipv4.tcp_congestion_control = bbr\n```\n"},{"fields":{"slug":"/peertube-setup/","title":"Peertube Setup with Caddy Server"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Peertube Setup with Caddy Server\ntags:\n  - Peertube\n  - Setup\n---\n\nPeertube is an activityPub-federated video streaming platform using P2P directly in your web browser.\n\nAlso see [here](https://github.com/Chocobozzz/PeerTube/blob/develop/support/doc/production.md)\n\n## Pre Requirement\n\n1. [[debian-server-setup]]\n2. [[caddy2-setup-for-debian]]\n3. [[nodejs-setup-for-debian]]\n4. Install yarn, and be sure to have [a recent version](https://github.com/yarnpkg/yarn/releases/latest):\n   [https://yarnpkg.com/en/docs/install#linux-tab](https://yarnpkg.com/en/docs/install#linux-tab)\n\n```bash\nsudo npm i -g yarn\n```\n\n4. Install Python:\n\nOn Ubuntu <= bionic (18.04 LTS) or Debian <= Buster:\n\n```\nsudo apt update\nsudo apt install python-dev\npython --version # Should be >= 2.x or >= 3.x\n```\n\nOn Ubuntu >= focal (20.04 LTS) or Debian >= Bullseye:\n\n```\nsudo apt update\nsudo apt install python3-dev python-is-python3 # python-is-python2 should also work\npython --version # Should be >= 2.x or >= 3.x\n```\n\n## Install\n\n1. Install common dependencies:\n\n```\nsudo apt update\nsudo apt install certbot nginx ffmpeg postgresql postgresql-contrib openssl g++ make redis-server git cron wget\nffmpeg -version # Should be >= 4.1\ng++ -v # Should be >= 5.x\n```\n\nNow that dependencies are installed, before running PeerTube you should start PostgreSQL and Redis:\n\n```\nsudo systemctl start redis postgresql\n```\n\n### PeerTube user\n\nCreate a `peertube` user with `/var/www/peertube` home:\n\n```\n$ sudo useradd -m -d /var/www/peertube -s /bin/bash -p peertube peertube\n```\n\nSet its password:\n\n```\n$ sudo passwd peertube\n```\n\n### Database\n\nCreate the production database and a peertube user inside PostgreSQL:\n\n```\n$ cd /var/www/peertube\n$ sudo -u postgres createuser -P peertube\n```\n\nFor password you can use `peertube` from the default config yaml.\n\nHere you should enter a password for PostgreSQL `peertube` user, that should be copied in `production.yaml` file.\nDon't just hit enter else it will be empty.\n\n```\n$ sudo -u postgres createdb -O peertube -E UTF8 -T template0 peertube_prod\n```\n\nThen enable extensions PeerTube needs:\n\n```\n$ sudo -u postgres psql -c \"CREATE EXTENSION pg_trgm;\" peertube_prod\n$ sudo -u postgres psql -c \"CREATE EXTENSION unaccent;\" peertube_prod\n```\n\n### Prepare PeerTube directory\n\nFetch the latest tagged version of Peertube\n\n```\n$ VERSION=$(curl -s https://api.github.com/repos/chocobozzz/peertube/releases/latest | grep tag_name | cut -d '\"' -f 4) && echo \"Latest Peertube version is $VERSION\"\n```\n\nOpen the peertube directory, create a few required directories\n\n```\n$ cd /var/www/peertube\n$ sudo -u peertube mkdir config storage versions\n$ sudo -u peertube chmod 750 config/\n```\n\nDownload the latest version of the Peertube client, unzip it and remove the zip\n\n```\n$ cd /var/www/peertube/versions\n$ sudo -u peertube wget -q \"https://github.com/Chocobozzz/PeerTube/releases/download/${VERSION}/peertube-${VERSION}.zip\"\n$ sudo -u peertube unzip -q peertube-${VERSION}.zip && sudo -u peertube rm peertube-${VERSION}.zip\n```\n\nInstall Peertube:\n\n```\ncd /var/www/peertube\nsudo -u peertube ln -s versions/peertube-${VERSION} ./peertube-latest\ncd ./peertube-latest\nsudo -H -u peertube yarn install --production --pure-lockfile\n```\n\n### PeerTube configuration\n\nCopy the default configuration file that contains the default configuration provided by PeerTube.\nYou **must not** update this file.\n\n```\n$ cd /var/www/peertube\n$ sudo -u peertube cp peertube-latest/config/default.yaml config/default.yaml\n```\n\nNow copy the production example configuration:\n\n```\n$ cd /var/www/peertube\n$ sudo -u peertube cp peertube-latest/config/production.yaml.example config/production.yaml\n```\n\nThen edit the `config/production.yaml` file according to your webserver\nand database configuration (`webserver`, `database`, `redis`, `smtp` and `admin.email` sections in particular).\nKeys defined in `config/production.yaml` will override keys defined in `config/default.yaml`.\n\n**PeerTube does not support webserver host change**. Even though [PeerTube CLI can help you to switch hostname](https://docs.joinpeertube.org/maintain-tools?id=update-hostjs) there's no official support for that since it is a risky operation that might result in unforeseen errors.\n\n### Webserver\n\nWe only provide official configuration files for Nginx.\n\nCopy the nginx configuration template:\n\n```\n$ sudo /etc/nginx/sites-available/peertube\n```\n\nwith the following config:\n\n```conf\n# Minimum Nginx version required:  1.13.0 (released Apr 25, 2017)\n# Please check your Nginx installation features the following modules via 'nginx -V':\n# STANDARD HTTP MODULES: Core, Proxy, Rewrite, Access, Gzip, Headers, HTTP/2, Log, Real IP, SSL, Thread Pool, Upstream, AIO Multithreading.\n# THIRD PARTY MODULES:   None.\n\nupstream backend {\n  server 127.0.0.1:9000;\n}\n\nserver {\n  listen 8880;\n  listen [::]:8880;\n  access_log /var/log/nginx/peertube.access.log; # reduce I/0 with buffer=10m flush=5m\n  error_log  /var/log/nginx/peertube.error.log;\n\n  ##\n  # Certificates\n  # you need a certificate to run in production. see https://letsencrypt.org/\n  ##\n\n  location @api {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host  $host;\n    proxy_set_header X-Real-IP       $remote_addr;\n\n    client_max_body_size  100k; # default is 1M\n\n    proxy_connect_timeout 10m;\n    proxy_send_timeout    10m;\n    proxy_read_timeout    10m;\n    send_timeout          10m;\n\n    proxy_pass http://backend;\n  }\n\n  location / {\n    try_files /dev/null @api;\n  }\n\n  location = /api/v1/videos/upload-resumable {\n    client_max_body_size    0;\n    proxy_request_buffering off;\n\n    try_files /dev/null @api;\n  }\n\n  location = /api/v1/videos/upload {\n    limit_except POST HEAD { deny all; }\n\n    # This is the maximum upload size, which roughly matches the maximum size of a video file.\n    # Note that temporary space is needed equal to the total size of all concurrent uploads.\n    # This data gets stored in /var/lib/nginx by default, so you may want to put this directory\n    # on a dedicated filesystem.\n    client_max_body_size                      12G; # default is 1M\n    add_header            X-File-Maximum-Size 8G always; # inform backend of the set value in bytes before mime-encoding (x * 1.4 >= client_max_body_size)\n\n    try_files /dev/null @api;\n  }\n\n  location ~ ^/api/v1/(videos|video-playlists|video-channels|users/me) {\n    client_max_body_size                      6M; # default is 1M\n    add_header            X-File-Maximum-Size 4M always; # inform backend of the set value in bytes before mime-encoding (x * 1.4 >= client_max_body_size)\n\n    try_files /dev/null @api;\n  }\n\n  ##\n  # Websocket\n  ##\n\n  location @api_websocket {\n    proxy_http_version 1.1;\n    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header   Host            $host;\n    proxy_set_header   X-Real-IP       $remote_addr;\n    proxy_set_header   Upgrade         $http_upgrade;\n    proxy_set_header   Connection      \"upgrade\";\n\n    proxy_pass http://backend;\n  }\n\n  location /socket.io {\n    try_files /dev/null @api_websocket;\n  }\n\n  location /tracker/socket {\n    # Peers send a message to the tracker every 15 minutes\n    # Don't close the websocket before then\n    proxy_read_timeout 15m; # default is 60s\n\n    try_files /dev/null @api_websocket;\n  }\n\n  ##\n  # Performance optimizations\n  # For extra performance please refer to https://github.com/denji/nginx-tuning\n  ##\n\n  root /var/www/peertube/storage;\n\n  # Enable compression for JS/CSS/HTML, for improved client load times.\n  # It might be nice to compress JSON/XML as returned by the API, but\n  # leaving that out to protect against potential BREACH attack.\n  gzip              on;\n  gzip_vary         on;\n  gzip_types        # text/html is always compressed by HttpGzipModule\n                    text/css\n                    application/javascript\n                    font/truetype\n                    font/opentype\n                    application/vnd.ms-fontobject\n                    image/svg+xml;\n  gzip_min_length   1000; # default is 20 bytes\n  gzip_buffers      16 8k;\n  gzip_comp_level   2; # default is 1\n\n  client_body_timeout       30s; # default is 60\n  client_header_timeout     10s; # default is 60\n  send_timeout              10s; # default is 60\n  keepalive_timeout         10s; # default is 75\n  resolver_timeout          10s; # default is 30\n  reset_timedout_connection on;\n  proxy_ignore_client_abort on;\n\n  tcp_nopush                on; # send headers in one piece\n  tcp_nodelay               on; # don't buffer data sent, good for small data bursts in real time\n\n  # If you have a small /var/lib partition, it could be interesting to store temp nginx uploads in a different place\n  # See https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path\n  #client_body_temp_path /var/www/peertube/storage/nginx/;\n\n  # Bypass PeerTube for performance reasons. Optional.\n  # Should be consistent with client-overrides assets list in /server/controllers/client.ts\n  location ~ ^/client/(assets/images/(icons/icon-36x36\\.png|icons/icon-48x48\\.png|icons/icon-72x72\\.png|icons/icon-96x96\\.png|icons/icon-144x144\\.png|icons/icon-192x192\\.png|icons/icon-512x512\\.png|logo\\.svg|favicon\\.png))$ {\n    add_header Cache-Control \"public, max-age=31536000, immutable\"; # Cache 1 year\n\n    root /var/www/peertube;\n\n    try_files /storage/client-overrides/$1 /peertube-latest/client/dist/$1 @api;\n  }\n\n  # Bypass PeerTube for performance reasons. Optional.\n  location ~ ^/client/(.*\\.(js|css|png|svg|woff2|otf|ttf|woff|eot))$ {\n    add_header Cache-Control \"public, max-age=31536000, immutable\"; # Cache 1 year\n\n    alias /var/www/peertube/peertube-latest/client/dist/$1;\n  }\n\n  # Bypass PeerTube for performance reasons. Optional.\n  location ~ ^/static/(thumbnails|avatars)/ {\n    if ($request_method = 'OPTIONS') {\n      add_header Access-Control-Allow-Origin  '*';\n      add_header Access-Control-Allow-Methods 'GET, OPTIONS';\n      add_header Access-Control-Allow-Headers 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n      add_header Access-Control-Max-Age       1728000; # Preflight request can be cached 20 days\n      add_header Content-Type                 'text/plain charset=UTF-8';\n      add_header Content-Length               0;\n      return 204;\n    }\n\n    add_header Access-Control-Allow-Origin    '*';\n    add_header Access-Control-Allow-Methods   'GET, OPTIONS';\n    add_header Access-Control-Allow-Headers   'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n    add_header Cache-Control                  \"public, max-age=7200\"; # Cache response 2 hours\n\n    rewrite ^/static/(.*)$ /$1 break;\n\n    try_files $uri @api;\n  }\n\n  # Bypass PeerTube for performance reasons. Optional.\n  location ~ ^/static/(webseed|redundancy|streaming-playlists)/ {\n    limit_rate_after            5M;\n\n    # Clients usually have 4 simultaneous webseed connections, so the real limit is 3MB/s per client\n    set $peertube_limit_rate    800k;\n\n    # Increase rate limit in HLS mode, because we don't have multiple simultaneous connections\n    if ($request_uri ~ -fragmented.mp4$) {\n      set $peertube_limit_rate  5M;\n    }\n\n    # Use this line with nginx >= 1.17.0\n    #limit_rate $peertube_limit_rate;\n    # Or this line if your nginx < 1.17.0\n    set $limit_rate $peertube_limit_rate;\n\n    if ($request_method = 'OPTIONS') {\n      add_header Access-Control-Allow-Origin  '*';\n      add_header Access-Control-Allow-Methods 'GET, OPTIONS';\n      add_header Access-Control-Allow-Headers 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n      add_header Access-Control-Max-Age       1728000; # Preflight request can be cached 20 days\n      add_header Content-Type                 'text/plain charset=UTF-8';\n      add_header Content-Length               0;\n      return 204;\n    }\n\n    if ($request_method = 'GET') {\n      add_header Access-Control-Allow-Origin  '*';\n      add_header Access-Control-Allow-Methods 'GET, OPTIONS';\n      add_header Access-Control-Allow-Headers 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n\n      # Don't spam access log file with byte range requests\n      access_log off;\n    }\n\n    # Enabling the sendfile directive eliminates the step of copying the data into the buffer\n    # and enables direct copying data from one file descriptor to another.\n    sendfile on;\n    sendfile_max_chunk 1M; # prevent one fast connection from entirely occupying the worker process. should be > 800k.\n    aio threads;\n\n    rewrite ^/static/webseed/(.*)$ /videos/$1 break;\n    rewrite ^/static/(.*)$         /$1        break;\n\n    try_files $uri @api;\n  }\n}\n```\n\nAdd caddy config:\n\n```conf\nexample.com {\n\treverse_proxy 127.0.0.1:8880\n}\n```\n\nThen modify the webserver configuration file. Please pay attention to the `alias` keys of the static locations.\nIt should correspond to the paths of your storage directories (set in the configuration file inside the `storage` key).\n\n```\n$ sudo vim /etc/nginx/sites-available/peertube\n```\n\nActivate the configuration file:\n\n```\n$ sudo ln -s /etc/nginx/sites-available/peertube /etc/nginx/sites-enabled/peertube\n```\n\nTo generate the certificate for your domain as required to make https work you can use [Let's Encrypt](https://letsencrypt.org/):\n\n```\n$ sudo systemctl stop nginx\n$ sudo certbot certonly --standalone --post-hook \"systemctl restart nginx\"\n$ sudo systemctl reload nginx\n```\n\nNow you have the certificates you can reload nginx:\n\n```\n$ sudo systemctl reload nginx\n```\n\nCertbot should have installed a cron to automatically renew your certificate.\nSince our nginx template supports webroot renewal, we suggest you to update the renewal config file to use the `webroot` authenticator:\n\n```\n$ # Replace authenticator = standalone by authenticator = webroot\n$ # Add webroot_path = /var/www/certbot\n$ sudo vim /etc/letsencrypt/renewal/your-domain.com.conf\n```\n\n### TCP/IP Tuning\n\n**On Linux**\n\n```\n$ sudo cp /var/www/peertube/peertube-latest/support/sysctl.d/30-peertube-tcp.conf /etc/sysctl.d/\n$ sudo sysctl -p /etc/sysctl.d/30-peertube-tcp.conf\n```\n\nYour distro may enable this by default, but at least Debian 9 does not, and the default FIFO\nscheduler is quite prone to \"Buffer Bloat\" and extreme latency when dealing with slower client\nlinks as we often encounter in a video server.\n\n### systemd\n\nIf your OS uses systemd, copy the configuration template:\n\n```\n$ sudo cp /var/www/peertube/peertube-latest/support/systemd/peertube.service /etc/systemd/system/\n```\n\nCheck the service file (PeerTube paths and security directives):\n\n```\n$ sudo vim /etc/systemd/system/peertube.service\n```\n\nTell systemd to reload its config:\n\n```\n$ sudo systemctl daemon-reload\n```\n\nIf you want to start PeerTube on boot:\n\n```\n$ sudo systemctl enable peertube\n```\n\nRun:\n\n```\n$ sudo systemctl start peertube\n$ sudo journalctl -feu peertube\n```\n\nRun:\n\n```\n$ sudo service peertube start\n```\n\n### Administrator\n\nThe administrator password is automatically generated and can be found in the PeerTube\nlogs (path defined in `production.yaml`). You can also set another password with:\n\n```\n$ cd /var/www/peertube/peertube-latest && NODE_CONFIG_DIR=/var/www/peertube/config NODE_ENV=production npm run reset-password -- -u root\n```\n\nAlternatively you can set the environment variable `PT_INITIAL_ROOT_PASSWORD`,\nto your own administrator password, although it must be 6 characters or more.\n\n### What now?\n\nNow your instance is up you can:\n\n- Add your instance to the public PeerTube instances index if you want to: https://instances.joinpeertube.org/\n- Check [available CLI tools](/support/doc/tools.md)\n\n## Upgrade\n\n### PeerTube instance\n\n**Check the changelog (in particular BREAKING CHANGES!):** https://github.com/Chocobozzz/PeerTube/blob/develop/CHANGELOG.md\n\n#### Auto\n\nThe password it asks is PeerTube's database user password.\n\n```\n$ cd /var/www/peertube/peertube-latest/scripts && sudo -H -u peertube ./upgrade.sh\n$ sudo systemctl restart peertube # Or use your OS command to restart PeerTube if you don't use systemd\n```\n\n#### Manually\n\nMake a SQL backup\n\n```\n$ SQL_BACKUP_PATH=\"backup/sql-peertube_prod-$(date -Im).bak\" && \\\n    cd /var/www/peertube && sudo -u peertube mkdir -p backup && \\\n    sudo -u postgres pg_dump -F c peertube_prod | sudo -u peertube tee \"$SQL_BACKUP_PATH\" >/dev/null\n```\n\nFetch the latest tagged version of Peertube:\n\n```\n$ VERSION=$(curl -s https://api.github.com/repos/chocobozzz/peertube/releases/latest | grep tag_name | cut -d '\"' -f 4) && echo \"Latest Peertube version is $VERSION\"\n```\n\nDownload the new version and unzip it:\n\n```\n$ cd /var/www/peertube/versions && \\\n    sudo -u peertube wget -q \"https://github.com/Chocobozzz/PeerTube/releases/download/${VERSION}/peertube-${VERSION}.zip\" && \\\n    sudo -u peertube unzip -o peertube-${VERSION}.zip && \\\n    sudo -u peertube rm peertube-${VERSION}.zip\n```\n\nInstall node dependencies:\n\n```\n$ cd /var/www/peertube/versions/peertube-${VERSION} && \\\n    sudo -H -u peertube yarn install --production --pure-lockfile\n```\n\nCopy new configuration defaults values and update your configuration file:\n\n```\n$ sudo -u peertube cp /var/www/peertube/versions/peertube-${VERSION}/config/default.yaml /var/www/peertube/config/default.yaml\n$ diff /var/www/peertube/versions/peertube-${VERSION}/config/production.yaml.example /var/www/peertube/config/production.yaml\n```\n\nChange the link to point to the latest version:\n\n```\n$ cd /var/www/peertube && \\\n    sudo unlink ./peertube-latest && \\\n    sudo -u peertube ln -s versions/peertube-${VERSION} ./peertube-latest\n```\n\n### nginx\n\nCheck changes in nginx configuration:\n\n```\n$ cd /var/www/peertube/versions\n$ diff \"$(ls --sort=t | head -2 | tail -1)/support/nginx/peertube\" \"$(ls --sort=t | head -1)/support/nginx/peertube\"\n```\n\n### systemd\n\nCheck changes in systemd configuration:\n\n```\n$ cd /var/www/peertube/versions\n$ diff \"$(ls --sort=t | head -2 | tail -1)/support/systemd/peertube.service\" \"$(ls --sort=t | head -1)/support/systemd/peertube.service\"\n```\n\n### Restart PeerTube\n\nIf you changed your nginx configuration:\n\n```\n$ sudo systemctl reload nginx\n```\n\nIf you changed your systemd configuration:\n\n```\n$ sudo systemctl daemon-reload\n```\n\nRestart PeerTube and check the logs:\n\n```\n$ sudo systemctl restart peertube && sudo journalctl -fu peertube\n```\n\n### Things went wrong?\n\nChange `peertube-latest` destination to the previous version and restore your SQL backup:\n\n```\n$ OLD_VERSION=\"v0.42.42\" && SQL_BACKUP_PATH=\"backup/sql-peertube_prod-2018-01-19T10:18+01:00.bak\" && \\\n    cd /var/www/peertube && sudo -u peertube unlink ./peertube-latest && \\\n    sudo -u peertube ln -s \"versions/peertube-$OLD_VERSION\" peertube-latest && \\\n    sudo -u postgres pg_restore -c -C -d postgres \"$SQL_BACKUP_PATH\" && \\\n    sudo systemctl restart peertube\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[debian-server-setup]: debian-server-setup.md \"Debian Server Setup\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[nodejs-setup-for-debian]: nodejs-setup-for-debian.md \"Nodejs Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/postgres-setup-for-macos/","title":"Postgres Setup for Macos"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Postgres Setup for Macos\ntags:\n  - Postgres\n  - MacOS\n  - Setup\n---\n\n## Install\n\n```bash\nbrew install postgresql\nbrew services start postgresql\n```\n"},{"fields":{"slug":"/projects/","title":"Projects"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Projects\ntags:\n  - Projects\n  - Me\n---\n\nThis is a list of projects I've done and am doing.\n\n## List\n\n- **[Track Awesome List](https://www.trackawesomelist.com)**\n\n  Track your favorite github awesome repo, not just star it. trackawesomelist.com provides website, newsletter, RSS for tracking the popular awesome list by daily and weekly.\n\n- **[Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki)**\n\n  A gatsby theme for wiki site. Like this site is using the theme to generate. Cause this wiki is a thing that I want to maintain the whole life, so the theme would be maintain for a long time.\n\n- **[Actionsflow](https://github.com/actionsflow/actionsflow)**\n\n  [Actionsflow](https://github.com/actionsflow/actionsflow) helps you automate workflows - it's a free [IFTTT](https://ifttt.com/)/[Zapier](https://zapier.com/) alternative for developers. With [Actionsflow](https://github.com/actionsflow/actionsflow) you can connect your favorite apps, data, and APIs, receive notifications of actions as they occur, sync files, collect data, and more. We implemented it based on [Github actions](https://docs.github.com/en/actions), and you use a YAML file to build your workflows. The configuration format is the same as [Github actions](https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow), which makes it easy for you to get going if you've explored Github actions before. You can also use any [Github actions](https://github.com/marketplace?type=actions) as your job's steps.\n\n- **[Buzzing](https://www.buzzing.cc)**\n\n  You can use [Buzzing](https://www.buzzing.cc/) to see hot discussions in your native language. Browse in your native language, Read more into the original text. Currently, it supports Chinese, Japanese, English, you can find topics like [Buzzing on Reddit](https://reddit.buzzing.cc), [Buzzing on Stocks](https://stocks.buzzing.cc), [Buzzing on Product Hunt](https://ph.buzzing.cc), [Buzzing on Hacker News](https://hn.buzzing.cc/), [Buzzing on Reddit ASK](https://ask.buzzing.cc/), etc.\n\n- **[Gatsby Theme Timeline](https://github.com/theowenyoung/gatsby-theme-timeline)**\n\n  A Gatsby theme, you can use it to show your all posts, tweets, instagram posts etc into one blog. In my opinion, this is a real personal home.\n"},{"fields":{"slug":"/qbittorrent-setup-for-debian/","title":"qBittorrent setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Downloads\n  - BT\n  - Torrents\n  - qBittorrent\n  - Jackett\n  - Debian\n  - Setup\n  - Server\n---\n\n# qBittorrent setup for Debian\n\n## Install\n\nBecause there is no official ppa of qBittorrent for debian, so we use a [third party service - qbittorrent-nox-static](https://github.com/userdocs/qbittorrent-nox-static) to compile qb.\n\n1. Download script\n\n```bash\nwget -qO ~/qbittorrent-nox-static.sh https://git.io/qbstatic\nchmod +x ~/qbittorrent-nox-static.sh\n# pre\nsudo ~/qbittorrent-nox-static.sh\n# build\n~/qbittorrent-nox-static.sh all\n# install\nsudo ~/qbittorrent-nox-static.sh install\n```\n\n## Configure\n\nRead more at [qbittorrent-nox configure](https://userdocs.github.io/qbittorrent-nox-static/#/install-qbittorrent?id=configuring-qbittorrent)\n\n```bash\nvim ~/.config/qBittorrent/qBittorrent.conf\n```\n\nWith follow config:\n\n```ini\n[LegalNotice]\nAccepted=true\n\n[Preferences]\nWebUI\\Port=8080\nWebUI\\HostHeaderValidation=false\n```\n\n## Systemd service\n\nReference at [here](https://userdocs.github.io/qbittorrent-nox-static/#/systemd)\n\n```bash\n# create a user\nsudo vim /etc/systemd/system/qbittorrent.service\n```\n\nConfig:\n\n```bash\n[Unit]\nDescription=qBittorrent-nox service\nWants=network-online.target\nAfter=network-online.target nss-lookup.target\n\n[Service]\nType=exec\nUser=qbtuser\nExecStart=/usr/local/bin/qbittorrent-nox\nRestart=on-failure\nSyslogIdentifier=qbittorrent-nox\n\n[Install]\nWantedBy=multi-user.target\n```\n\nAfter any changes to the services reload using this command.\n\n```bash\nsudo systemctl daemon-reload\n```\n\nNow you can enable the service\n\n```bash\nsudo systemctl enable --now qbittorrent.service\n```\n\nNow you can use these commands\n\n```bash\nsystemctl stop qbittorrent\nsystemctl start qbittorrent\nsystemctl restart qbittorrent\nsystemctl status qbittorrent\n\n```\n\n## Reverse Proxy (Optional)\n\nUse Caddy to access qBittorrent with domain. This should install [[caddy2-setup-for-debian]]\n\nConfig:\n\n```bash\nexample.com {\n   push\n   reverse_proxy 127.0.0.1:8080\n}\n\n```\n\nNow, you can access your qBittorrent web UI at: example.com, the default username and password is : admin/adminadmin\n\n> Note, you should change the default username/password\n\n## Config\n\n- Download directory, `/data/Downloads`\n- Settings, auto add [China](https://github.com/XIU2/TrackersListCollection) <https://trackerslist.com/best.txt> , [US](https://github.com/ngosang/trackerslist) <https://ngosang.github.io/trackerslist/trackers_best.txt>\n- Open `announce_to_all_trackers` at settings.\n\n## Install Search Plugin Jackett\n\n[Jackett](https://github.com/Jackett/Jackett) is a server program that provides support for more than 400 torrent sites (public and private).\n\n### Install Jackett\n\nSee [[jackett-setup]]\n\n### Install Jackett Plugin\n\nSee also at [here](https://github.com/qbittorrent/search-plugins/wiki/How-to-configure-Jackett-plugin)\n\nOpen qBittorrent Web UI, In the Search tab, click the Search plugins... button (bottom-right) -> add new plugin -> `https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/jackett.py`\n\nChange API key settings, You can get it from Jackett UI\n\n```bash\nvim ~/.local/share/qBittorrent/nova3/engines/jackett.json\n```\n\n## Resource\n\n[高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[jackett-setup]: jackett-setup.md \"Jackett Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/radarr-setup/","title":"Radarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Radarr\n  - Setup\n  - Self-Hosted\n---\n\n# Radarr Setup\n\n[repo](https://github.com/Radarr/Radarr)\n\n## Install\n\nSee also [here](https://wiki.servarr.com/radarr/installation#linux)\n\n[Latest Release](https://github.com/Radarr/Radarr/releases)\n\n### Systemd\n\n```bash\ncat << EOF | sudo tee /etc/systemd/system/radarr.service > /dev/null\n[Unit]\nDescription=Radarr Daemon\nAfter=syslog.target network.target\n[Service]\nUser=green\nGroup=admin\nType=simple\n\nExecStart=/home/green/radarr/Radarr -nobrowser -data=/home/green/.config/radarr/\nTimeoutStopSec=20\nKillMode=process\nRestart=always\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n"},{"fields":{"slug":"/rclone-setup/","title":"Rclone Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Rclone\n  - Setup\n  - Files\n---\n\n# Rclone Setup\n\n## Install\n\n```bash\ncurl https://rclone.org/install.sh | sudo bash\n```\n\nAlso see [here](https://rclone.org/drive/)\n\n## Transfer\n\n```bash\ncat ~/.config/rclone\n```\n\nCopy that to another machine.\n\n## Web UI\n\n```bash\nrclone rcd --rc-web-gui --rc-user=test --rc-pass=test --rc-web-gui-update --stats=24h --rc-enable-metrics --rc-web-gui-no-open-browser\n```\n"},{"fields":{"slug":"/ruby-setup/","title":"Ruby Setup for MacOS"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Ruby Setup for MacOS\ntags:\n  - Setup\n  - Ruby\n---\n\n## Install\n\n```bash\nbrew install rbenv\nrbenv init\n\n# add eval \"$(rbenv init -)\" to ~/.zshrc\nRUBY_CONFIGURE_OPTS=--with-jemalloc rbenv install 2.7.4\nrbenv global 2.7.4\ngem install bundler --no-document\n```\n"},{"fields":{"slug":"/rust-enviroment-setup-for-debian/","title":"Rust Environment Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Rust\n  - Debian\n  - Setup\n---\n\n# Rust Environment Setup for Debian\n\n[Official Site](https://www.rust-lang.org/learn/get-started)\n\n## Install\n\n```bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n"},{"fields":{"slug":"/shadowsocks-rust-setup-for-debian/","title":"Shadowsocks Rust Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Shadowsocks\n  - Rust\n  - Setup\n  - Debian\n  - Proxies\n---\n\n# Shadowsocks Rust Setup for Debian\n\nRepo: <https://github.com/shadowsocks/shadowsocks-rust>\n\nSetup rust first: [[rust-enviroment-setup-for-debian]]\n\n## Install\n\n```bash\nrustup default nightly\ncargo install shadowsocks-rust\n```\n\n## Configure\n\n```bash\nmkdir ss\n```\n\nServer config sample:\n\n```json\n{\n  \"servers\": [\n    {\n      \"address\": \"::\",\n      \"port\": 9982,\n      \"method\": \"chacha20-ietf-poly1305\",\n      \"password\": \"strong-password\",\n      \"mode\": \"tcp_and_udp\",\n      \"fast_open\": false,\n      \"timeout\": 7200\n    }\n  ]\n}\n```\n\n## Add as a system service\n\n```bash\nsudo vim /etc/systemd/system/ss.service\n```\n\n\n> Note: Change `username` to your own username\n\n```bash\n[Unit]\nDescription=ssserver service\nAfter=network.target\n\n[Service]\nExecStart=/home/username/.cargo/bin/ssserver -c /home/username/ss/config.json\nExecStop=/usr/bin/killall ssserver\nRestart=on-failure\nStandardOutput=syslog               # Output to syslog\nStandardError=syslog                # Output to syslog\nSyslogIdentifier=ss\nUser=username\nGroup=admin\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now ss\n```\n\n## Run\n\n## Status\n\n```bash\nsudo systemctl status ss\n```\n\n## Stop\n\n```bash\nsudo systemctl stop ss\n```\n\n## Update\n\n```bash\ncargo install shadowsocks-rust\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[rust-enviroment-setup-for-debian]: rust-enviroment-setup-for-debian.md \"Rust Environment Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/smart-word-break-in-css/","title":"Smart word break in CSS"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - CSS\n---\n\n# Smart word break in CSS\n\n> From [Smarter word break in CSS? - Stack Overflow](https://stackoverflow.com/a/48830291)\n\n```css\nbody {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n```\n"},{"fields":{"slug":"/travel-approvals/","title":"旅行手续"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntags:\n  - Travel\n  - Approvals\n  - 中文\n---\n\n# 旅行手续\n\n## List\n\n- [如何给车辆办理“护照”出境自驾？](https://zhuanlan.zhihu.com/p/25400818) ，[备份](https://web.archive.org/web/20210825164831/https://zhuanlan.zhihu.com/p/25400818)\n\n## Communities\n\n- [Long term visas](https://longtermvisas.com/) - Travel decisions, simplified.\n\n## Tools\n\n- [预测你在世界各地的生活成本](https://gromov.com/)\n"},{"fields":{"slug":"/todo/","title":"Todos"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Todos\ntags:\n  - Todo\n---\n\n- [ ] - 写一篇文章主要指出为什么不要用运营商绑定的东西做笔记这种一辈子的东西\n"},{"fields":{"slug":"/tv-shows/","title":"电视剧笔记"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 电视剧笔记\ntags:\n  - TV\n  - Notes\n  - 中文\n---\n\n记录自己看过的剧，按年份排序，星星 ✨ 是我自己的评分，如有笔记则另外链接。基本上从 2021 开始记的，以前的由于没有及时建立这个第二大脑，基本都忘的差不多了。有一些剧是看的解说，但是有点后悔，当时是为了节省时间，早知道那么精彩就应该看原剧。\n\nAlso see [[books]], [[movies]]\n\n## workflows\n\n目前主要是用 [[qbittorrent-setup-for-debian]],[[jackett-setup]]，[[sonarr-setup]],[[bazarr-setup]] 在下载和管理剧以及字幕，买了一台 1T 的 VPS 作为 NAS。本来想用[[jellyfin-setup]]来作为影视中心的，但是使用后感觉客户端并不是 native 的，略卡，可能暂时还不胜用，所以索性直接上[[caddy-file-server-url-scheme]], 然后 mac 用 [IINA](https://iina.io/)，或者[迅雷看看](https://video.xunlei.com/)（大多数剧的字幕匹配做的好一点），手机端用 [nplayer](https://nplayer.com/)或[VLC](https://www.videolan.org/) 打开流文件。目前这样的体验是最爽的。\n\n![Root Screenshot](attachments/caddy-root.png)\n![Rick and Morty Season 5](attachments/caddy-tv-demo.png)\n\n## 人生必看系列\n\n这里放我自己觉得必看的一些剧：\n\n- 绝命毒师\n- 绝命律师\n- 傲骨之战\n- 我的天才女友\n- 早间新闻\n- 行骗天下\n\n## 2020\n\n- [x] 我的天才女友，✨✨✨✨✨，神剧\n- [x] 银河英雄传说，✨✨✨✨✨，动画长剧，后悔小时候没看，神动画剧，很宏大的宇宙世界。正反派都刻画的非常好。\n\n## 2021\n\n- [x] 黑道家族，共六季， ✨✨✨✨，颠覆对黑道剧的想象。\n- [x] 傲骨之战，第五季，✨✨✨✨✨，神剧，第五季紧跟时事，对新冠疫情，直播，言论自由，冗长的体制进行了深刻的探讨。人生必看。\n- [ ] 瑞克与莫蒂，第五季， ✨✨✨✨，还行，但是有一点套路化了，没有第一季的惊喜了。\n- [x] 早间新闻，第一季，✨✨✨✨✨，全剧在多方面探讨了 Metoo 的影响，剧情也很精彩（虽然有部分地方有点戏剧化，但是不影响），有很多地方看的很揪心。反正在我看来这部剧就是既深刻又精彩。期待第二季。\n- [x] 半泽直树，第二季，✨✨✨✨，日本剧总感觉有那么一点含蓄，等级森严。虽然第二季引入了女性角色，但是还是有点不够饱满。\n- [x] 行骗天下，✨✨✨✨✨，五星推荐，日本神剧，每一集都反转反转再反转，精彩！\n- [x] 法官大人，✨✨，绝命毒师里的老白主演，但是后面剧情越来越烂尾，不推荐。\n- [x] 致命女人，第二季，✨✨✨，前面很精彩，但是后面走向有点套路。\n- [ ] 新闻编辑室，第一季，✨✨✨，看了 10 来集，暂时弃剧了，主要是里面的情感关系和幽默让我有点看《硅谷》的感觉，感情有点太脸谱化，幽默就更脸谱化了，笑不出来，深刻是有，但是如果只有深刻，没有剧情，就有点看不下去。\n- [x] 太空堡垒卡拉狄加，✨✨✨，第一季+第二季，后面几季没看了，按现在的眼光来看有点套路，然后又有点太男女主光环，以及有点 迷信？\n- [ ] 是大臣，全三季，✨✨✨✨✨，五星推荐，英式情景喜剧，每一集一个主题，对英国政治运作的吐槽。非常到位。\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[books]: books.md \"读书笔记\"\n[movies]: movies.md \"电影笔记\"\n[qbittorrent-setup-for-debian]: qbittorrent-setup-for-debian.md \"qBittorrent setup for Debian\"\n[jackett-setup]: jackett-setup.md \"Jackett Setup\"\n[sonarr-setup]: sonarr-setup.md \"Sonarr Setup\"\n[bazarr-setup]: bazarr-setup.md \"Bazarr Setup\"\n[jellyfin-setup]: jellyfin-setup.md \"Jellyfin setup\"\n[caddy-file-server-url-scheme]: caddy-file-server-url-scheme.md \"Caddy File Server Browser with URL Scheme\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/vim-tips/","title":"Vim Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Tips\n  - Editors\n  - Vim\n---\n\n# Vim Tips\n\n## Tips\n\n- Delete all words: `1,$d`\n"},{"fields":{"slug":"/vscode-tips/","title":"VS Code Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - VS Code\n  - Editors\n  - Tips\n---\n\n# VS Code Tips\n\n## Tips\n\n### Open command palette: `⇧⌘P`\n\n### Select current line: `cmd+L`\n\n### Quick Switch Windows\n\nAlso see [here](https://stackoverflow.com/questions/37371739/os-x-cycle-between-windows-in-visual-studio-code)\n\nAdded the following shortcut to `keybindings.json`\n\n```json\n{\n  \"key\": \"alt+tab\",\n  \"command\": \"workbench.action.quickSwitchWindow\"\n}\n```\n\n## Read more:\n\n- [Visual Studio Code Tips and Tricks](https://code.visualstudio.com/docs/getstarted/tips-and-tricks)\n- [GitHub - microsoft/vscode-tips-and-tricks: Collection of helpful tips and tricks for VS Code.](https://github.com/microsoft/vscode-tips-and-tricks)\n"},{"fields":{"slug":"/youtube-download/","title":"Youtube Download"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Youtube\n  - Downloads\n  - Self-Hosted\n  - Metube\n---\n\n# Youtube Download\n\n## List\n\n- [GitHub - alexta69/metube: youtube-dl web UI](https://github.com/alexta69/metube)\n- [Metube chrome extension](https://chrome.google.com/webstore/detail/metube-downloader/fbmkmdnlhacefjljljlbhkodfmfkijdh)\n\n## Setup\n\nRun with [[docker-setup]]\n\n## Config\n\n```yaml\nversion: \"3\"\nservices:\n  metube:\n    image: alexta69/metube\n    container_name: metube\n    restart: unless-stopped\n    ports:\n      - \"10005:8081\"\n    volumes:\n      - /data/youtube:/downloads\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[docker-setup]: docker-setup.md \"Docker Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/journal/awesome-stocks/","title":"收集股市相关的资源"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集股市相关的资源\ntags:\n  - Awesome\n  - Stocks\n---\n\n## Tools\n\n- [美国众议员的股票操作跟踪](https://housestockwatcher.com/)\n- [美国参议院的股票操作跟踪](https://senatestockwatcher.com/)\n- [用中文查看美国股市热门讨论](https://stocks.buzzing.cc)\n\n## Interesting\n\n- [简单交易买 etf](https://github.com/KibaeKim/SectorTradingAlgorithm)\n\n## Commmunities\n\n- [reddit brkb - 追踪把巴菲特的股票投资](https://www.reddit.com/r/brkb/)\n"},{"fields":{"slug":"/journal/daily-note-2021-09-05/","title":"Journal Entry, Sunday, September 05, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Sunday, September 05, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## List\n\n- [Deno Deploy Beta2](https://deno.com/blog/deploy-beta2)\n- [罗伯特-萨波尔斯基谈抑郁症(2009)](https://www.robertsapolskyrocks.com/depression.html) - #Depression\n- [深圳准留学生花 15800 元“围观”的厂妹，曾让我羡慕死了](https://cj.sina.com.cn/articles/view/1154814715/44d512fb01900wn2x) - #Society\n- [最好的域名不是.com, 而是.is, The Best TLD is Not .com](https://slc.is/#The%20Best%20TLD%20is%20Not%20.com) - #Domains , the best tld is `.is`, by Iceland\n- [Helm](https://thehelm.com/) - 个人服务器，类似树莓派，$399 1T, #Privacy\n- [为什么超链接是蓝色的？](https://blog.mozilla.org/en/internet-culture/deep-dives/why-are-hyperlinks-blue/)\n- [幼儿园，一孩难求](https://mp.weixin.qq.com/s/b6TLj4b2rhexEjDT-u4jHA) - 小孩数量在减少\n- [「不长大」，是怎么成为越来越多人的愿望？](https://mp.weixin.qq.com/s/XhRf8pvVxljAAzAd81_bLg)\n- [浪漫是怎么一步步在现代爱情中消失的？](https://mp.weixin.qq.com/s/5uKyMHd2G4bunZIZ9YFYYg)"},{"fields":{"slug":"/journal/daily-note-2021-09-10/","title":"Journal Entry, Friday, September 10, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Friday, September 10, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Interesting Tools\n\n- [Wish Wall](https://www.wishwall.xyz/) - What is the one thing you want to do before you die?\n"},{"fields":{"slug":"/journal/daily-note-2021-09-11/","title":"Journal Entry, Saturday, September 11, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Saturday, September 11, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n- [stackoverflow, 我们仍然相信私人办公室](https://stackoverflow.blog/2015/01/16/why-we-still-believe-in-private-offices/)\n"},{"fields":{"slug":"/journal/daily-note-2021-09-12/","title":"Journal Entry, Sunday, September 12, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Sunday, September 12, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n- [和太阳一起升起和落下的壁纸，以及推出 15 天后我得到的教训](https://www.reddit.com/r/SideProject/comments/i8x1rt/wallow_wallpaper_that_rises_and_sets_with_the_sun/)\n\n  推出 15 天后。我学到了很多教训， 具有讽刺意味的是， 我一直读到的教训,以下是我学到的：\n\n  1. 如果你建立它， 他们不会来： 启动后的头几天， 零下载， 零评论。如果你没有营销，不要感到惊讶。\n  2. 围绕您的产品建立社区至关重要：如果人们都住在一个房间里，而不是分散在互联网上的许多地方，则更容易与热爱您的产品或服务的人交谈。我刚刚想通了， 现在我正争先恐后地学习如何为此设置正确的方法。\n  3. 倾听您的用户的意见并迅速做出反应：我让人们留下糟糕的评论或完全放弃使用我的产品，因为他们没有得到及时的回答。这是很多的努力，但对于你的前 100 个客户，我认为这是必须的。\n  4. 不要将所有用户建议/反馈添加到您的要做的事情列表中：当你意识到自己无法取悦每个人时，这只会让你感到不知所措和痛苦。\n  5. 在推出之前，请考虑您的营销策略。不要赌\"病毒化\"。你可能不会， 如果你这样做， 它可能会几天， 那么你会平线。而是专注于稳定增长。当我想出如何做到这一点时， 我会很高兴的。\n  6. 尽早建立你的个人品牌：如果你目前建立的东西或渴望建立的东西在你的职业生涯的后期，我不能强调这一点！使用社交媒体来谈论您感兴趣的领域，与技术领导者或其他创始人等互动。建立一个圈子/关注那些知道你的兴趣和你做什么的人（重要：他们应该喜欢你，而不仅仅是虚荣心喜欢和追随者计数的幽灵追随者）。\n\n- [To dont](https://crazymarvin.com/to-dont/)\n"},{"fields":{"slug":"/journal/daily-note-2021-09-15/","title":"Journal Entry, Wednesday, September 15, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Wednesday, September 15, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n- [《太空堡垒卡拉狄加》时间轴的说明](https://zh.e-pistolas.org/entire-battlestar-galactica-timeline-explained)\n- [五分钟日记 - 技巧和提示](https://briansunter.com/blog/five-minute-journal/)\n\n## Morning Questions\n\n### What Would Make Today Great?\n\n- base telegram bot\n- learn rust together\n\n### What Am I Worried About?\n\n- make money\n\n### What Am I Thinking of?\n\n- do something.\n\n## Evening Questions\n\n### How Am I feeling?\n\n### What's Something Good That Happened Today?\n\n### What Did I Do Well?\n\n### What Could I Have Done Better?\n"},{"fields":{"slug":"/journal/daily-note-2021-09-17/","title":"Journal Entry, Friday, September 17, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Friday, September 17, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n## Morning Questions\n\n### What Would Make Today Great?\n\n- 健身环运动\n- telegram bot\n- learn rust together\n\n### What Am I Worried About?\n\n- rust\n\n### What Am I Thinking of?\n\n## Evening Questions\n\n### How Am I feeling?\n\n### What's Something Good That Happened Today?\n\n### What Did I Do Well?\n\n### What Could I Have Done Better?\n"},{"fields":{"slug":"/journal/daily-note-2021-09-23/","title":"Journal Entry, Thursday, September 23, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Thursday, September 23, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n- [reddit 上的人通过复制国会议员的所作所为来交易股票](https://text.npr.org/1039313011)\n"},{"fields":{"slug":"/journal/daily-note-2021-10-10/","title":"Journal Entry, Sunday, October 10, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Sunday, October 10, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-10\n---\n\n## Read List\n\n- [挑战 180 天做 180 个网站，并成为 Yc 奖学金创始人](https://zube.io/blog/how-i-built-180-websites-in-180-days-and-became-a-yc-fellowship-founder/)\n- [艺术品生成器](https://colors.jaylow.se/)\n- [新西兰创业公司](https://www.failory.com/startups/new-zealand)\n- [app store 2021 stats](https://42matters.com/ios-apple-app-store-statistics-and-trends)\n- [妈妈测试- hn 图书推荐](https://hacker-recommended-books.vercel.app/category/0/past-6-months/page/0/5)\n  - [妈妈测试书评](https://book.douban.com/review/10002244/)\n- [hn shows 去哪了](https://news.ycombinator.com/item?id=28682173)\n\n## 感想\n\n- 人一旦开始为了赚钱有目的的找事情，就不好玩了。\n"},{"fields":{"slug":"/journal/daily-note-2021-10-11/","title":"Journal Entry, Monday, October 11, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Monday, October 11, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-10\n---\n\n## Read List\n\n- [问 HN：给我看看你的半成品项目](https://news.ycombinator.com/item?id=25700135)\n\n## Quotes\n\n- 隐私是指人们知道您是谁，但不知道您在做什么。匿名是指人们知道您在做什么，但不知道您是谁 - https://anonymousplanet.org/guide.html\n"},{"fields":{"slug":"/journal/daily-note-2021-10-12/","title":"Journal Entry, Tuesday, October 12, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Tuesday, October 12, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-10\n---\n\n## Read List\n\n- [all things using check box](https://www.bryanbraun.com/2021/09/21/i-keep-making-things-out-of-checkboxes/)\n"},{"fields":{"slug":"/svg/","title":"SVG"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - SVG\n  - Front-End\n---\n\n# SVG\n\n## 教程\n\n- [SVG 图像入门教程 - 阮一峰的网络日志](https://www.ruanyifeng.com/blog/2018/08/svg.html)\n"},{"fields":{"slug":"/subtitles/","title":"Subtitles"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Subtitles\n---\n\n# Subtitles\n\n## List\n\n- [ass to srt](https://sorz.github.io/asstosrt-wasm/) - ass to srt converter\n- [[bazarr-setup]] - Subtitle manager\n- [subtitles translate](https://translate-s ubtitles.com/) - Google translate subtitles\n- [Subhd](https://subhd.tv/) - Best Chinese subtitle website\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[bazarr-setup]: bazarr-setup.md \"Bazarr Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/sonarr-setup/","title":"Sonarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Self-Hosted\n  - Sonarr\n---\n\n# Sonarr Setup\n\nBefore setup sonarr, you should setup [[qbittorrent-setup-for-debian]]\n\n## Install\n\nSee [here](https://sonarr.tv/#downloads-v3-linux)\n\nOnce installed, visit <http://ip:8989>\n\n## Restart\n\n```bash\nsudo systemctl restart sonarr\n```\n\n## Setup\n\nSee also [Sonarr Quick Start Guide | WikiArr](https://wiki.servarr.com/sonarr/quick-start-guide)\n\n1. Click on `Settings => Media Management` on the left menu.\n\n   Check `Rename Episodes`\n\n2. Check left top `Show Advanced`\n\n   `Importing` -> `Import Extra Files` `.srt,.ass,.sub`\n\n3. Add `/data/TV` to `Root Folders`\n\n4. Indexers, Add `eztv`, `RARBG` as Indexers, see jackett home page.\n\n### Add qBittorrent Client:\n\n`Setting` -> `Download Clients ` -> `qBittorrent`\n\n## Resource\n\n- [高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[qbittorrent-setup-for-debian]: qbittorrent-setup-for-debian.md \"qBittorrent setup for Debian\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/placeholder/","title":"This Is a Placeholder File for Mdx"},"frontmatter":{"draft":true},"rawBody":"---\ntitle: This Is a Placeholder File for Mdx\ndraft: true\ntags:\n  - gatsby-theme-primer-wiki-placeholder\n---\n"}]}}}