{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/","title":"Everything I Know by Owen"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Everything I Know by Owen\nseoTitle: Everything I Know by Owen - A Personal Knowledge Based Wiki\ndescription: Personal wiki, share everything I learned, and spend a lifetime updating it. I hope it'll be a good gift for my grandchildren.\nimage: ./attachments/graph-visualisation.jpg\nimageAlt: Graph Visualisation\ntags:\n  - Me\n---\n\n> A personal knowledge based wiki, where I share everything I know. I will be updating this wiki quite often as I use it myself daily both to keep an account of things I know as well as things I want to know and everything in-between.\n\nSince I found [Everything I know](https://wiki.nikitavoloboev.xyz), I was fascinated by this concept, about the wiki, second brain, lifetime notes, backlinks, tags. I realized that \"Yes, this is what I want to do\", I used to create many blogs, Tumblr, WordPress, Hexo, Hugo, Gatsbyjs, etc. But I do not post too many posts, cause there is a certain cost for a blog post. But not for note/wiki. And also I like tags, wiki links for connecting my notes, and there are no other themes that support this. So I created a new [Gatsby theme](https://github.com/theowenyoung/gatsby-theme-primer-wiki) for this. If you you want to build a wiki like this, you can get started from [this foam template](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki) or [obsidian template](https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki) if you prefer Obsidian.\n\nNow , I'am using [foam](https://github.com/foambubble/foam) and [obsidian](https://obsidian.md/) to edit the wiki.\n\nI hope it's a gift for my grandchildren(if I have :)\n\n[Read this wiki online.](https://wiki.owenyoung.com/)\n\n## Why I build this?\n\n- Knowledge that is not remembered/not found is useless\n- My memory is poor\n- I am eager to show(show off) what I know\n- Records make me feel like I'm not wasting my time\n- The cost of writing a blog is high, but the cost of writing notes is low\n- I need a non-vendor locked solution to motivate me to record permanently\n- Plain text is forever\n\n## How I build this?\n\nThe source and site are hosted on [GitHub - theowenyoung/wiki: Personal Knowledge Base Wiki, Everything I Know.](https://github.com/theowenyoung/wiki)\n\nI am proud to have developed my own theme [GitHub - theowenyoung/gatsby-theme-primer-wiki: Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki), If you want to build your own wiki like this, you can follow [GitHub - theowenyoung/foam-template-gatsby-theme-primer-wiki](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki) or [obsidian-template-gatsby-theme-primer-wiki](https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki) if you prefer Obsidian.\n\n## About Me\n\n- [[about]]\n- [[now]]\n- [[projects]]\n- [[goals-2021]]\n\n## Contact Me\n\n- Telegram: <https://t.me/itsowenyoung>\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- 中文推 [@OwenYoungZh](https://twitter.com/OwenYoungZh)\n\n## Follow Me\n\n- Wiki [Everything I Know](https://wiki.owenyoung.com/)\n- Blog [Owen's Story](https://blog.owenyoung.com)\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- 中文推 [@OwenYoungZh](https://twitter.com/OwenYoungZh)\n- Github [@theowenyoung](https://github.com/theowenyoung)\n- Patreon [@theowenyoung](https://www.patreon.com/theowenyoung)\n\n## Graph Visualisation Preview\n\n![Graph Visualisation](./attachments/graph-visualisation.jpg)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[about]: about.md \"About Me\"\n[now]: now.md \"What I’m doing now?\"\n[projects]: projects.md \"Projects\"\n[goals-2021]: goals-2021.md \"2021 Goals\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/api-tokens/","title":"API Tokens"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - API\n  - Auth\n---\n\n# API Tokens\n\n## List\n\n- [API Tokens: A Tedious Survey](https://fly.io/blog/api-tokens-a-tedious-survey/)\n- [JSON Web Token (JWT) Claims](https://www.iana.org/assignments/jwt/jwt.xhtml)\n- [aws signature v4](https://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html)\n- [actix http status code](https://docs.rs/actix-http/2.2.1/actix_http/http/struct.StatusCode.html)\n- [Web Auth ](https://webauthn.guide/) - A better alternative for securing our sensitive information online\n"},{"fields":{"slug":"/about/","title":"About Me"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: About Me\ntags:\n  - Me\n---\n\nProgrammer, Freelancer, Workflow lover, Personal Finance Enthusiast\n\nSee what am I doing now at [here](now.md)\n\n## A failure of English learning\n\nI've learned English more than 10 years, but it still sucks, so I registered a Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung) for only English tweets, and this [wiki](https://wiki.owenyoung.com) and [blog](https://blog.owenyoung.com) to force me to use more English.\n\n## Programmer\n\nFull stack developer, main technology stack is javascript. Find more my projects [[projects]]\n\n## Contact Me\n\n- Telegram: <https://t.me/itsowenyoung>\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- 中文推 [@OwenYoungZh](https://twitter.com/OwenYoungZh)\n\n## Follow me at the following platforms\n\n- Wiki [Everything I Know](https://wiki.owenyoung.com/)\n- Blog [Owen's Story](https://blog.owenyoung.com)\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- Twitter for Chinese [@OwenYoungZh](https://twitter.com/OwenYoungZh)\n- Github [@theowenyoung](https://github.com/theowenyoung)\n- Patreon [@theowenyoung](https://www.patreon.com/theowenyoung)\n- Read.cv [@owenyoung](https://read.cv/owenyoung)\n\n## How I built my wiki?\n\n- [Source Repository](https://github.com/theowenyoung/wiki)\n\n## How I built my blog?\n\n- [How I Built my Blog?](https://blog.owenyoung.com/en/posts/how-i-built-my-blog/)\n- [Content Repository](https://github.com/theowenyoung/story)\n- [Site Repository](https://github.com/theowenyoung/theowenyoung.github.io)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[projects]: projects.md \"Projects\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/auth-gateway/","title":"Auth Gateway"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Auth\n---\n\n# Auth Gateway\n\n## List\n\n- [GitHub - linuxserver/docker-swag: Nginx webserver and reverse proxy with php support and a built-in Certbot (Let's Encrypt) client. It also contains fail2ban for intrusion prevention.](https://github.com/linuxserver/docker-swag)\n- [Setting Up Authelia With SWAG | LinuxServer.ioGitBook icon](https://www.linuxserver.io/blog/2020-08-26-setting-up-authelia)\n- [GitHub - authelia/authelia: The Single Sign-On Multi-Factor portal for web apps](https://github.com/authelia/authelia)\n- [GitHub - greenpau/caddy-auth-portal: Authentication Plugin for Caddy v2 implementing Form-Based, Basic, Local, LDAP, OpenID Connect, OAuth 2.0 (Github, Google, Facebook, Okta, etc.), SAML Authentication](https://github.com/greenpau/caddy-auth-portal)\n"},{"fields":{"slug":"/awesome-algorithm/","title":"Awesome Algorithm"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Algorithm\ntags:\n  - Awesome\n  - Algorithm\n  - Recommend\n---\n\nCurating awesome algorithm related resource.\n\n## List\n\n- [Gorse](https://github.com/zhenghaoz/gorse) - An open source recommender system service written in Go\n"},{"fields":{"slug":"/awesome-answers/","title":"有意思的问题收集"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 有意思的问题收集\ntags:\n  - Awesome\n  - FAQ\n  - Answer\n  - 中文\n  - Ask\n---\n\n收集网上看到的有意思的问题。\n\n## 来源\n\n- [reddit 热门提问中文版](https://ask.buzzing.cc/)\n\n## 人生\n\n- [你收到过的最糟糕的建议是什么？](https://www.reddit.com/r/AskReddit/comments/ph4pax/what_was_the_worst_advice_you_have_ever_received/)\n- [你个人发现有哪些生活小窍门可以改善你的生活？](https://www.reddit.com/r/AskReddit/comments/pk5x1q/what_life_hacks_have_you_personally_found_that/)\n- [Ask HN: 你在一小时内能学到的最佳价值的东西是什么？](https://news.ycombinator.com/item?id=21581361)\n- [Ask HN: 说出一个改变你生活的想法](https://news.ycombinator.com/item?id=23092657)\n- [最适合居住的国家是哪一个？](https://www.reddit.com/r/AskReddit/comments/sb5gci/what_is_the_best_country_to_live_in/)\n\n## 两性\n\n- [除了安全套之外，其他的男性避孕选择？](https://www.reddit.com/r/TooAfraidToAsk/comments/pgwrjx/aside_from_condoms_why_are_there_no_birth_control/)\n\n## 通用\n\n- [什么东西疯狂流行而你却毫无兴趣？](https://www.reddit.com/r/AskReddit/comments/pguqh1/what_is_something_crazy_popular_that_you_have_no/)\n- [你对过去的互联网有什么怀念？](https://www.reddit.com/r/AskReddit/comments/pgqeq8/what_do_you_miss_about_the_internet_of_the_past/)\n\n## 预测\n\n- [Ask HN: 新的十年，有什么预测？2020 版](https://news.ycombinator.com/item?id=21941278)\n\n## 生产力\n\n- [为我节省 100 小时的程序](https://danielsada.tech/blog/programs-saved-me-100-hours/)\n  - [HN 讨论](https://news.ycombinator.com/item?id=13887237)\n\n## 业余项目\n\n- [HN 提问： 你的不在乎结果的项目是？](https://news.ycombinator.com/item?id=25992782)\n"},{"fields":{"slug":"/awesome-apis/","title":"Awesome APIs"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome APIs\ntags:\n  - Awesome\n  - API\n---\n\nCurating APIs.\n\n## Standand\n\n- [JSON API](https://github.com/json-api/json-api)\n- [REST API response format](https://github.com/cryptlex/rest-api-response-format)\n\n## Interesting\n\n- [extract table](https://extract-table.com/) - Extract a table from an image or a PDF\n\n## Convert\n\n- [Github Markdown to HTML](https://github.com/calganaygun/MDcat/blob/main/mdcat.py)\n"},{"fields":{"slug":"/auto-https-ssl-in-china/","title":"在中国自动生成免费HTTPS证书的最佳方案"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 在中国自动生成免费HTTPS证书的最佳方案\ntags:\n  - SSL\n  - HTTPS\n---\n\nCertbot 自动生成 Lets encrypt 的方案已经被墙了，经过各种尝试之后，发现基于 [`amce.sh+cloudflare`](https://github.com/acmesh-official/acme.sh) 的 dns 解析是最方便无痛的.\n\n1. 下载 acme 工具:\n\n   ```bash\n    # 用root用户权限，因为涉及到操作nginx\n    sudo su\n    wget -O -  https://get.acme.sh | sh -s email=my@example.com\n   ```\n\n1. 域名在 [Cloudflare](https://www.cloudflare.com/zh-cn/) 解析\n1. 在某个域名的 dashboard 面板右侧找到 `Account ID`, 记录下备用。\n1. 进入<https://dash.cloudflare.com/profile/api-tokens>，生成一个 API Token,选择`Edit Zone` 模版，Zone Resources 选择 `All Zones`,生成，\n   \b\n   把以下的信息保存到 `~/.bashrc`\n\n   ```bash\n   export CF_Token=\"sdfsdfsdfljlbjkljlkjsdfoiwje\"\n   export CF_Account_ID=\"xxxxxxxxxxxxx\"\n   ```\n\n   ```bash\n   source ~/.bashrc\n   ```\n\n   > 如果有什么不清楚的，可以参考文档： <https://github.com/acmesh-official/acme.sh/wiki/dnsapi>\n\n1. 签发证书，运行 `acme.sh --issue --dns dns_cf -d example.com --server letsencrypt`\n\n1. 安装证书到指定目录：\n\n```bash\nacme.sh --install-cert -d example.com \\\n--key-file       /etc/nginx/ssl/example.com.key  \\\n--fullchain-file /etc/nginx/ssl/example.com.crt \\\n--reloadcmd     \"service nginx force-reload\"\n```\n\n之后 acme 会自动添加 cron 任务，自动续期期限\n\n1. nginx 配置参考\n\n可以在[这里](https://www.digitalocean.com/community/tools/nginx?domains.0.https.certType=custom&domains.0.php.php=false&domains.0.reverseProxy.reverseProxy=true&domains.0.routing.root=false&global.app.lang=zhCN) 在线生成一份合适的 ssl 配置\n\n生成后，首次需要初始化 Diffie-Hellman keys:`openssl dhparam -out /etc/nginx/dhparam.pem 2048`\n\n然后运行 `sudo nginx -t && sudo systemctl reload nginx`\n"},{"fields":{"slug":"/awesome-alternatives/","title":"Awesome Alternatives"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Alternatives\ntags:\n  - Awesome\n  - Alternatives\n---\n\nCurating awesome alternative resources.\n\n- [alternative-front-ends](https://github.com/mendel5/alternative-front-ends) - #Front-End\n- [Alternative Internet](https://github.com/redecentralize/alternative-internet)\n- [Ethical Alternatives & Resources](https://ethical.net/resources/)\n- Twitter\n  - [Nitter](https://github.com/zedeus/nitter) - Twitter front end alternative.\n  - Official instance: <https://nitter.net/> #Twitter\n  - [kizie](https://kizie.co/) - twitter redesign\n- Youtube\n  - [Invidious](https://github.com/iv-org/invidious) - Invidious is an alternative front-end to YouTube #Youtube\n  - Instances: <https://instances.invidious.io/>\n- [Open source Alternatives](https://www.btw.so/open-source-alternatives) - Curated 200+ open source alternatives to tools that businesses require in day-to-day operations. #Open-Source\n- [awesome-alternatives-in-rust](https://github.com/TaKO8Ki/awesome-alternatives-in-rust) - A curated list of replacements for existing software written in Rust #Rust\n- [Bloom](https://github.com/skerkour/bloom) - The simplest way to de-Google your life and business: Inbox, Calendar, Files, Contacts & much more\n\n- Discord\n  - [revolt](https://github.com/revoltchat/revolt)\n- Firebase\n  - [etesync](https://github.com/etesync/server)\n  - [nhost](https://github.com/nhost/nhost) - another firebase alternative.\n  - [appwrite](https://github.com/appwrite/appwrite)\n- Hacker News\n  - [hacker news open source in ruby](hhttps://github.com/lobsters/lobsters)\n  - [littr](https://github.com/mariusor/go-littr)\n  - [gurlic](https://gurlic.com/) - another hacker news alternatives\n- Netlify\n  - [Meli](https://github.com/getmeli/meli)\n- Github\n  - [Source Hut](https://sourcehut.org/)\n"},{"fields":{"slug":"/awesome-applications/","title":"Awesome Applications"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Applications\ntags:\n  - Awesome\n  - Applications\n---\n\nCurating awesome applications.\n\n## Only Macos\n\n- [Radar](https://getradar.co/) - Menu bar app to check the things that matter to you\n- [Menubarx](https://menubarx.app/) - Menu bar app to browser website.\n\n## iOS\n\n- [Logo BeReal](https://bere.al/en) - Your Friends for Real. Everyday at a random time, everyone is notified simultaneously to capture and share a Photo in 2 Minutes. A new and unique way to discover who your friends really are in their daily life.\n- [HouseBook](https://apps.apple.com/us/app/housebook/id1489866496?utm_campaign=newsletter-2020-07-17&utm_medium=email&utm_source=10words) - Keep track of your stuff.\n- [Your life weekly calendar](https://apps.apple.com/app/id1474476414?utm_campaign=newsletter-2020-03-20&utm_medium=email&utm_source=10words) - List your life by weeks. every week is a dot.\n- [使命闹钟](https://apps.apple.com/cn/app/alarmy-alarm-clock-%E4%BD%BF%E5%91%BD%E9%97%B9%E9%92%9F/id1163786766) - Alarmy 可以帮助您先起床，并让您每天早上成功完成所有“要做的事情”。借助各种有趣的任务和响亮的随机铃声，您可以轻松唤醒并刷新每天养成成功习惯的习惯\n\n## Web\n\n- [Stupid RSS Reader](https://github.com/gurov/stupid-rss-reader) - ⊕ PWA RSS client on Angular 11\n\n## All\n\n- [自记账](https://www.zijizhang.com/) - 自己记账，不找代理\n"},{"fields":{"slug":"/awesome-articles/","title":"值得一看的文章列表"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 值得一看的文章列表\ntags:\n  - Awesome\n  - Articles\n---\n\n收集值得一看的文章列表\n\n## 科技\n\n- [网页设计 100 年（2014）](https://idlewords.com/talks/web_design_first_100_years.htm)\n- [新的十年有什么预测？（2010）](https://news.ycombinator.com/item?id=1025681)\n- [每个开发者都应该阅读的 10 篇论文（2009）](https://michaelfeathers.silvrback.com/10-papers-every-developer-should-read-at-least-twice)\n- [为什么 Go 语言不够好？](https://yager.io/programming/go.html)\n- [BSD vs Linux](http://www.over-yonder.net/~fullermd/rants/bsd4linux/01)\n  - https://news.ycombinator.com/item?id=12034277\n- [为什么大多数建议都很糟糕？](https://atis.substack.com/p/most-advice-is-pretty-bad)\n\n## 工作\n\n- [如果你很忙，也许你做错了什么](https://www.calnewport.com/blog/2011/11/11/if-youre-busy-youre-doing-something-wrong-the-surprisingly-relaxed-lives-of-elite-achievers/)\n\n## 生活方式\n\n- [掌握金钱，负担得起你所有想要的东西](https://affordanything.com/start-here/)\n\n## 人物\n\n- [我从 Hacker News 中学到了什么？](http://www.paulgraham.com/hackernews.html)\n\n## 写作\n\n- [非虚构写作的读书笔记](https://sive.rs/book/OnWritingWell)\n\n## 有趣\n\n- [一个关于某个特定 url10 年后还会不会存在的投注](https://blog.archive.org/2022/02/22/a-long-bet-pays-off/)\n\n## 历史\n\n- [美国警告日本人民即将投放原子弹的传单，传单上要求居民立即撤离并且要求他们的领导人立即投降，或者更换领导人](https://www.atomicheritage.org/key-documents/warning-leaflets)\n"},{"fields":{"slug":"/awesome-automations/","title":"Awesome Automations"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Automations\ntags:\n  - Awesome\n  - Automations\n  - Self-Hosted\n---\n\n## PAAS\n\n- [cloudron](https://www.cloudron.io/index.html)\n- [sandstorm](https://sandstorm.io/)\n- [freedombox](https://freedombox.org/)\n"},{"fields":{"slug":"/awesome-backup/","title":"Awesome Backup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Backup\n\n## List\n\n- [Save-to-the-Wayback-Machine](https://github.com/VerifiedJoseph/Save-to-the-Wayback-Machine) - A browser extension that allow you to save the webpage to wayback machine\n"},{"fields":{"slug":"/awesome-benchmark/","title":"Awesome Benchmark"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Benchmark\n  - Proxies\n  - Bash\n  - Awesome\n---\n\n# Awesome Benchmark\n\n## Proxy\n\n- [GitHub - NickMRamirez/Proxy-Benchmarks: Benchmarks for several proxies](https://github.com/NickMRamirez/Proxy-Benchmarks)\n\n## Templates\n\n- [rust templates](https://github.com/djc/template-benchmarks-rs)\n"},{"fields":{"slug":"/awesome-bookmarks/","title":"Awesome Bookmarks"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Bookmarks\n\n## List\n\n- [shiori](https://github.com/go-shiori/shiori) - Pocket open-source alternative.\n"},{"fields":{"slug":"/awesome-browsers/","title":"Awesome Browsers"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Browser\n---\n\n# Awesome Browsers\n\nCurating awesome browsers.\n\n## Common List\n\n- [Microsoft Edge](https://www.microsoft.com/en-us/edge) - Microsoft Edge is the fast and secure browser, which I'm using now. its the best for now.\n- [Vivaldi Browser | Now with built-in Translate, Mail, and Calendar](https://vivaldi.com/)\n- [Waterfox](https://www.waterfox.net/) - The way to surf the web. Striking the perfect balance of privacy and useability.\n\n## For developer\n\n- [Blisk](https://blisk.io/)- Cross-Device Testing Done Right\n- [bonsai](https://bonsaibrowser.com/) - Web-browser for research that helps programmers think clearly.\n- [Brow](https://www.brow.sh/) - Text based broswer\n- [Nyxt](https://github.com/atlas-engineer/nyxt) - 像 vim 一样的浏览器\n\n## Paid Browser\n\n- https://sizzy.co/ - The browser for developers, view one page with multiple devices once\n- https://www.meetsidekick.com/ - The fastest browser for work ever made, Designed to be the ultimate online work experience, it brings together your team and every web tool you use – all in one interface. Actually, not so fast, but the UI, the workflow, the sidebar, will give your new experience.\n"},{"fields":{"slug":"/awesome-chat/","title":"Awesome Chat"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Chat\ntags:\n  - Awesome\n  - Chat\n---\n\nCurating awesome chat resources.\n\n## Chat Manage\n\n- [airy](https://github.com/airyhq/airy) - Open source conversational platform to power conversations with an open source Live Chat, Messengers like Facebook Messenger, WhatsApp and more\n\n## Open source Server\n\n- [go im service](https://github.com/GoBelieveIO/im_service)\n- [go chat](https://github.com/LockGit/gochat)\n- [open im server](https://github.com/OpenIMSDK/Open-IM-Server)\n\n## MQTT\n\n- [swift client CocoaMQTT](https://github.com/emqx/CocoaMQTT)\n- [mqtt.js](https://github.com/mqttjs/MQTT.js)\n- [emqx](https://github.com/emqx/emqx) - erlang broker\n- [vernemq](https://github.com/vernemq/vernemq) - erlang broker\n- [flutter im mqtt demo](https://github.com/OpenFlutter/flutter_im_demo)\n\n## XMPP\n\n- [MongooseIM](https://github.com/esl/MongooseIM)\n- [jackal](https://github.com/ortuman/jackal) - xmpp with go\n- [snikket](https://github.com/snikket-im/snikket-server)\n- [ejabberd](https://github.com/processone/ejabberd)\n\n## Hosted chat Server\n\n- [connectycube](https://connectycube.com/) - free, 10k user\n"},{"fields":{"slug":"/awesome-cn-house/","title":"在中国买房之前，你需要了解的信息汇总"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 在中国买房之前，你需要了解的信息汇总\ntags:\n  - Awesome\n  - House\n  - China\n---\n\n收集一些关于买房的 Tips\n\n## 文章汇总\n\n- [天涯 kkndme 神贴聊房价](https://github.com/shengcaishizhan/kkndme_tianya)\n\n## 地区\n\n- [长沙买房攻略](https://github.com/eeve/cs-house)\n\n## 导图\n\n![思维导图](./attachments/cn-house-steps.jpeg)\n"},{"fields":{"slug":"/awesome-code-learning/","title":"Awesome Code Learning"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Code\n  - Learning\n---\n\n# Awesome Code Learning\n\nCurating awesome code learning resources.\n\n## List\n\n- [Free code camp](https://www.freecodecamp.org/) - Learn to code — for free.\n- [Learn X in Y minutes](https://learnxinyminutes.com/) - Learn programming in a few minutes.\n"},{"fields":{"slug":"/awesome-communities/","title":"收集一些有意思的社区"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntags:\n  - Awesome\n  - Communities\n  - Social\n  - 中文\n---\n\n# 收集一些有意思的社区\n\n收集一些有意思的社区，人间观察。\n\n## Index\n\n- [Hive Index](https://thehiveindex.com/) - Find online communities, find your people.\n- [Get community list](https://getcommunitylist.com/) - Find hundreds of Communities to Promote your Product $49 #Paid\n- [community list](https://www.notion.so/Community-908921f2f6584ae990bea68b048b8ea9) - List of some active community you must follow, Free\n- [Reddit List](http://redditlist.com/sfw) - Reddit subs trends, categories\n- [reddit subreddistats](https://subredditstats.com/)\n\n## 服务器\n\n- [Low End Talk](https://lowendtalk.com/) - 国外的底价主机论坛，上面经常会有主机商提供的活动\n- [全球主机交流](https://hostloc.com/) - 国内的主机论坛\n\n## 八卦\n\n- [豆瓣鹅组](https://www.douban.com/group/blabla/) - 豆瓣鹅组，讨论明星八卦等。目前为仅登录可见，游客无法搜索和进入\n- [小象乐园](https://www.douban.com/group/613560/) - 小象乐园，前小象八卦，讨论网红的豆瓣小组\n\n## 问题\n\n- [TooAfraidToAsk reddit 小组](https://www.reddit.com/r/TooAfraidToAsk/) - 太害怕而不敢问的问题，各种政治不正确的问题\n\n## 关系建议\n\n- [关系建议小组 reddit 小组](https://www.reddit.com/r/relationshipadvice/) - 各种关系的建议，讨论\n- [关于报仇/报复的故事 reddit 小组](https://old.reddit.com/r/ProRevenge)\n\n## Maker\n\n- [Make.rs](https://make.rs/) - What are you working on?\n- [Something I Made Reddit](https://www.reddit.com/r/somethingimade/)\n- [Side Project](https://www.reddit.com/r/SideProject)\n- [Get Maker Log](https://getmakerlog.com/) - How makers stay productive\n\n## Developers\n\n- [Make friends making the web. ✨](https://webwide.chat/) - Webwide is an inclusive, supportive community of professional and hobbyist web designers & developers.\n\n## Foods\n\n- [速食食品爱好者联盟-豆瓣小组](https://www.douban.com/group/682274/)\n- [Reddit Food subreddit](https://www.reddit.com/r/food/)\n\n## 迷惑\n\n- [神人](https://www.reddit.com/r/nextfuckinglevel/)\n\n## 严肃讨论\n\n- [有一条无论如何都想沙一沙的龙](https://www.douban.com/group/make-it-clear/)\n- [reddit 觉醒小组](https://old.reddit.com/r/awakened/) - 突然对某事有了新的想法\n- [中立政治 reddit 小组](https://old.reddit.com/r/NeutralPolitics/)\n\n## 中文技术\n\n- [小众软件论坛](https://meta.appinn.net/)\n\n## 未来主义\n\n- [reddit 未来主义小组](https://old.reddit.com/r/Futurology)\n\n## 情绪\n\n- [reddit 骂组](https://old.reddit.com/r/rant/)\n\n## 幻想\n\n- [reddit 假装组](https://old.reddit.com/r/ScenesFromAHat/top/) - 假装一切\n- [reddit 预言组](https://old.reddit.com/r/MarkMyWords/top/?sort=top)\n\n## 百科\n\n- [维基百科 reddit 小组](https://old.reddit.com/r/wikipedia/) - 讨论一些有意思的维基百科\n"},{"fields":{"slug":"/awesome-dashboard/","title":"Awesome Dashboard"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Dashboard\ntags:\n  - Awesome\n  - Admin\n  - Dashboard\n---\n\nCurating dashboard things.\n\n## Drag admin dashboard\n\n- [ToolJet](https://github.com/ToolJet/ToolJet/) - Open-source low-code framework for building React-based web applications and internal tools 🚀\n"},{"fields":{"slug":"/awesome-data/","title":"有趣的数据"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 有趣的数据\ntags:\n  - Data\n  - Awesome\n  - 中文\n---\n\n- 排名前 9%的账户持有以太坊区块链上[NFT410 亿美元市值的 80%](https://www.ft.com/content/e95f5ac2-0476-41f4-abd4-8a99faa7737d?utm_campaign=etb&utm_medium=newsletter&utm_source=morning_brew),比特币更加集中：[前 2%的账户拥有 8000 亿美元比特币供应量的 95%](https://bitinfocharts.com/top-100-richest-bitcoin-addresses.html)，[0.1%的比特币矿工负责所有采矿产出的一半](https://www-techspot-com.cdn.ampproject.org/c/s/www.techspot.com/amp/news/91937-bitcoin-largely-controlled-small-group-investors-miners-study.html)\n"},{"fields":{"slug":"/awesome-databases/","title":"Awesome Databases"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Databases\ntags:\n  - Awesome\n  - Database\n---\n\nCurating awesome database resources.\n\n## Resource\n\n- [Mastering Postgres indexes in 10 minutes](https://fabien.herfray.org/posts/mastering-postgres-indexes-in-10-minutes/)\n- [country states database](https://github.com/dr5hn/countries-states-cities-database)\n\n## Answers\n\n- [find the nearest location by latitude and longitude in postgresql](https://stackoverflow.com/questions/37827468/find-the-nearest-location-by-latitude-and-longitude-in-postgresql)\n- [change postgres enum type](https://www.munderwood.ca/index.php/2015/05/28/altering-postgresql-columns-from-one-enum-to-another/)\n\n## ORM\n\n- [prisma](https://github.com/prisma/prisma) - Next-generation ORM for Node.js & TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite & MongoDB (Preview)\n\n## Offline\n\n- [rxdb](https://github.com/pubkey/rxdb) - 🔄 A realtime Database for JavaScript Applications\n- [couchdb](https://github.com/apache/couchdb) - Seamless multi-master syncing database with an intuitive HTTP/JSON API, designed for reliability\n- [localforage](https://github.com/localForage/localForage) - 💾 Offline storage, improved. Wraps IndexedDB, WebSQL, or localStorage using a simple but powerful API.\n- [kinto](https://github.com/Kinto/kinto.js/) - An Offline-First JavaScript Client for Kinto.\n- [puchdb](https://github.com/pouchdb/pouchdb) - 🐨 - PouchDB is a pocket-sized database.\n\n## Tools\n\n- [sqlite playgound](https://sqlime.org/)\n- [supabase/postgres](https://github.com/supabase/postgres) - Unmodified Postgres with some useful plugins\n\n## Sqlite\n\n- [Sqllite httpvfs](https://github.com/phiresky/sql.js-httpvfs) - Query Sqlite with static files\n- [Litestream](https://github.com/benbjohnson/litestream) - Streaming replication for SQLite.\n\n## Version\n\n- [Dolt](https://github.com/dolthub/dolt) - Dolt – It's Git for Data\n"},{"fields":{"slug":"/awesome-decentralization/","title":"Awesome Decentralization"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Decentralization\ntags:\n  - Awesome\n  - Decentralization\n---\n\nCurating awesome decentralized applications.\n\n## List\n\n- [awesome-decentralized-web](https://github.com/gdamdam/awesome-decentralized-web) - A curated list about the decentralized technologies and tools to develop decentralized applications.\n- [Fediverse Wiki](https://en.wikipedia.org/wiki/Fediverse)\n\n## Social\n\n- [mastodon](https://github.com/mastodon/mastodon) - twitter open-source alternatives `ruby`\n- [pleroma](https://git.pleroma.social/pleroma/pleroma/) - another twitter open-source alternatives `erlang`\n  - [soapbox](https://gitlab.com/soapbox-pub/soapbox-fe) - a fronend for pleroma\n  - [docker-pleroma](https://github.com/angristan/docker-pleroma) -docker pleroma\n- [okuna](https://github.com/OkunaOrg/okuna-api) - another forum. `python`\n- [twtxt - yarn](https://git.mills.io/yarnsocial/yarn) - yarn is a Self-Hosted, Twitter™-like Decentralised micro-Blogging platform. No ads, no tracking, your content, your data!\n  - [twtxt](https://github.com/buckket/twtxt) - origianl twtxt\n  - [tt](https://git.isobeef.org/lyse/tt/) - a python cli for twtxt\n  - [jenny](https://www.uninformativ.de/git/jenny/file/README.html) - another python cli for twtxt\n  - [mutt](https://gitlab.com/muttmua/mutt) - simillar but for email.\n  - [jenny + mutt: Getting started with twtxt](https://www.uninformativ.de/blog/postings/2021-09-19/0/POSTING-en.html)\n  - [rusttxt](https://github.com/rustwtxt/rustwtxt)\n  - [twtxt-registry](https://github.com/DracoBlue/twtxt-registry)\n  - [twtxt xyz](http://twtxt.xyz/) - A twtxt user list\n    - [source](https://github.com/reednj/twtxt-directory)\n- [kibou](https://github.com/Toromino/kibou) - rust mastondon\n- [Indie Web](https://indieweb.org/) - The IndieWeb is a community of individual personal websites\n\n## Mail\n\n- [MNM](https://mnmnotmail.org/) - Email alternatives\n\n## Pub/Sub\n\n- [WebSubHub](https://github.com/clone1018/WebSubHub) - WebSubHub is a fully compliant WebSub Hub built that you can use to distribute live changes from various publishers. Usage of WebSubHub is very simple with only a single endpoint available at https://websubhub.com/hub.\n"},{"fields":{"slug":"/awesome-deno/","title":"Awesome Deno"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Deno\ntags:\n  - Awesome\n  - Deno\n---\n\n## Library\n\n- [aleph](https://github.com/alephjs/aleph.js) - The Full-stack Framework, ssr, next.js alternative in Deno.\n- [ultra](https://github.com/exhibitionist-digital/ultra)\n\n## Serverless\n\n- [Vercel Deno Runtime](https://github.com/vercel-community/deno)\n"},{"fields":{"slug":"/awesome-editors/","title":"Awesome Editors"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Editors\ntags:\n  - Awesome\n  - Editors\n  - Tools\n---\n\nCurating awesome editors tools.\n\nAll see [vscode-tips](vscode-tips.md)\n\n## AI Enhance\n\n- [GitHub Copilot · Your AI pair programmer](https://copilot.github.com/) - Github Copilot\n\n## Front-End\n\n- [Monaco React](https://github.com/suren-atoyan/monaco-react) - Code Editor UI for React\n"},{"fields":{"slug":"/awesome-emails.md/","title":"Awesome Emails"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Emails\ntags:\n  - Awesome\n  - Email\n---\n\nCurating awesome email letter.\n\n## Startups\n\n- [laskie](https://laskie.substack.com/) - We create products and services to save your company time and make you more money.\n"},{"fields":{"slug":"/awesome-english-learning/","title":"收集英语学习工具"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - English\n  - Learning\n---\n\n# 收集英语学习工具\n\n收集英语学习工具\n\n## 交流，笔友\n\n- [My Language Change](https://www.mylanguageexchange.com/Search.asp?selX3=1&selTxtChat=true) - 找到语言交换的笔友，按照最近上线时间排序，可以按照不同条件筛选。\n- [多语言在线聊天室 linguaroom 免费](https://www.linguaroom.io/)\n\n## 工具\n\n- [Anki](https://apps.ankiweb.net/) - Anki, 卡片背诵，记忆，按照频率每天背诵一些卡片。\n- [Eudic](https://www.eudic.net/v4/en/app/eudic) - 欧陆词典 mac 版，屏幕取词特别方便，选中自动查询词典并朗读。\n- [English Helper](https://github.com/HDCodePractice/EnglishHelper) - English study corner 小助手， docker 部署，telegram bot\n"},{"fields":{"slug":"/awesome-explore/","title":"Awesome Explore"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Explore\n---\n\n# Awesome Explore\n\nCurating the place for explore interesting things.\n\n## Product\n\n- [Product Hunt Trending (producthunt-trending.js.org)](https://producthunt-trending.js.org/?range=monthly) - Browser producthunk by ranking, weekly, monthly, yearly.\n- [r/SideProject - A community for sharing side projects (reddit.com)](https://www.reddit.com/r/SideProject/)\n- [Product Hunt](https://www.producthunt.com/) - The best new products in tech\n- [Hacker news show 中文](https://hn.buzzing.cc/tags/show-hn)\n- [Hacker News Show](https://news.ycombinator.com/show)\n  - [hn show sort by points](https://hn.algolia.com/?dateRange=pastMonth&page=0&prefix=true&query=show%20hn&sort=byPopularity&type=story)\n  - [hn show 中文](https://showhn.buzzing.cc/)\n  - [ask hn 中文](https://askhn.buzzing.cc/)\n  - [best of show hn](https://bestofshowhn.com/)\n  - [best hacker news comments](https://news.ycombinator.com/bestcomments)\n- [Betalist](https://betalist.com/) - Discover tomorrow's startups, today.\n- [startupbase](https://startupbase.io/) - Discover early access products.\n- [10words](https://10words.io/) - 10words: Discover new apps and startups in 10 words or less\n- [Read.cv explore](https://read.cv/explore) - profile 聚合,个人简历聚合\n\n## Self-Hosted\n\n- [Self-Hosted Reddit](https://www.reddit.com/r/selfhosted/)\n- [Track Awesome-Selfhosted](https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/)\n\n## Decentralized\n\n- [awesome-decentralized](https://github.com/croqaz/awesome-decentralized)\n\n## Trends\n\n- [Discover Exploding Topics](https://explodingtopics.com/) - We surface rapidly growing topics before they take off.\n- [treendly](https://treendly.com/) - Discover rising trends you haven't heard of\n\n## Github\n\n- [GitHubDaily](https://github.com/GitHubDaily/GitHubDaily) - GitHubDaily 分享内容定期整理与分类。\n\n## Tech\n\n- [Hacker News](https://news.ycombinator.com/news)\n- [ACM Tech News](https://technews.acm.org)\n- [indie hackers](https://www.indiehackers.com/)\n- [Hacker News 经典文章集合](https://hn.lindylearn.io/)\n- [Hacker News 编辑精选](https://news.ycombinator.com/invited)\n- [自力更生的创业者社区](https://barnacl.es/)\n\n## 中文\n\n- [用中文浏览 Product Hunt 热门 App，网站和产品 - Product Hunt 热门 (buzzing.cc)](https://ph.buzzing.cc/)\n- [用中文浏览 reddit 业余项目讨论 - 业余项目分享交流 (buzzing.cc)](https://sideproject.buzzing.cc/)\n- [沉迷优秀 App 不能自拔-豆瓣小组 ](https://www.douban.com/group/689011/)\n- [这小程序针不戳啊-豆瓣小组](https://www.douban.com/group/718741/)\n- [分享创造-v2ex](https://v2ex.com/go/create)\n- [分享发现-v2ex](https://v2ex.com/go/share)\n\n## 信息订阅/推送\n\n- [Cortadomail](https://cortadomail.com/) - 免费版的 Mailbrew\n\n## Fun\n\n- [病毒步行](https://www.viralwalk.com/) - 通过互联网漫步发现新网站\n\n## Life\n\n- [Life Hacker](https://lifehacker.com/) - 生活黑客，提高生活质量的方法\n- [something awful](https://www.somethingawful.com/)\n\n## Image\n\n- [deviantart](https://www.deviantart.com/) - 艺术家社区\n\n## Maker\n\n- [Get Maker Log](https://getmakerlog.com/) - How makers stay productive\n\n## Indexes\n\n- [[awesome-indexes]]\n- [云海拾贝](https://getizumo.com/shibei) - 出云整理的国外高质量网站系列\n- [数字移民导航](https://shuziyimin.org/) - 数字移民整理的国外网站导航\n\n## Ideas\n\n- [valid need](https://needgap.com/) - 验证需求，由用户发需求，投票\n- [profit hunt](https://profithunt.co/) - 从已经有利润的项目中获取灵感\n\n## Books\n\n- [BookStash](https://bookstash.io/) - 提炼图书要点，精华\n\n## Issues\n\n- [Current Affairs 时事](https://www.currentaffairs.org/)\n- [Inbox world](https://inboxworld.io/) - 收件箱世界，投票排序的高质量邮件列表。\n\n## Socials\n\n- [Micro.blog](https://micro.blog/) - 付费轻博客平台\n\n## 文章\n\n- [精神食粮 Reddit 小组](https://old.reddit.com/r/Foodforthought/)\n- [真 Reddit 小组](https://old.reddit.com/r/TrueReddit/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[awesome-indexes]: awesome-indexes.md \"Awesome Indexes\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/awesome-extensions/","title":"Awesome Extensions"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Extensions\ntags:\n  - Awesome\n  - Extensions\n---\n\nCurating awesome extensions resources.\n\n## Libraries\n\n- [WebExtension browser API Polyfill](https://github.com/mozilla/webextension-polyfill) - A lightweight polyfill library for Promise-based WebExtension APIs in Chrome\n"},{"fields":{"slug":"/awesome-file-managers/","title":"Awesome File Managers"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Files\n---\n\n# Awesome File Managers\n\n## List\n\n- [GitHub - filebrowser/filebrowser: 📂 Web File Browser](https://github.com/filebrowser/filebrowser)\n"},{"fields":{"slug":"/awesome-flutter/","title":"Awesome Flutter"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Flutter\ntags:\n  - Awesome\n  - Flutter\n---\n\nCurating Flutter resources.\n\n## Cros\n\n- [Flutter Failed To Solve the Biggest Challenge for Our Cross-Platform App](https://betterprogramming.pub/flutter-failed-to-solve-the-biggest-challenge-for-our-cross-platform-app-c551afa0ef18)\n\n## Articles\n\n- [Dart Board](https://github.com/ahammer/dart_board) - Dart Board is a Framework/Architecture pattern for Flutter applications.\n- [Dart JSON and serialization](https://flutter.dev/docs/development/data-and-backend/json#code-generation)\n\n## Books\n\n- [Flutter in action]](https://livebook.manning.com/book/flutter-in-action/)\n\n## List\n\n- [awesome flutter](https://github.com/Solido/awesome-flutter)\n  - [track](https://www.trackawesomelist.com/Solido/awesome-flutter/readme/)\n- [open-source-flutter-apps](https://github.com/tortuvshin/open-source-flutter-apps) - 📱 List of open source Flutter applications :octocat:\n- [flutter example apps](https://github.com/iampawan/FlutterExampleApps)\n- [flutter official sample apps](https://github.com/flutter/samples)\n  - [flutter sample apps](https://github.com/diegoveloper/flutter-samples)\n\n## Roadmap\n\n- [flutter roadmap](https://github.com/olexale/flutter_roadmap)\n\n## 中文资源\n\n- [Flutter 实战](https://book.flutterchina.club/)\n- [Flutter 视频教程-从零到上架](https://www.bilibili.com/video/BV1pp4y187w6?p=2)\n- [用 flutter 构建一个聊天应用界面-谷歌官方出品](https://codelabs.developers.google.com/codelabs/flutter/#0)\n- [Dart 语言概览](https://www.dartcn.com/guides/language/language-tour)\n- [flutter 布局教程](https://flutterchina.club/tutorials/layout/)\n\n## Libraries\n\n- [visa](https://github.com/e-oj/visa) - Easy third party authentication (OAuth 2.0) for Flutter apps.\n- [wechat-assets-picker](https://github.com/fluttercandies/flutter_wechat_assets_picker)\n- [flutter platform widgets](https://pub.dev/packages/flutter_platform_widgets)\n- [pin code](https://github.com/LiewJunTung/pin_code_text_field)\n- [pull refresh](https://github.com/aagarwal1012/Liquid-Pull-To-Refresh)\n- [advanced popup](https://github.com/jaweii/Flutter_beautiful_popup/blob/master/README_CN.md)\n- [loading button](https://github.com/chrisedg87/flutter_rounded_loading_button)\n- [titled navigation bar](https://github.com/pedromassango/titled_navigation_bar)\n- [modal_bottom_sheet](https://github.com/jamesblasco/modal_bottom_sheet)\n- [flutter offline](https://github.com/jogboms/flutter_offline)\n- [inview_notifier_list](https://github.com/rvamsikrishna/inview_notifier_list)\n- [show case view](https://github.com/SimformSolutionsPvtLtd/flutter_showcaseview)\n- [sliable actions](https://github.com/letsar/flutter_slidable)\n- [peek and pop](https://github.com/aliyigitbireroglu/flutter-peek-and-pop#media)\n- [shimmer](https://github.com/hnvn/flutter_shimmer) - blingbling effet\n- [wave effect](https://github.com/i-protoss/wave)\n- [signin effect](https://github.com/GeekyAnts/flutter-login-home-animation)\n- [image slider](https://github.com/serenader2014/flutter_carousel_slider)\n- [photo view](https://github.com/bluefireteam/photo_view)\n- [flutter svg](https://github.com/dnfield/flutter_svg)\n- [flutter image crop](https://github.com/hnvn/flutter_image_cropper)\n- [image cache](https://github.com/Baseflow/flutter_cached_network_image)\n- [url launcher](https://github.com/flutter/plugins/tree/master/packages/url_launcher/url_launcher)\n- [flutter plugins](https://github.com/flutter/plugins) - official plugins\n- [getx](https://github.com/jonataslaw/getx) - router, navigation\n- [auto sized text](https://github.com/leisim/auto_size_text)\n- [gooble anylyze](https://github.com/dart-lang/usage)\n- [permission handler](https://github.com/baseflow/flutter-permission-handler)\n- [flutter sqlite](https://github.com/tekartik/sqflite)\n  - [drift](https://github.com/simolus3/moor)\n- [animated text kit](https://github.com/aagarwal1012/Animated-Text-Kit)\n- [flutter wechat](https://github.com/OpenFlutter/fluwx) - flutter 微信 sdk\n- [tiktoklike scrooler](https://pub.dev/packages/tiktoklikescroller)\n- [river_pod](https://github.com/rrousselgit/river_pod) - A simple way to access state while robust and testable.\n- [very good cli](https://pub.dev/packages/very_good_cli) - create kool template flutter cli\n- [adptive theme](https://github.com/birjuvachhani/adaptive_theme) - Easiest way to add support for light and dark theme in your flutter app.\n- [responsive_framework](https://pub.dev/packages/responsive_framework)\n- [flutter secure storage](https://pub.dev/packages/flutter_secure_storage) - Flutter Secure Storage provides API to store data in secure storage. Keychain is used in iOS, KeyStore based solution is used in Android.\n- [flutter dotenv](https://github.com/java-james/flutter_dotenv)\n- [flutter webrtc](https://github.com/flutter-webrtc/flutter-webrtc)\n- [flutter chat ui](https://github.com/flyerhq/flutter_chat_ui)\n- [flutter_markdown](https://pub.dev/packages/flutter_markdown)\n- [pointycastle](https://github.com/bcgit/pc-dart) - flutter encode, decode, sha1, sha3, hmac...\n- [avatar ](https://github.com/ch-muhammad-adil/flutter-plugin-circular_profile_avatar)\n- [uni_links](https://pub.dev/packages/uni_links) -- uni links\n- [phoenix](https://github.com/mobiten/flutter_phoenix) -- app restart lifetime\n- [text_editor](https://pub.dev/packages/text_editor) - Instagram like text editor\n- [auto size text](https://github.com/leisim/auto_size_text) - auto size text\n- [custom pop up menu](https://github.com/malikwang/custom_pop_up_menu) - 仿微信消息弹出菜单\n\n## Apps\n\n- [flutter-tinder](https://github.com/Ivaskuu/tinder_cards)\n  - [card swipe](https://github.com/geekruchika/FlutterCardSwipe)\n- [flutty chat](https://gitlab.com/famedly/fluffychat) - FluffyChat is a multi-platform Matrix client written in Dart/Flutter. It compiles to native code on Android, iOS, macOS, Windows and Linux and renders with Skia on the web. FluffyChat is just a hobby project from the developers of Famedly and licensed under AGPLv3. It follows a design philosophy to be minimalistic, inclusive and easy to use.\n- [flutter gallery](https://github.com/flutter/gallery) - A full components by official\n- [tinder cards](https://github.com/Ivaskuu/tinder_cards)\n- [facebook reactions](https://github.com/duytq94/flutter-fb-reactions-animation)\n- [whatsapp clone](https://github.com/iampawan/FlutterWhatsAppClone)\n- [flutter food bite](https://github.com/JideGuru/FlutterFoodybite) - 挺好看的\n- [flutgter boilerplate](https://github.com/zubairehman/flutter-boilerplate-project)\n  - <https://github.com/bizz84/starter_architecture_flutter_firebase>\n\n## Templates\n\n- [nft template](https://github.com/nhancv/nft)\n- [bloc boilerplate](https://github.com/wem2017/flutter_bloc_boilerplate)\n"},{"fields":{"slug":"/awesome-free/","title":"Awesome Free"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Free\ntags:\n  - Free\n  - Awesome\n  - Tools\n---\n\n## Mail\n\n- [Mailtie](https://mailtie.com) - Free Email Forwarding for Your Domain\n- [FakerMail](https://fakermail.com) - Unlimited Temporary Email Provider\n\n## Git\n\n- [ Codeberg.org ](https://codeberg.org) - free git, privacy\n\n## Video\n\n- [Create amazing videos with our online video editor - Mastershot](https://mastershot.app)\n\n## Domain\n\n- [freedns](https://freedns.afraid.org/domain/registry/) - free subdomain dns\n\n## Name\n\n- [namae](https://namae.dev) - name checking\n\n## Free Paid Wall\n\n- [Article reader](https://t.me/chotamreaderbot) - A telegram bot that can access paid wall article with a instant view article.\n- [12ft](https://12ft.io/) - Show me a 10ft paywall, I’ll show you a 12ft ladder.\n"},{"fields":{"slug":"/awesome-gatsby/","title":"Awesome Gatsby"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Gatsby\n\n## Plugins\n\n- [GitHub - kraynel/gatsby-transformer-gitinfo](https://github.com/kraynel/gatsby-transformer-gitinfo) - Add git info to file, so you can get last update date for your files.\n- [gatsby-plugin-local-search](https://github.com/angeloashmore/gatsby-plugin-local-search) - Gatsby plugin for providing client-side search for data available in Gatsby's GraphQL layer using a variety of engines\n\n## Tutorials\n\n[How to get 'Last Update Date' of a blog post in GATSBY.js - Stack Overflow](https://stackoverflow.com/questions/56025679/how-to-get-last-update-date-of-a-blog-post-in-gatsby-js)\n"},{"fields":{"slug":"/awesome-guides/","title":"各种指南"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 各种指南\ntags:\n  - Awesome\n  - Guides\n---\n\n收集各种有用的指南。\n\n- [Hacker News 最全使用说明](https://github.com/minimaxir/hacker-news-undocumented/blob/master/README.md)\n"},{"fields":{"slug":"/awesome-home/","title":"智能家居方案汇总"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 智能家居方案汇总\ntags:\n  - Awesome\n  - Home\n---\n\n收集智能家居相关的方案。\n\n## 路由\n\n- [OpenWrt 简明教程](https://larrywonss.github.io/#/)\n"},{"fields":{"slug":"/awesome-id/","title":"Awesome ID generator"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome ID generator\ntags:\n  - Awesome\n  - ID\n---\n\n- UUID\n- sonyflake\n- snowflake\n- ksuid\n- [nanoid](https://github.com/ai/nanoid) - `V1StGXR8_Z5jdHi6B-myT`\n- tiny id: https://github.com/paulgb/tiny_id\n"},{"fields":{"slug":"/awesome-indexes/","title":"Awesome Indexes"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Indexes\ntags:\n  - Awesome\n  - Indexes\n  - Trends\n---\n\nCurating awesome indexes about trends.\n\n## Applications\n\n- [Top Ranked iOS App Store Apps](https://appfigures.com/top-apps/ios-app-store/united-states/iphone/top-overall)\n- [app store rank](https://www.similarweb.com/zh/apps/trends/apple/store-rank/us/all/top-free/iphone/)\n\n## Socials\n\n- [Find Reddit](https://findareddit.com) - Find reddit\n"},{"fields":{"slug":"/awesome-interview/","title":"Awesome Interview"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Interview\ntags:\n  - Awesome\n  - Interview\n---\n\nCurating interview preparation materials.\n\n## Resources\n\n- [Tech Interview Handbook](https://techinterviewhandbook.org/)\n"},{"fields":{"slug":"/awesome-investing/","title":"Awesome Investing"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Investing\n  - Stocks\n---\n\n# Awesome Investing\nCurating investing related resources.\n\n\n## Communities\n\n- [Investing Communities](https://thehiveindex.com/topics/investing/)"},{"fields":{"slug":"/awesome-jackett-indexes/","title":"Awesome Jackett Indexes"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Jackett Indexes\n\n## List\n\n- EZTV\n- RARBG\n- YTS\n\n## References\n\n[高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n"},{"fields":{"slug":"/awesome-jobs/","title":"Awesome Jobs"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Jobs\ntags:\n  - Awesome\n  - Jobs\n---\n\nCurating awesome jobs.\n\n## List\n\n- [sidequestjobs](https://sidequestjobs.com/) - 非全职工作岗位收集\n- [relocate](https://relocate.me/) - 在国外获得一份职位\n- [free resume writor service](https://www.leetresumes.com/)\n\n## Jobs\n\n- [带有搬迁套餐的工作](https://relocate.me/)\n- [区块链保证的自由职业市场](https://www.cryptotask.org/en/info)\n"},{"fields":{"slug":"/awesome-js-date/","title":"Awesome JS Date"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Javascript\n  - Date\n---\n\n# Awesome JS Date\n\n## Articles\n\n[You probably don't need Moment.js](https://dev.to/aminnairi/you-probably-don-t-need-moment-js-493m)\n\n## Github\n\n[GitHub - you-dont-need/You-Dont-Need-Momentjs: List of functions which you can use to replace moment.js + ESLint Plugin](https://github.com/you-dont-need/You-Dont-Need-Momentjs)\n"},{"fields":{"slug":"/awesome-js/","title":"收集 Javascript 里好用的库"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集 Javascript 里好用的库\nlanguage: zh\ntags:\n  - Awesome\n  - Javascript\n  - 中文\n---\n\n收集用过的，好用的 Javascipt 库。\n\n## 其他 Javascript 相关的 Awesome List\n\n- [[awesome-js-date]]\n- [[awesome-gatsby]]\n\n## 文章\n\n- [Are we web yet?](https://www.arewewebyet.org/) - web 框架的挑选\n\n## UI 框架\n\n- [GitHub - system-ui/theme-ui: Build consistent, themeable React apps based on constraint-based design principles](https://github.com/system-ui/theme-ui) - ThemeUI, 我愿意称之为真正的以配置主题为核心的 UI 框架，基本所有的元素样式都是配置出来的，页面 UI 里基本不怎么需要内联样式了，缺点（也可以说是优点）是内置组件少，适合自定义 UI 风格。\n\n## UI 组件\n\n- [Tippyjs](https://github.com/atomiks/tippyjs) - 弹出提示，tips, tooltip, popup\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[awesome-js-date]: awesome-js-date.md \"Awesome JS Date\"\n[awesome-gatsby]: awesome-gatsby.md \"Awesome Gatsby\"\n[//end]: # \"Autogenerated link references\"\n\n## 语言\n\n- [imba](https://github.com/imba/imba) - IMBA 语言，全栈语言，最终编译为 Javascript，内置 html,style\n\n## 性能测试\n\n- [js 框架性能测试](https://github.com/krausest/js-framework-benchmark)\n- [ui bench](https://localvoid.github.io/uibench/) - another ui bench\n\n## 前端框架\n\n- [solid](https://github.com/solidjs/solid) - react like 的写法，但是性能极大的提高\n  - [solid real world example](https://github.com/solidjs/solid-realworld)\n  - [solid headless ui](https://github.com/LXSMNSYC/solid-headless)\n- [lit](https://github.com/lit/lit) - Lit is a simple library for building fast, lightweight web components.\n- [redwood](https://github.com/redwoodjs/redwood) - Bringing full-stack to the Jamstack.\n- [svelte](https://github.com/sveltejs/svelte) - Cybernetically enhanced web apps\n  - [sapper](https://github.com/sveltejs/sapper) - The next small thing in web development, powered by Svelte\n  - [svelte kit](https://github.com/sveltejs/kit)\n\n## 汇总资源\n\n- [awesome-react](https://github.com/enaqx/awesome-react)\n\n## 工具\n\n- [Turborepo](https://github.com/vercel/turborepo) - vercel mono repo tool\n\n## Schema\n\n- [Zod(https://github.com/colinhacks/zod) - 好用的 JS Schema 验证库，再也不用担心 js 运行时类型问题了\n\n## Libraries\n\n- [PapaParse](https://github.com/mholt/PapaParse) - 解析 CSV 文件\n"},{"fields":{"slug":"/awesome-kol/","title":"Awesome KOL"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome KOL\ntags:\n  - Awesome\n  - KOL\n---\n\n## Twitter\n\n- [Next Fucking Level](https://twitter.com/nextfukinglevel)\n"},{"fields":{"slug":"/awesome-list/","title":"Awesome List"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome List\ntags:\n  - Awesome\n  - List\n---\n\nCurating the best of list on the internet with good summaries from others.\n\n## Awesome\n\n- [GitHub - sindresorhus/awesome: 😎 Awesome lists about all kinds of interesting topics](https://github.com/sindresorhus/awesome)\n\n## Social\n\n- [Reddit List](https://redditlist.io) - Discover Subreddits for different topics\n- [awesome-decentralized](https://github.com/croqaz/awesome-decentralized)\n\n## Communities\n\n- [Hive Index](https://thehiveindex.com/) - Find online communities, find your people.\n\n## Startup\n\n- [STARTUP LAUNCH LIST](https://startuplaunchlist.com) - A​rticle list you need to read before launching a startup.\n\n## Freelancer\n\n- [Freelancer Resources List](https://nira.com/templates/freelancer-templates/) - All the free resources and templates you need to get work done as a freelancer\n\n## HR\n\n- [Nomad List](https://nomadlist.com) - The biggest crowdsourced list of cities in the world to help you choose where to go next.\n\n## Market\n\n- [Marketing Resources List](https://nira.com/templates/marketing-templates/) - The biggest collection of free marketing resources\n\n## API\n\n- [API list](https://apilist.fun/) - A collective list of APIs\n\n## Travel\n\n- [Visa List](https://visalist.io) - Know where you can travel with your passport tension free\n- [What is one country that you will never visit again?](https://www.reddit.com/r/AskReddit/comments/om38bx/what_is_one_country_that_you_will_never_visit/)\n- [What is one country you will gladly visit again? : AskReddit](https://www.reddit.com/r/AskReddit/comments/omnrxb/what_is_one_country_you_will_gladly_visit_again/)\n\n## Media\n\n- [Tech Blogs List](https://airtable.com/shriIvyyV3gAJf0x4/tblcakhoBi0A33QhB/viwWIaPD1CBQtE5e1) - Curated list of 3,800+ tech journalists\n\n## Posts/Articles\n\n- [最受欢迎的 HackerNews 帖子](https://news.ycombinator.com/item?id=24351073)\n\n## Website\n\n- [awesome lite websites](https://github.com/mdibaiee/awesome-lite-websites)\n"},{"fields":{"slug":"/awesome-low-code/","title":"常见的低代码/无代码列表"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 常见的低代码/无代码列表\ntags:\n  - Awesome\n  - Low-Code\n---\n\n收集常见的无代码/低代码资源。\n\n## Selfhosted\n\n- [lowdefy](https://github.com/lowdefy/lowdefy) - An open-source, self-hosted, low-code framework to build internal tools, web apps, admin panels, BI dashboards, workflows, and CRUD apps with YAML or JSON. 用 yaml 生成内部工具\n"},{"fields":{"slug":"/awesome-maker/","title":"值得定期关注的独立开发者/创造者"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 值得定期关注的独立开发者/创造者\ntags:\n  - Awesome\n  - Maker\n---\n\n## List\n\n- [Hacker News Users with highest karma](https://news.ycombinator.com/leaders)\n\n## Users\n\n收集独立创造者，以及他们主要发布作品的链接\n\n- andreyazimov, sheet2site 作者：\n  - [hacker new submitted](https://news.ycombinator.com/submitted?id=andreyazimov)\n- anderspitman, [patchbay](https://patchbay.pub/) 作者\n  - [hn submitted](https://news.ycombinator.com/submitted?id=anderspitman)\n"},{"fields":{"slug":"/awesome-mirrors/","title":"国内镜像资源汇总"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 国内镜像资源汇总\ntags:\n  - Awesome\n  - Mirrors\n---\n\n收集国内能用到的优秀镜像服务。\n\n## Github\n\n- [Fastgit](https://doc.fastgit.org/zh-cn/) - Github 国内镜像\n\n- Download: `https://download.fastgit.org/org/repo/xxx`\n- Clone `git clone https://github.com/org/repo`\n- Clone with ssh `git clone git@ssh.fastgit.org:theowenyoung/gatsby-theme-primer-wiki.git`\n\n## Rust\n\n- [rsproxy cn](https://rsproxy.cn/) - rust 国内镜像\n\n## Docker\n\n- 阿里云公网: `https://registry.cn-hangzhou.aliyuncs.com`\n- 腾讯云： `https://mirror.ccs.tencentyun.com`\n  - [使用说明](https://cloud.tencent.com/document/product/1207/45596)\n\n`sudo vim /etc/docker/daemon.json`\n\n```json\n{ \"registry-mirrors\": [\"https://mirror.ccs.tencentyun.com\"] }\n```\n\n```bash\nsudo systemctl restart docker\n```\n"},{"fields":{"slug":"/awesome-movies/","title":"值得观看的电影"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 值得观看的电影\nlanguage: zh\ntags:\n  - Movies\n  - Awesome\n  - 中文\n---\n\n## List\n"},{"fields":{"slug":"/awesome-news/","title":"Awesome News"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome News\ntags:\n  - Awesome\n  - News\n---\n\nCurating news sources.\n\n## Chinese\n\n- [thenewslens](https://www.thenewslens.com/) - Taiwan indie media\n- [The Stand News](https://www.thestandnews.com/) - Hong Kong indie media\n- [The Initium News ](https://theinitium.com/) - Taiwan/Hong Kong media\n- [HK CNews](https://www.hkcnews.com/) - Hong Kong indie media\n"},{"fields":{"slug":"/awesome-notes/","title":"Awesome Notes"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Notes\ntags:\n  - Awesome\n  - Notes\n  - Tools\n---\n\n## VS Code Extensions\n\n- [GitHub - foambubble/foam: A personal knowledge management and sharing system for VSCode](https://github.com/foambubble/foam)\n\n## Applications\n\n- [Obsidian](https://obsidian.md/)\n"},{"fields":{"slug":"/awesome-nsfw/","title":"Awesome NSFW"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome NSFW\ntags:\n  - NSFW\n  - Awesome\n---\n\nCurating interesting nsfw resources.\n\n## Resource\n\n- [Reddit sex life tree](https://observablehq.com/@stared/tree-of-reddit-sex-life)\n- [NSFW data sources](https://github.com/EBazarov/nsfw_data_source_urls)\n"},{"fields":{"slug":"/awesome-online-books/","title":"收集可以在线阅读的书籍"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集可以在线阅读的书籍\ntags:\n  - Awesome\n  - Books\n---\n\n## List\n\n- [设计数据密集型应用 - 中文翻译 Github](https://github.com/Vonng/ddia)\n  - [Online](https://vonng.github.io/ddia/#/)\n"},{"fields":{"slug":"/awesome-open-source/","title":"Awesome Open Source"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Open Source\ntags:\n  - Awesome\n  - Open Source\n---\n\nCurating awesome open source projects is a lot of fun.\n\n## List\n\n- [Ansiwave](https://github.com/ansiwave/ansiwave) - Sqlite 驱动的，可离线的论坛\n- [Giscus](https://github.com/giscus/giscus) - github discussion backend 评论系统\n\n## Search\n\n- [typesense](https://github.com/typesense/typesense) - Fast, typo tolerant, fuzzy search engine for building delightful search experiences ⚡ 🔍 ✨ An Open Source alternative to Algolia and an Easier-to-Use alternative to ElasticSearch.\n"},{"fields":{"slug":"/awesome-p2p/","title":"Awesome P2P"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - P2P\n---\n\n# Awesome P2P\n\nCurating P2P things.\n\n## List\n\n- [Awesome Peer-to-Peer](https://github.com/kgryte/awesome-peer-to-peer) - A list of peer-to-peer resources.\n- [awesome-decentralized-web](https://github.com/gdamdam/awesome-decentralized-web) - A curated list about the decentralized technologies and tools to develop decentralized applications.\n- [awesome-blockchains](https://github.com/openblockchains/awesome-blockchains)\n\n## Database\n\n- [Gun](https://github.com/amark/gun) - An open source cybersecurity protocol for syncing decentralized graph data.\n- [remotestorage](https://github.com/remotestorage/remotestorage.js) - An open protocol for per-user storage on the Web\n  - [apps](https://remotestorage.io/apps/)\n\n## Protocol\n\n- [Scuttlebutt](https://scuttlebutt.nz/get-started/) - Scuttlebutt is a social network and it works like others social apps we already use. The key difference is that it is decentralised, meaning not centralised\n- [urbit](https://urbit.org/) - A clean-slate OS and network for the 21st century.\n\n## Torrents\n\n- [exatorrent](https://github.com/varbhat/exatorrent) - Self-hostable , easy-to-use , lightweight and feature-rich torrent client written in Go . It comes with beautiful Web UI and Optional Multi-User Support . Run Locally or Host in Server . Open/Download/Stream Torrents in Browser Right Away!\n- [qBittorrent](https://www.qbittorrent.org/) - The qBittorrent project aims to provide an open-source software alternative to µTorrent.\n\n## Git\n\n- [Gittorrent](https://github.com/cjb/gittorrent) - A decentralization of GitHub using BitTorrent and Bitcoin\n- [Radicle](https://docs.radicle.xyz/docs/what-is-radicle.html) - Radicle is a decentralized code collaboration network built on open protocols 🌱.\n\n## Communities\n\n- [Superhighway84](https://github.com/mrusme/superhighway84) - USENET-inspired decentralized internet discussion system\n\n## Search\n\n- [yacy p2p search engine](https://yacy.net/)\n"},{"fields":{"slug":"/awesome-privacy/","title":"Awesome Privacy"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Privacy\ntags:\n  - Awesome\n  - Privacy\n---\n\nCurating awesome privacy things.\n\n## Resource\n\n- [anonymousplanet](https://anonymousplanet.org/guide.html) - The Hitchhiker’s Guide to Online Anonymity\n\n## Alternatives\n\n- [Nitter](https://github.com/zedeus/nitter) - Twitter front end alternative.\n  - Official instance: <https://nitter.net/>\n- [Invidious](https://github.com/iv-org/invidious) - Invidious is an alternative front-end to YouTube\n  - Instances: <https://instances.invidious.io/>\n"},{"fields":{"slug":"/awesome-products/","title":"Awesome Products"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Social\n  - Products\n---\n\n# Awesome Products\n\nCurating interesting Products\n\n## List\n\n- [Sincerely Me](https://www.sincerelyme.us/) - Write and send a real letter to someone you ❤️, Just type your letter, specify addresses, and we’ll send it via USPS right away.\n"},{"fields":{"slug":"/awesome-quotes/","title":"收集发人深省的话"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 收集发人深省的话\ntags:\n  - Awesome\n  - Quotes\n  - 中文\n---\n\n收集看到的一些有意思的话。值得高亮再次回味的话。\n\n- > 80 岁的富人在经营国家和公司，而贫穷的 80 岁老人被认为不适合工作。\n  > by [nothing_in_my_mind](https://www.reddit.com/r/TooAfraidToAsk/comments/pgvecw/how_are_7080_year_olds_generally_regarded_as/hbffv43/?utm_source=reddit&utm_medium=web2x&context=3)\n- > “川陀的覆灭，”谢顿说，“是任何努力都无法阻止的。然而，要使它加速却非常容易。\n  > by 《银河帝国》\n- > 夹三明治的肉，如果写成「90％不含脂肪」就比「含 10％脂肪」更具吸引力。 -- 《快思慢想》\n- > 你愿意接受一个赌局，它给你 10%的机会去赢 95 元，和 90%的机会去输 5 元？你愿意花 5 元去买一张彩券，它给你 10%的机会去赢 100 元，90%的机会什么都没赢？ -- 《快思慢想》\n- > 开刀后一个月的存活率是 90%。开刀后第一个月的死亡率是 10%。 -- 《快思慢想》\n- > 年轻时为自己所立下的志愿和目标会影响他一生。当他年轻时候的目标赚更多钱，那么概率上也更能赚钱。那些想要钱也赚到钱的人，比一般人更满意生活；想要钱却没有赚到钱的人，比一般人更不满意生活。人们为自己设定的目标对他们将来要做什么，是如此的重要。 -- 《快思慢想》\n- > 在避免错误上，团体做得比个人好，因为团体总是想得比较慢，有权力去要求有秩序的流程。-- 《快思慢想》\n- > 在这个过程中他与这个世界完全和解（像一切美妙的麻醉剂都能够做到的一样），虽然他曾经对它是如此不满。既然世界承认了他的重要性，那么一切秩序都是好的。 --《美丽新世界》\n- > 如果在你全部的清醒时间，都能给自己的大脑找到有意义的事情去做，而不是放任自己在迷糊的状态下漫无目的地浏览几个小时网页，那么在一天结束时，你会觉得更加充实，第二天开始时更加轻松。 -- 《深度工作》\n- > 什么？你认为在那 16 个小时投入全部的精力会削弱工作 8 小时的价值？不是的。恰恰相反，它必定会增加工作 8 小时的价值。人们都要懂得一个重要的道理，人的智力系统可以进行长时间的高强度活动：它不像人的手脚一样会疲倦。除睡觉以外，它只需要变化，而不是停止。 -- 本内特\n- > 很少有人能做到一天工作 8 个小时。在充斥着各种会议、干扰、网页浏览、办公室政治和私人事务的一个普通工作日里，能够专心工作几个小时就已经很幸运了。更少的正式工作时间有助于挤压出更高的效率。如果每个人都只有更少的时间完成任务，他们就会更加尊重时间。人会变得珍惜时间，而这是一件很好的事情。他们不会把时间花在无关紧要的事情上。如果拥有的时间变少，你就会更聪明地利用时间。 -- 弗里德\n- > 谷歌允许员工拿出 20%的时间用于自己主导的项目，弗里德一直对这个政策很感兴趣。尽管他喜欢这个主意，但是他感觉从每一个忙碌的一周中都抽出一天，不利于产生真正突破的连续深度工作。“对于从 5 周中拿出 5 天，我更倾向于集中拿出 5 天，”他解释道，“我们的理论是，人们通过长时间不被打断的工作可以创造更好的成果。”为了测试这个理论，37signals 执行了一些激进的措施：整个 6 月，公司让员工去在自己的项目上深度工作。这一个月可以免去所有浮浅的工作责任——没有状态审查会，没有备忘录，公司组织了一个“路演日”，员工可以展示他们正在研究的想法。在 Inc.杂志文章中，弗里德总结了这个实验，并称实验是成功的。路演日产生了两个迅速投入生产的项目：一个是能更好处理售后服务的工具套装，另一个是一套可以帮助公司更好掌握客户是如何使用本公司产品的数据可视化系统。这些项目将为公司带来可观的利润，但是如果没有提供给员工的那些不受打扰的深度工作时间，这些项目极有可能不会被出现。梳理出它们的潜在可能性需要几十个小时的不懈努力。 -- 弗里德.\n- > 有证据表明，全美学生的自尊提高了但成绩下降了。他们做得更差了，感觉却更好了。 -- 《意志力》\n- > 事情不顺时，高自尊的人往往觉得自己不该被打扰，如果别人理解不了他们为什么变得那么恐怖，那是别人的问题。 -- 《意志力》\n- > “民主的基本原则是，全体人民拥有平等执政和平等决策权利。乍一看这是个不错的安排，但实际上，由于人民并未接受过系统的教育，不知道如何选择最优秀的执政者、最明智的发展道路，于是”\n- > 为什么这些乌托邦从未在地图上出现过呢？“因为贪婪和奢侈。人不会满足于简朴的生活：他们渴望拥有并野心勃勃，争强好胜并心怀嫉妒，他们很快对自己拥有的东西感到厌烦，继而迫切渴望得到自己没有的东西，因为那些属于别人的东西具有诱惑力。结果便是一族人侵犯另一族的领地，相互争夺土地资源，接着爆发战争。随着贸易和金融的产生和发展，出现了新的社会阶级分化。“任何一个城市事实上都是两个城市的结合体，穷人之城和富人之城，他们相互憎恨、相互对抗；同时，每一个城中城又包含若干个更小的城——你若将他们视为统一的城邦，那你就大错特错了。”（第 423 节）” -- 柏拉图\n- > “然而，民主制度也没能幸免，它因过度使用民主原则而走上了自毁之路。民主的基本原则是，全体人民拥有平等执政和平等决策权利。乍一看这是个不错的安排，但实际上，由于人民并未接受过系统的教育，不知道如何选择最优秀的执政者、最明智的发展道路，于是，这一原则变得极其可怕。“至于人民，他们没有丝毫的想法，只会重复统治者乐于告诉他们的那点东西”（《普罗泰戈拉篇》，第 317 节）；要使一种学说被接受或否定，只需要在当下受欢迎的戏剧中对其进行一番赞扬或嘲讽即可（毫无疑问，这对阿里斯托芬来说是一种抨击，因为他喜欢在自己的喜剧中对每一个新的观点进行攻击）。对国家这艘大船而言，人民共治是个风大浪急的海域，任何一点风吹草动都可能引发汹涌波涛，甚至使这艘大船偏离航向。这种民主的最终结果不是暴政便是独裁；民众如此热爱阿谀奉承,“如此“渴望听到赞美”，以至某个最无廉耻、极擅溜须拍马之人以自诩的“人民护卫者”身份登上了最高权力的宝座。（第 565 节，大家可以对照下古罗马的历史）,”将选举政治官员的重任交给毫无主见、轻信他人的群众该是多么愚蠢啊，柏拉图越想越觉得震惊——更别提信任那些躲藏在民主舞台幕后、追逐财富的寡头决策者了。他不禁抱怨，在一些简单如制鞋的小事上，我们往往觉得只有接受过专业训练的人才能满足我们的需求，但面对政治我们却假设：只要他懂得如何赢得选票，那么他一定能管理好一座城市或一个城邦。生病了，我们要找有行医执照的大夫，因为那是他受过正统教育和相关技术培训的证明——我们不要相貌俊美或能说会道的大夫。那么，假若整个国家生了病，难道我们就不应该找寻最具智慧、最优秀的人来服务和领导吗？ -- 《哲学的故事》\n- > “然而，自亚里士多德时代至今的批评家已经在《理想国》中发现了诸多值得批判和怀疑的观点。这个斯塔基拉人[47]用嘲讽的口吻说道：“这些事情和其他许多事情一样在历史的进程中一次次被重提。”设计一个四海之内皆兄弟的社会似乎很美好，但若将这个假设扩展到我们时代的每一个男子身上，就等于把它所具有的一切温暖和意义涤荡得一干二净。共产也是如此：它意味着责任稀释；每件东西为每个人所拥有也就意味着一切东西都无人看管。最后，这个伟大的保守主义者辩称，共产主义会将人拖入一种难以忍受、永无止境的密切联系中；使得隐私和个性毫无栖息之地；它假设人人都具有实际上只有少数圣人才具备的耐心和合作的美德。“我们既不能假设一种超出常人的道德标准，又不能倡导一种因天性和环境而特别优异的教育；“我们必须考虑大多数人能够享受得到的生活和国家能够实现的政府形式。” -- 《哲学的故事》\n- > “柏拉图最欠缺的或许是赫拉克利特的变化意识：他过于焦急地想将这个世界的活动场景凝固成一幅静止的图画。他跟任何一位胆小怕事的哲学家一样钟情于秩序；由于受到雅典民主骚乱的冲击，他极端鄙视个人的价值；他像昆虫学家对苍蝇进行分类那样对人进行阶级划分；他也不反对用牧师式的欺骗来确保国家管理目的的实现。他的理想国是静止的；它很容易变成一个老顽固般的社会，并由一些仇视发明和嫉妒改变的、僵化的、八十多岁的人实施统治。它仅能算是科学的，而非艺术的；它崇尚对科学思想如此重要的秩序，却忽视了艺术的灵魂即自由；它崇拜美的名声，却放逐了能够独立创造美或展示美的艺术家。它是斯巴达或普鲁士，而不是一个理想的国度。” -- 《哲学的故事》\n- > “国家的最终目的不是为了统治人，或者通过恐惧约束他们，而是使每个人都摆脱恐惧，他可以生活、行动在完全的安全保障中，不会伤害自己和他人。我再说一遍，国家的目的不是将理性的人变为残暴的野兽和机器，而是让他们的身心正常工作，指引他们依靠自由的理性生活，他们不会浪费力气在仇恨、愤怒和欺诈上，也不会尔虞我诈。因此国家的目的是真正的自由。” -- 《哲学的故事》\n- > “反对言论自由的法律是对所有法律的颠覆，因为人们不会再尊重他们不能加以评论的法律。” -- 《哲学的故事》\n- > “国家对思想控制的越少，对公民和国家越有益。” -- “斯宾诺莎”\n- > “国王下令说，这个法国人竟然首先认为自己是人，其次才是法国人，那么我们应该永远禁止他再次踏上法国的土地。” -- 《哲学的故事》\n- > “来吧，勇敢的狄德罗，无畏的达朗贝尔，联合起来……压倒狂热者和无赖，摧毁枯燥无味的高谈阔论、拙劣的诡辩还有撒谎的历史……数不胜数的荒谬。不要让那些敏于感知的人屈从于那些毫无感知的人，即将出生的一代应该拥有理性和自由。” -- 《哲学的故事》\n- > “什么权力可以使一个生来自由的人非要被迫和另一个人想法一致？” -- 《哲学的故事》\n- > “爱国意味着一个人除了自己的国家之外仇恨其他所有国家。如果一个人希望自己的国家富强，但是又不牺牲他国，他就是一位理性的爱国者和世界公民。” -- 《哲学的故事》\n- > “首先，他不信任民众：“民众根据理性行动的时候，所有的一切都不复存在了。”大多数人都急于寻求真理，直到改变使真理变成谬误，他们认识的历史不过是一个神话取代另一个神话。“当旧的错误成立时，政治就利用它，让民众把它当作佳肴吞下肚子，直到另一个迷信错误取而代之，政治就从第二个当中获益，正如他们在第一个中获益那样。”然后又一次，不平等被写进社会结构，只要人还是人，生活还是挣扎，那么不平等就不可能消除。“那些说人人平等的人，如果他们指的是人人享有平等的权力、享受自由、拥有财产、受到法律保护，那么他们就说出了最大的真理。”但是“平等是世界上最自然也是最异想天开的事：自然是当它仅指权利的时候，不自然是当它企图平分物资和权力的时候” -- 《哲学的故事》\n- > “我们什么时候才能拒绝诱惑、拒绝卷入这份以痛苦结尾的毫无意义的苦差？我们什么时候才能鼓足勇气，藐视意志，并告诉它，美好的生活是谎言，死亡才是最大的恩赐？” -- 《哲学的故事》\n- > “拥有闲暇时间是成为悲观主义者的必要条件，因为活跃的生活态度通常会给身体和心灵带来高涨的情绪。” -- 《哲学的故事》\n- > “悲观主义中有很大一部分是唯我主义.\" -- 《哲学的故事》\n- > “也许，当我们孤傲地说我们厌恶世界这个存在时，其实是在掩盖我们对自己那不可言说的厌恶：我们糟蹋了自己的生活，便责备那不具有抗辩能力的“环境”和“世界”。成熟的人会欣然接受大自然赋予的生命局限性，他们不希冀上天的偏爱，也不想在人生这场游戏中耍滑头、占便宜。和卡莱尔一样，他们懂得，因为太阳不为我们点燃雪茄而去谩骂它是毫无意义的。如果我们足够聪明，太阳在工具的辅助下也许就会点燃我们的雪茄，如果我们奉献自己的一缕阳光帮助宇宙摆脱困境，广袤中立的它也许就会变为一个美好的地方。实际上，这个世界既不与我们为敌，也不与我们为友，它只是我们手中的原材料。它可以是天堂，也可以是地狱，一切取决于我们的内在。” -- 《哲学的故事》\n- > “对那些重思考的人来说，‘世界’是一场喜剧，而对重感觉的人来说，却是一场悲剧。” -- 《哲学的故事》\n- > “社会主义需要强制仲裁。在强制仲裁下……管理者在追求个人利益时……便不会遭遇工人联合的反抗。工人不会像现在这样，因为预定条款得不到满足而举行罢工，因此，管理者的权力不会受到任何约束，它会越来越大、越来越广泛、越来越稳固，直到无法抗拒……如果我们将目光从官僚机构对工人的管理转向官僚机构本身，如果我们问自己，官僚机构是如何受到管理的？我们永远都不会得到满意的答案……在这种情况下，一种全新的贵族政治会自然产生。为了支持贵族政治，人民大众会不辞辛劳，埋头苦干。而贵族政治一旦稳固如山，便会行使一种权力，一种令过去一切贵族政治难以望其项背的权力” -- 《哲学的故事》\n- > “无知不是幸福，而是麻木、奴性；唯有智慧才能使我们把握自己的命运。” -- 《哲学的故事》\n- > “政治秩序的目的是帮助个体完全地发展自己” -- 《哲学的故事》\n- > “哲学应致力于用人类知识来解决社会矛盾和社会冲突。哲学像一位腼腆的老处女，依恋着早已过时的问题和观念；“对当今难题的直接关注已经交由文学和政治学负责”。今天，哲学在各种学科的挑战中已陷入困境，这些学科一个接一个地抛弃哲学，进入一片工业化天地。哲学被孤立在寒风中瑟瑟发抖，好像一位被遗弃的母亲，元气大伤、家徒四壁。哲学怯生生地放弃她真正关心的问题——人类及其世俗生活，来到一片叫作认识论的残垣断壁前，仿佛随时有锒铛入狱的危险，因为律法禁止人们在摇摇欲坠的危房里安身。但对我们来说，这些古老的问题早已失去了意义：“我们无心解决，我们绕道而过”；社会矛盾不断，生活变幻无常，古老的问题在这股浪潮中烟消云散。哲学必须像其他的一切那样，将自己世俗化；哲学必须脚踏实地，通过照亮人类生活来获得生存资本。” -- 《哲学的故事》\n- > 无论哪一国家，只要存在着一个上流阶级，这个国家的道德原则大部分就会源自这一上流阶级的阶级利益和阶级优越感。如古代斯巴达人和希洛特农奴之间，今日种植园主与黑人奴隶之间，王侯与臣属之间，贵族与平民之间，乃至男女之间，其道德情操大部分都是这些阶级利益和优越感的产物。而且它一经生成，就会反过来影响上流阶级成员相互关系间的道德情感。 -- 穆勒《论自由》\n- > 如果一项意见只是一件个人财产，除持有者外对别人毫无价值，那么即便剥夺对它的享用只是一桩个人伤害，而所伤者或众或寡犹有不同。但是禁止一种意见的表达，其独有的罪恶之处在于，它是对包括当代人与后代人在内的全人类的剥夺；并且这种剥夺对那些不同意这种意见的人，比对持有这种意见的人甚至更大。如果被禁止的意见是正确的，那么人们便被剥夺了以正确矫正错误的机会；如果它是错误的，那么人们便损失了几乎同样大的益处，因为经过真理与谬误的碰撞，会让人们对真理有更清晰的体会和更生动的印象。 -- 穆勒 《论自由》\n- > 如果一个人将自身生活计划的选择，全部委诸世人或自己的生活圈子，则无需赋予他任何其他能力，只要有猿猴一般的模仿力就足够了。而自行选择生活计划的人，却需要调动他的所有官能。他必须运用自己的观察力去看，用推理与判断力去预见，用行动力去收集供做决定的材料，用辨别力去做出裁决，裁决既定之后，犹须用毅力与自制力去坚持深思熟虑后的决定而不致放弃。并且，在行为上，他做决定根据自己的判断和感觉的成分越大，他所需要和运用的这类属性也就越多。\n- > 无论哪个时代，个性自由得以发挥的程度是否宽广，都是后世对其艳羡或鄙弃的标准。只要个性在其之下还能得以存在，即便是专制也还没有产生它最坏的恶果；而凡是摧毁人之个性的，却都可以称之为暴政，无论它以什么名目出现，也无论它宣称执行的是上帝的意志还是人民的命令。 -- 穆勒 《论自由》\n- > 人类通常之重视权力，远远过于珍爱自由！ -- 穆勒 《论自由》\n- > 我还常听他们说：“真希望印尼过去是英国而不是荷兰的殖民地。”我问印尼人为何有此一说，他们提出的理由不外乎：第一，荷兰人只会巧取豪夺，不思回报，而英国人帮印尼建立了国家制度。（我又问他们对荷兰人完成的重要工程、灌溉系统、港口建设有何看法，他们的答复是：荷兰人搞这些玩意儿只是为了更有效率地抢走我们的东西。）第二，荷兰人蓄意对印尼人施行愚民政策，而英国人会教育民众。第三，荷兰人派政治官员执行朝令夕改、对升斗小民没半点好处的司法制度，而英国人拥有独立司法系统，法律面前人人平等。 -- 伊丽莎白·皮萨尼 《印尼 ETC》\n- > 我在大学里得到的最好建议是：\"找到最好的老师，上他们所有的课，不管是什么课。\" 这个建议也适用于互联网。 -- David Perell\n- > 如果你在生活中缺乏一个宏伟的目标，你就缺乏一个连贯的生活哲学。\n  > 当你在临终前，你会回头看，意识到你浪费了一次活着的机会。\n  > 你没有花一生去追求真正有价值的东西，而是浪费了它，因为你让自己分心。 -- 美好生活指南：斯多葛派喜悦的古老艺术 - 威廉·欧文\n- > 你不太可能拥有美好而有意义的生活，除非你能克服你的贪得无厌。 -- 美好生活指南：斯多葛派喜悦的古老艺术 - 威廉·欧文\n- > 为什么自律值得拥有？因为那些拥有它的人有能力决定他们在生活中做了什么。那些缺乏自律的人，他们的人生道路将由某人或某事决定。\n- > 如果你想要力量，你可以举重;如果你想要清晰的思路，你就写。 -- [tylercipriani](https://tylercipriani.com/blog/2022/02/21/why-i-blog/)\n- > 火星和地球之间的平均距离是 2.29 亿公里，假如行星之间的数据传输以光速进行，那么直接传输单个数据包大约需要 12.7 分钟，完成 3 步 TCP 握手将需要 38 分钟。\n- > “女性不是一种性别，而是一种处境” -- 微博网友\n\n## 美好生活指南：斯多葛派喜悦的古老艺术 - 威廉·欧文\n\n> 来自: <https://sive.rs/book/StoicJoy>\n\n- > 饥饿是最好的开胃菜，因为如果你等到你饿了或渴了才吃或喝，你会比别人更快乐地吃简单的食物。\n- > 我们不快乐，因为我们贪得无厌。在努力得到我们想要的东西之后，我们对自己渴望的对象失去了兴趣。我们没有感到满足，而是感到有点无聊，为了回应这种无聊，我们继续形成新的，甚至更大的欲望。\n- > 获得幸福的最简单方法是想要你已经拥有的东西。\n- > 通过改变自己来获得满足感 - 通过改变我们的欲望。\n- > 不要追求社会地位，因为如果你把取悦别人作为你的目标，你将不再有取悦自己的自由。你将奴役自己。\n- > 加图有意识地做了一些事情来引发别人的鄙视，这样他就可以练习无视他们的蔑视。\n- > 不需要财富比财富本身更有价值。\n- > 如果你接触到奢侈的生活方式，你可能会失去在简单的事情上取乐的能力。\n- > 着装是为了保护我们的身体，而不是为了给别人留下深刻的印象。同样，我们的住房应该是功能性的。\n- > 拥有连贯的生活哲学可以让你更容易接受死亡。有了连贯的生活哲学，你就会知道生活中什么值得实现，因为你花时间试图实现你认为值得实现的生活中的东西，你可能已经达到了它，在某种程度上，你可以这样做。因此，当你死去的时候，你不会觉得自己被欺骗了。\n- > 然而，那些没有连贯的生活哲学的人，会拼命地想要推迟死亡。因为他们即兴创作的生活哲学使他们相信，生命中值得拥有的更多是一切，如果他们死了，他们就无法获得更多的一切。\n- > 如果我们不为致富而努力工作，而是训练自己满足于我们所拥有的一切\n  > 如果我们不追求名声，而是克服对他人赞美的渴望\n  > 如果我们不花时间谋划伤害我们所羡慕的人，而是花时间克服我们的羡慕之情\n  > 如果我们不是为了成为受欢迎的人而把自己打倒，而是努力维持和改善与那些我们知道是真正的朋友的关系。\n  > 我们依然会过得很好\n- > 因为悲伤是一种负面情绪，斯多葛学派反对它。同时，他们意识到，因为我们只是凡人，所以一生中不可避免的一些悲伤，就像一些恐惧，一些焦虑，一些愤怒，一些仇恨，一些羞辱和一些嫉妒一样。因此，斯多葛学派的目标不是消除悲伤，而是尽量减少悲伤。\n- > 尽你最大的努力去接受过去，不管它曾经是什么，拥抱现在，不管它是什么。\n\n## 时间悖论\n\n> 来自 <https://sive.rs/book/TimeParadox>\n\n- > 面向未来的人在专业和学术上往往更成功，吃得好，定期锻炼，并安排预防性医生的检查。但他们最不可能帮助有需要的人。\n- > 以当下为导向的人往往愿意帮助他人，但似乎不太愿意或能够帮助自己。\n\n## 绊倒幸福\n\n> 来自 <https://sive.rs/book/StumblingOnHappiness>\n\n- > 虽然其他国家的公民不像美国人那样乐观，但他们也倾向于想象自己的未来会比同龄人更光明。\n- > 普通人并不认为自己是普通人。大多数学生认为自己比普通学生更聪明。大多数业务经理认为自己比普通业务经理更有能力。大多数足球运动员认为自己比队友更有理智。90%的驾驶者认为自己是比平均水平更安全的司机。94%的大学教授认为自己是比平均水平更好的教师。具有讽刺意味的是，我们偏向于认为自己比平均水平更好，导致我们认为自己比平均水平更少偏见。\n\n## 《Ego Is the Enemy》 - 作者：Ryan Holiday\n\n> 来自：<https://sive.rs/book/EgoEnemy>\n\n- > 如果你想活得快乐，就活在隐蔽的地方。\n\n## 老得太早，聪明的太晚：你现在需要知道的三十件真实的事情 - 戈登·利文斯顿\n\n> 来自： <https://sive.rs/book/30TrueThings>\n\n- > 在评判别人的时候， 我们需要关注的不是他们承诺的是什么， 而是他们的行为方式。\n- > 过去的行为是未来行为的最可靠预测因子。\n- > 运转良好的家庭善于让孩子离开,功能不佳的家庭往往会抓住他们。\n- > 我们大多数童年创伤的诉讼时效已经过期。\n- > 我们对发生在我们身上的大部分事情负责。\n- > 有判断力的人通常是在有判断力的家庭中长大的\n- > 继续做我们习惯的事情总是更容易的，即使它显然不适合我们。\n- > 疾病的主要优点是它可以减轻责任。\n- > 一种\"不幸基金\"，可用于补偿面临非任何人过错的非常费用的人（例如，出生时患有残疾异常的孩子的父母，犯罪或自然灾害的受害者）。当然，这将比在诉讼彩票中丰富几个中奖者更公平，更富有同情心。这样一个系统将加强这样一种信念，即我们所有人都共同承担着不可避免的不确定性和风险，而这些不确定性和风险是生活的一部分。\n- > 焦虑是会传染的,孩子们在父母身上感觉到它，并受到它的影响。\n- > 在父母控制严格的家庭中长大的孩子，由于只经历了严格的外部规则，因此有一套糟糕的内在限制。相反，在几乎没有限制的家庭中，儿童没有办法学习与他人舒适生活所必需的准则。\n- > 作为父母，我们的首要任务是向他们传达一种世界感，即世界是一个不完美的地方，然而，在其中，幸福是可能的。\n- > 渴望天堂的问题在于，它分散了我们从当下获取快乐和意义的努力。\n- > 写下你自己的墓志铭。这个练习应该纳入每一份书面遗嘱：\"对于我的墓志铭，我想要以下内容：\"\n\n## 《真相》 - 作者：尼尔·施特劳斯\n\n> From: <https://sive.rs/book/TheTruth>\n\n- > 成瘾：如果你从小就觉得自己不被父母不想要或不重要，这是一个可能被忽视的迹象：这会产生受伤的孩子，他们经常抑郁和优柔寡断，认为自己有缺陷，不如别人有价值，觉得他们不能独自面对这个世界。在人际关系中，他们往往有所谓的焦虑依恋。他们可能觉得他们对于他们的伴侣来说还不够;变得如此包裹在他们的关系中，以至于他们忽视了自己的需求和自我价值。\n\n- > 健康的关系是当两个个体化的成年人决定建立一段关系，并成为第三个实体。他们培养了这种关系，而这种关系也培养了他们。但他们并不过分依赖或独立：他们是相互依存的，这意味着他们自己照顾自己的大部分需求和需求，但是当他们不能时，他们不怕向伴侣寻求帮助。\n\n- > 只有当我们对某人的爱超过我们对他们的需要时，我们才有机会建立真正的关系。\n- > 阻碍我们的不是社会，而是我们自己。我们只是责怪社会，因为它不仅更容易，而且几乎不可能移动。这样，我们实际上不必改变。\n- > 我犯了一个错误，把多样性等同于自由。我关闭了所有社交和约会应用程序和网站。这就是自由。只有不到二十个人拥有我的电子邮件地址。这就是自由。我的手机几乎不发出声音。这就是自由。\n- > 需要艰苦的、有意识的、勤奋的工作才能真正改变。\n\n## 当文化碰撞时 - 理查德·D·刘易斯\n\nFrom: <https://sive.rs/book/WhenCulturesCollide>\n\n- > 美国人认为个人必须取得胜利。在美国，你从最底层开始，全力以赴，用自己的靴带把自己拉起来，把它掏出来，然后到达最顶端。从理论上讲，在一个人人平等的土地上，这是从破烂到富有。这是一项艰巨的任务，但幸运的是，美国人是坚定不移的乐观主义者和面向未来的。他们是机会主义的，很快就会抓住机会。美国的历史为那些抢得最快的人提供了许多黄金机会。\n\n## Predictably Irrational - 作者：Dan Ariely\n\nFrom: <https://sive.rs/book/PredictablyIrrational>\n\n- > 大多数人不知道他们想要什么，除非他们在上下文中看到它。\n  > 我们不知道我们想要什么样的赛车，直到我们在环法自行车赛中看到它。\n  > 我们不知道我们喜欢什么样的扬声器系统，直到我们听到一组听起来比以前更好的扬声器。\n  > 我们不知道我们想在生活中做什么 - 直到我们找到一个亲戚或朋友，他正在做我们认为我们应该做的事情。\n  > 一切都是相对的，这就是重点\n  > 一旦价格在我们的脑海中确定，它们不仅决定了我们愿意为一件商品支付什么，还决定了我们愿意为相关产品支付多少钱。（这使得它们连贯一致。\n  > 搬到新城市的人仍然坚持他们在前城市为住房支付的价格。从廉价城市迁移到中等城市的人不会增加支出以适应新市场。他们花费了他们在以前的市场上习惯的东西，甚至牺牲了舒适性。\n\n- > 当我们面对这样的决定时，这似乎只是一个没有重大后果的决定，但实际上，第一个决定的力量具有持久的影响，并将在未来几年内渗透。\n- > 大多数交易都有优点和缺点，但是当某些东西是\"免费的！\"时，我们忘记了缺点。\n  > \"免费！\"给了我们一种情感上的冲动，以至于我们认为所提供的东西比实际价值要高得多。\n  > 为什么？因为人类天生就害怕失去。\"FREE！\"的真正魅力与这种恐惧有关。没有明显的损失可能性。\n  > 如果健康问题，应重点关注早期发现，以此作为消除严重疾病进展的一种方式。使这些关键程序免费。\n- > 美国退休人员协会询问律师，他们是否会为有需要的退休人员提供更便宜的服务，价格约为每小时 30 美元。\n  > 他们问律师是否愿意为有需要的退休人员提供免费服务。压倒性地答应了。\n  > 当要求人们帮助移动沙发时也是如此：要求他们免费做，他们会说是的。提出付给他们一美元，他们说不。\n  > 教训：一旦市场规范进入我们的考虑，社会规范就会消失。\n\n## 快乐 - 德伦·布朗\n\nFrom: <https://sive.rs/book/Happy>\n\n- > 如果你不需要给任何人留下深刻的印象，你的欲望就会急剧减少。\n- > 嫉妒来自接近，而不是不成比例。\n- > 你对自己的认知、感知、态度和概念都与那些你喜欢或对比自己的人联系在一起。\n- > 如果你最初对生活的假设是负面的，那么会更快乐。\n- > 全身心地投入到智力追求中，是最好的良性活动。\n\n## 影响\n\nFrom: <https://sive.rs/book/Influence>\n\n- > 倾向于想要被禁止的东西，因此认为它更有价值。\n\n## 选择的悖论\n\nFrom: <https://sive.rs/book/ParadoxOfChoice>\n\n- > 我们希望我们的医生，投资顾问，消费者报告为我们权衡利弊。我们不想自己评估权衡取舍。这在情感上是不愉快的。\n- > 篮球教练给那些薪水更高的球员更多的时间。\n- > 许多人坚持在陷入困境的关系中 因为他们已经付出了努力。\n\n## Made to Stick - 由 Chip Heath 和 Dan Heath 制作\n\nFrom: <https://sive.rs/book/MadeToStick>\n\n- > 迪士尼称其员工为\"演职人员\"。作为戏剧作品中的演员的隐喻在整个组织中始终如一地传达：\n  > 演员不是为了工作而面试，而是\"试镜一个角色\"。\n  > 当他们在公园里散步时，他们是\"在舞台上\"。\n  > 参观迪士尼的人是\"客人\"，而不是顾客。\n  > 工作是\"表演\"，制服是\"服装\"。\n  > 这个比喻对迪士尼员工非常有用。只需阅读上面的描述，您就可以预测演职人员的行为方式。（例如：在公共场合穿着戏服不能休息。街道清扫工需要接受所有方面的培训，因为他们和任何人一样引人注目。\n\n## 问题背后的问题\n\nFrom: <https://sive.rs/book/QBQ>\n\n创建更好问题的准则：\n\n1. 以\"什么\"或\"如何\"开头（而不是\"为什么\"，\"何时\"或\"谁\"）。\n2. 包含\"我\"（不是\"他们\"、\"我们\"或\"您\"）。\n3. 专注于行动（例如，\"我能做什么？\n\n## 忽略所有人\n\nFrom: <https://sive.rs/book/IgnoreEverybody>\n\n- > 每个孩子都低估了自己的竞争对手，高估了自己的机会。每个孩子都是一个傻瓜，因为他们认为有一种方法可以做到这一点，而不必做实际的艰苦工作。\n\n## 发现你内心的经济学家\n\nFrom: <https://sive.rs/book/InnerEconomist>\n\n- > 蘇聯共產主義的問題不僅在於健康的激勵措施太弱，而且在於不良的激勵措施太強。对于大多数苏联人来说，过上体面生活的唯一途径就是讨好共产党。\n\n## 我们如何决定\n\nFrom: <https://sive.rs/book/HowWeDecide>\n\n- > 损失厌恶也解释了最常见的投资错误之一：投资者评估其股票投资组合最有可能出售价值增加的股票。不幸的是，这意味着他们最终会坚持贬值的股票。从长远来看，这种策略是非常愚蠢的。即使是专业的基金经理也容易受到这种偏见的影响，并且倾向于持有亏损股票的时间是获胜股票的两倍。投资者为什么要这样做？因为他害怕承受损失 - 感觉很糟糕 - 出售价值下降的股票会使损失变得有形。我们试图尽可能长时间地推迟痛苦;结果是更多的损失。\n\n## 投资者宣言 - 威廉·伯恩斯坦\n\nFrom: <https://sive.rs/book/InvestorsManifesto>\n\n- > 最近的经济和市场崩溃是一个伟大的\"可教的时刻\"，它可能代表着一代人中最好的投资机会。\n\n## The Geography of Bliss - 作者：Eric Weiner\n\nFrom: <https://sive.rs/book/GeographyOfBliss>\n\n- > 如果你可以自由地失败，你就可以自由地尝试。\n- > \"旅行\"这个词源于与\"艰辛\"相同的词根。\n  > 几个世纪以来，旅行等同于痛苦。只有朝圣者，游牧民族，士兵和傻瓜旅行。\n- > 积极心理学运动的创始人马丁·塞利格曼（Martin Seligman）发现，快乐的人在生活中记住的好事比实际发生的要多,抑郁的人准确地记住了过去。\n\n## 心态\n\nFrom: <https://sive.rs/book/Mindset>\n\n- > 爱迪生不是一个孤独的人。为了发明灯泡，他有三十名助手，包括训练有素的科学家，经常在公司资助的最先进的实验室里昼夜不停地工作！\n\n## Willpower - Roy Baumeister 和 John Tierney\n\nFrom: <https://sive.rs/book/Willpower>\n\n- > 大多数重大问题，无论是个人的还是社会的，都集中在自我控制的失败上。\n\n## Steal Like an Artist - 作者：Austin Kleon\n\nFrom: <https://sive.rs/book/StealLikeAnArtist>\n\n- > \"你在拖延时所做的工作可能是你余生应该做的工作\"——Jessica Hische\n- > 安德烈·纪德：\"所有需要说的话都已经说完了。但是，既然没有人在听，一切都必须再说一遍。\n- > 咀嚼一个思想家。研究关于那个思想家的一切。然后找到三个思想家喜欢的人，并找出关于他们的一切。尽可能多地重复此操作。尽可能地爬上树。\n- > \"我唯一能学习的艺术就是我能从中偷的东西\"——大卫·鲍伊\n- > 萨尔瓦多·达利说：\"那些不想模仿任何东西的人，什么也不生产。\n- > Maira Kalman 说：\"避免工作是集中我思想的方式。\n- > 当你把你的秘密泄露出去时，人们喜欢它。\n- > 在线关注最好的人 - 那些比你更聪明，更好的人，那些正在做真正有趣工作的人。\n- > 需要他们的回复吗？如果你真的喜欢某人的工作，你就不需要他们的回应。所以，我推荐公开的粉丝信。写一篇关于您欣赏的某人的作品的博客文章，并链接到他们的网站。回答他们提出的问题，为他们解决问题，或改进他们的工作并在线分享。\n"},{"fields":{"slug":"/awesome-rss/","title":"Awesome RSS"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome RSS\ntags:\n  - RSS\n  - Awesome\n---\n\n## Feed Tools\n\n- [feddsmage](https://www.feedsmage.com/) - I found 40 feeds in your timeline ✨ 5 are newsletters 📨 11 are slow feeds 🐌 (usually lost in the noise).\n"},{"fields":{"slug":"/awesome-rust/","title":"Awesome Rust"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Rust\ntags:\n  - Awesome\n  - Rust\n  - Learning\n---\n\nCurating awesome rust resources.\n\n## Resources\n\n- [Easy Rust](https://github.com/Dhghomon/easy_rust) - A book that let you learn rust easy, rust explained using easy English, for non-English native.\n  - [中文版](https://kumakichi.github.io/easy_rust_chs/Chapter_0.html)\n- [rustlings](https://github.com/rust-lang/rustlings/) - 🦀 Small exercises to get you used to reading and writing Rust code!\n  - [Learning Rust by Working Through the Rustlings Exercises](https://egghead.io/courses/learning-rust-by-solving-the-rustlings-exercises-a722)\n- [GitHub - Mercateo/rust-for-node-developers: An introduction to the Rust programming language for Node developers.](https://github.com/Mercateo/rust-for-node-developers)\n- [Rust by Example](https://doc.rust-lang.org/rust-by-example/index.html)\n- [rust-learning](https://github.com/ctjhoa/rust-learning) - A bunch of links to blog posts, articles, videos, etc for learning Rust\n- [rust cookbook](https://github.com/rust-lang-nursery/rust-cookbook) - This Rust Cookbook is a collection of simple Rust examples that demonstrate good practices to accomplish common programming tasks, using the crates of the Rust ecosystem.\n- [Rust Design Patterns](https://github.com/rust-unofficial/patterns) - A catalogue of Rust design patterns, anti-patterns and idioms\n- [Microsoft Rust First Class](https://docs.microsoft.com/en-us/learn/paths/rust-first-steps/)\n  - [中文版](https://docs.microsoft.com/zh-cn/learn/paths/rust-first-steps/)\n- [awesome-alternatives-in-rust](https://github.com/TaKO8Ki/awesome-alternatives-in-rust) - A curated list of replacements for existing software written in Rust\n- [Rust Language Cheat Sheet](https://cheats.rs/)\n- [Rust Latam: learn procedural macros workshop](https://github.com/dtolnay/proc-macro-workshop)\n- [Native Rust support on Cloudflare Workers](https://blog.cloudflare.com/workers-rust-sdk/)\n- [rust error handling](https://www.lpalmieri.com/posts/error-handling-rust/)\n- [actix examples](https://github.com/actix/examples)\n- [Rust 程序设计语言中文版](https://kaisery.github.io/trpl-zh-cn/)\n- [rust web framework comparison](https://github.com/flosse/rust-web-framework-comparison)\n- [半小时学习 Rust](https://fasterthanli.me/articles/a-half-hour-to-learn-rust)\n\n## Answeres\n\n- [【翻译】 Rust 中的 String 和&str](https://zhuanlan.zhihu.com/p/123278299)\n- [【翻译】细谈 Rust 的所有权](https://zhuanlan.zhihu.com/p/115651233)\n- [【译】Rust 宏：教程与示例（二）](https://zhuanlan.zhihu.com/p/356427780)\n- [如何合并 error](https://stackoverflow.com/questions/52438988/what-is-the-most-idiomatic-way-to-merge-two-error-types)\n- [rust 配置文件指南](https://blog.logrocket.com/configuration-management-in-rust-web-services/)\n- [rust mongodb redis example](https://romankudryashov.com/blog/2021/06/mongodb-redis-rust/)\n- [rust sqlx postgres custom type](https://github.com/launchbadge/sqlx/issues/1004)\n- [rust jwt example](https://blog.logrocket.com/jwt-authentication-in-rust/)\n- [tokio service 解析](https://tokio.rs/blog/2021-05-14-inventing-the-service-trait)\n  - [中文版](https://www.purewhite.io/2021/05/24/inventing-the-service-trait/)\n- [关于 rust 的常见疑问中文版](https://www.purewhite.io/2021/09/01/rust-faq/)\n- [100 行实现 rust 静态网站生成](https://github.com/skerkour/kerkour.com/tree/main/2021/rust_static_site_generator)\n\n## Communities\n\n- [Rust Reddit](https://www.reddit.com/r/rust/top/?t=year)\n\n## Tools\n\n- [cargo-generate](https://github.com/cargo-generate/cargo-generate) - cargo, make me a project\n- [wasm-pack](https://github.com/rustwasm/wasm-pack) - your favorite rust -> wasm workflow tool!\n- [gitoxide](https://github.com/Byron/gitoxide) - Git in Rust\n- [Cargo Watch](https://github.com/watchexec/cargo-watch) - Cargo watch, hot reload rust.\n- [Cargo Make](https://github.com/sagiegurari/cargo-make) - Rust task runner and build tool.\n- [roapi](https://github.com/roapi/roapi) - Create full-fledged APIs for static datasets without writing a single line of code.\n- [binserve](https://github.com/mufeedvh/binserve) - A blazingly fast static web server with routing, templating, and security in a single binary you can set up with zero code. ⚡🦀\n- [Create rust app](https://github.com/Wulf/create-rust-app)\n\n## Libraries\n\n- [bevy](https://github.com/bevyengine/bevy) - 游戏引擎\n- [tokio](https://github.com/tokio-rs/tokio) - A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language\n- [Rocket](https://github.com/SergioBenitez/Rocket) - A web framework for Rust.\n- [axum](https://github.com/tokio-rs/axum) - web framework\n- [A data-first Rust-native UI toolkit. Druid](https://github.com/linebender/druid) - A data-first Rust-native UI design toolkit.\n- [cratetorrent](https://github.com/mandreyel/cratetorrent) - A BitTorrent V1 engine library for Rust (and currently Linux) #Torrents\n- [egui](https://github.com/emilk/egui) - GUI library in Rust\n- [structopt](https://github.com/TeXitoi/structopt) - Parse command line arguments by defining a struct. It combines clap with custom derive.\n- [telegram-bot](https://github.com/telegram-rs/telegram-bot) - Rust Library for creating a Telegram Bot\n- [anyhow](https://github.com/dtolnay/anyhow) - General error handle\n- [thiserror](https://github.com/dtolnay/thiserror) - Specific error handle\n- [frankenstein](https://github.com/ayrat555/frankenstein) - telegram bot api\n- [config-rs](https://github.com/mehcode/config-rs) - Default config for rs\n- [ssr-rs](https://github.com/shakacode/ssr-rs) - rust ssr with js\n- [sycamore](https://github.com/sycamore-rs/sycamore) - A reactive library for creating web apps in Rust and WebAssembly\n- [percy](https://github.com/chinedufn/percy) - Build frontend browser apps with Rust + WebAssembly. Supports server side rendering.\n- [actix-web](https://github.com/actix/actix-web) - Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust.\n- [env-logger](https://github.com/env-logger-rs/env_logger/) - log for rust\n- [fluent-rs](https://github.com/projectfluent/fluent-rs) - rust i18n\n  - [handlebars-fluent](https://github.com/manishearth/handlebars-fluent)\n- [handlebars-rust](https://github.com/sunng87/handlebars-rust)\n  - [handlebars_misc_helpers](https://github.com/davidB/handlebars_misc_helpers)\n- [glob](https://github.com/rust-lang-nursery/glob) - Support for matching file paths against Unix shell style patterns.\n- [walkdir](https://github.com/BurntSushi/walkdir) - Rust library for walking directories recursively.\n- [askama](https://github.com/djc/askama) - type safe template engine\n- [ramhorns](https://github.com/maciejhirsz/ramhorns) - Fast Mustache template engine implementation in pure Rust.\n- [sqlx](https://github.com/launchbadge/sqlx) - 🧰 The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, SQLite, and MSSQL.\n- [couch-rs](https://github.com/mibes/couch-rs) - CouchDB library for Rust\n- [sled](https://github.com/spacejam/sled) - the champagne of beta embedded databases, redis alternatives\n- [rksuid](https://github.com/nharring/rksuid) - Rust implementation of Segment.io's ksuid, id generator.\n\n  - [sonyflake-rs](https://github.com/bahlo/sonyflake-rs) - sony flake id generator rust\n  - [ulid-rs](https://github.com/dylanhart/ulid-rs)\n\n- [diesel](https://github.com/diesel-rs/diesel) - database orm\n- [rust juniper](https://github.com/graphql-rust/juniper) - graphql in rust\n- [include_dir](https://github.com/Michael-F-Bryan/include_dir) - compile include dir files\n- [jwt-simple](https://crates.io/crates/jwt-simple)\n- [pasetors](https://github.com/brycx/pasetors)\n- [validator](https://github.com/Keats/validator)\n- [axum](https://github.com/tokio-rs/axum) - Ergonomic and modular web framework built with Tokio, Tower, and Hyper\n- [once cell](https://github.com/matklad/once_cell) - Rust library for single assignment cells and lazy statics without macros\n- [semver](https://github.com/dtolnay/semver) - Semantic versioning and version ranges for Rust\n- [derivative](https://crates.io/crates/derivative) - A set of alternative `derive` attributes for Rust\n- [bs62](https://crates.io/crates/bs62) - rust 62 radix frome number\n- [serde_with](https://docs.rs/serde_with/1.11.0/serde_with/) - serde with integligent convert\n- [dialoguer](https://github.com/mitsuhiko/dialoguer) - Rust utility library for nice command line prompts and similar things\n- [rumqtt](https://github.com/bytebeamio/rumqtt) - rust mqtt broker\n- [coreutils](https://github.com/uutils/coreutils) - linux core utils in rust\n\n## Projects\n\n- [mini-redis](https://github.com/tokio-rs/mini-redis/) - based on tokio, redis example\n- [hacker news in rust](https://github.com/ivanceras/hackernews-sauron)\n- [blade site](https://github.com/grego/bladesite) - rust static site generator, blaze fast\n- [kibou](https://github.com/Toromino/kibou) - rust mastondon\n  - https://git.cybre.club/kibouproject/kibou\n- [forustm](https://github.com/daogangtang/forustm) - rust forum\n- [rusoto](https://rusoto.github.io/rusoto/rusoto_core/) - aws sdk\n  - [aws-sign-v4](https://crates.io/crates/aws-sign-v4)\n\n## Applications\n\n- [ttyper](https://github.com/max-niederman/ttyper) - Terminal-based typing test.\n- [gobang](https://github.com/TaKO8Ki/gobang) - A cross-platform TUI database management tool written in Rust\n- [webapp.rs](https://github.com/saschagrunert/webapp.rs) - A web application completely written in Rust. real world example\n- [rust full stack](https://github.com/steadylearner/Rust-Full-Stack)\n- [canduma](https://github.com/clifinger/canduma) - A Rust Boilerplate server with GraphQL API, Diesel, PostgreSQL, session authentication and JWT\n\n## Criticism\n\n- [Why not Rust](https://matklad.github.io/2020/09/20/why-not-rust.html)\n\n## Jobs\n\n- [Rust Careers](https://rust.careers/)\n\n## Real world example\n\n- [portier](https://github.com/portier/portier-broker) Portier Broker reference implementation, written in Rust, email login.\n- [plume](https://github.com/Plume-org/Plume) - Federated blogging application, thanks to ActivityPub\n- [lemmy](https://github.com/LemmyNet/lemmy) - 🐀 Building a federated alternative to reddit in rust\n- [conduit](https://gitlab.com/famedly/conduit) - Conduit is a simple, fast and reliable chat server powered by Matrix\n- [revolt](https://github.com/revoltchat/revolt) - discord alternative\n\n## Templates\n\n- [rust cli starter](https://github.com/rust-starter/rust-starter) - rust cli template\n"},{"fields":{"slug":"/awesome-schema/","title":"Awesome Schema"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Schema\ntags:\n  - Awesome\n  - Schema\n  - JSOn\n---\n\nCuration of JSON schemas.\n\n## List\n\n- [Awesome Jsonschema](https://github.com/jviotti/awesome-jsonschema)\n\n## React\n\n- [react-schemaorg](https://github.com/google/react-schemaorg) - Type-checked Schema.org JSON-LD for React\n- [react-jsonschema-form](https://github.com/rjsf-team/react-jsonschema-form) - A React component for building Web forms from JSON Schema.\n"},{"fields":{"slug":"/awesome-selfhosted/","title":"Awesome Self-hosted"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Self-Hosted\n  - Tools\n---\n\n# Awesome Self-hosted\n\n## KOL\n\n- [calendso/calendso: The open-source Calendly alternative. (github.com)](https://github.com/calendso/calendso) - Make an appointment, connect with your calendar\n\n## Time tracking\n\n- [timetagger](https://github.com/almarklein/timetagger) - Tag your time, get the insight\n\n## Shopping\n\n- [Mpedussa](https://github.com/medusajs/medusa) - Shopify alternative #Alternative\n\n## Services\n\n- [LibreTranslate](https://github.com/LibreTranslate/LibreTranslate) - Free and Open Source Machine Translation API. 100% self-hosted, no limits, no ties to proprietary translation services.\n\n## Medias\n\n- [RapidBay](https://github.com/hauxir/rapidbay) - Self-hosted torrent video streaming service compatible with Chromecast and AppleTV deployable in the cloud\n\n## PAAS\n\n- [cloudron](https://www.cloudron.io/index.html)\n- [sandstorm](https://sandstorm.io/)\n- [freedombox](https://freedombox.org/)\n\n## Federation\n\n- [Mobilizon](https://joinmobilizon.org/en/) - Mobilizon is a tool that helps you find, create and organize events.\n- [Orbit](https://github.com/orbitdb/orbit) - A distributed, serverless, peer-to-peer chat application on IPFS.\n- [Iris](https://github.com/irislib/iris-messenger) - Decentralized messenger\n- [Twt.social](https://twt.social/) - Twt.social is a new Social Media platform\n\n## Old school\n\n- [gemini](https://gemini.circumlunar.space/) - Gemini is a new internet protocol which: Is heavier than gopher, Is lighter than the web, Will not replace either, Strives for maximum power to weight ratio, Takes user privacy very seriously\n\n## Livestreaming\n\n- [Lightspeed](https://github.com/GRVYDEV/Project-Lightspeed) - A self contained OBS -> FTL -> WebRTC live streaming server. Comprised of 3 parts once configured anyone can achieve sub-second OBS to the browser livestreaming\n\n## Admin\n\n- [ToolJet](https://github.com/ToolJet/ToolJet/) - ToolJet is an open-source low-code platform for building and deploying internal tools with minimal engineering efforts 🚀\n\n## Chat\n\n- [mattermost](https://github.com/mattermost/mattermost-server) - Mattermost is an open source platform for secure collaboration across the entire software development lifecycle.\n- [conduit](https://gitlab.com/famedly/conduit) - Conduit is a simple, fast and reliable chat server powered by Matrix\n\n## Deploy\n\n- [Webhook](https://github.com/adnanh/webhook) - webhook is a lightweight incoming webhook server to run shell commands\n\n## Music\n\n- [music server in rust](https://github.com/izderadicka/audioserve)\n"},{"fields":{"slug":"/awesome-semantic/","title":"Awesome Semantic"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Semantic\ntags:\n  - Awesome\n  - Semantic\n---\n\nCuration of semantic things.\n\n## List\n\n- [Classless CSS](https://github.com/dbohdan/classless-css) - A list of Classless CSS frameworks.\n  - [Marx](https://mblode.github.io/marx/documentation/)\n  - [Tufte](https://github.com/edwardtufte/tufte-css)\n\n## Git\n\n- [Git Semantic Commit Messages](https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716)\n\n## CSS\n\n- [picocss](https://picocss.com/) - Minimal CSS Framework for semantic HTML\n"},{"fields":{"slug":"/awesome-seo/","title":"Awesome SEO Tools"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome SEO Tools\ntags:\n  - SEO\n  - Awesome\n  - Tools\n---\n\n## Tools\n\n- [Twitter Card Validator](https://cards-dev.twitter.com/validator)\n"},{"fields":{"slug":"/awesome-service/","title":"Awesome Services"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Services\ntags:\n  - Awesome\n  - Service\n---\n\nCurating awesome services.\n\n## Monitors\n\n- [Little Warden](https://littlewarden.com) - Monitor your websides for things like expires, ssl error. £24.99/Month\n\n## Matches\n\n- [diggz](https://www.diggz.co/) - Find Roommates & Rooms today.\n\n## Inbox\n\n- [Crono](https://crono.app/) - Get mobile notifications and SMS on desktop\n\n## Enviroments\n\n- [digitalhumani](https://digitalhumani.com/) A platform which easily integrates with your products to reforest the planet\n\n## Life\n\n- [Wedding Planning ](https://planning.wedding/) - Online Wedding Planning Assistant\n- [boss as a service](https://bossasaservice.life/) - We make sure you achieve your goals\n\n## Applications\n\n- [make passport photo](https://makepassportphoto.com/?utm_campaign) - Get your biometric Passport/Visa/ID photos in minutes, #Photos #Print\n\n## APIs\n\n- [API LIST](https://apilist.fun/)\n\n## Sample\n\n- [Bad SSL](https://badssl.com/)\n\n## Pets\n\n- [Rover](https://www.rover.com/uk/) - The world’s largest network of 5‑star pet sitters and dog walkers.\n- [dog spot](https://hellodogspot.com/) - A DogSpot is a smart sidewalk sanctuary, providing your dog a safe and cozy home away from home while you briefly go somewhere they aren't allowed. With DogSpot, you don't have to choose between adventures and spending time with your dog. You have the freedom to live your life with your dog... without having to take risks like tying them up or leaving them in the car.\n\n## Resume/Profile\n\n- [read cv](https://read.cv/)\n\n## News\n\n- [Their news](https://www.their.news/) - left or right news\n\n## Image process\n\n- [screen stab](https://www.screenstab.com/editor/) - convert image to a more seo mode.\n- [robohash](https://github.com/e1ven/Robohash) - generate image by any text\n\n## Code in Cloud\n\n- [never install](https://neverinstall.com/)\n"},{"fields":{"slug":"/awesome-socials/","title":"收集有意思的社交应用"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntags:\n  - Social\n  - Awesome\n---\n\n# 收集有意思的社交应用\n\n## 文字交友\n\n- [SLOWLY](https://slowly.app/en/) - SLOWLY 让你从你的智能手机上认识笔友！按照距离远近，和不同的人发信有不同的发送时间，有的高达 10 多个小时才能发出去。与有共同爱好的人配对，写信并收集来自世界各地的邮票。说出你的想法--一次一封信!\n- [Addchat](https://apps.apple.com/us/app/addchat-random-chat/id1464989529) - Make Random Friends and Chat !\n\n## Location based\n\n- [Zown](http://www.zown.co) - Zown 让你看到离你超级近的人（半径 500 米内）。\n  一旦你与某人建立联系，它只给你 15 分钟的聊天时间，所以它迫使你在现实生活中与对方见面以保持联系。\n\n## 视频对话\n\n- [Superpeer](https://superpeer.com/) - Host cohort-based courses, live events, or 1:1 sessions, an all-in-one video platform that gives you the tools you need to engage with your audience through video, and connect in a more authentic way.\n  - [Awesome Peers](https://awesomepeers.com/) - A list includes 900+ free peers\n\n## 协作社交\n\n- [WT.social](https://wt.social/) - 维基百科式的社交网络，所有都可以协作编辑所有人的帖子。\n\n## 图片\n\n- [pixelfled](https://pixelfed.org)\n- [deviantart](https://www.deviantart.com/) - 艺术家社区\n\n## 语音交流\n\n- [Dialup](https://dialup.com/) - 偶然的声音聊天。\n\n## 匿名\n\n- [Turtle - Chat Anonymously ](https://apps.apple.com/us/app/turtle-chat-anonymously/id1313518475) - Turtle is an app that lets you message people and remain anonymous for three days. After three days, the other person will be able to see who you are. In an essence, it’s almost like meeting someone with a blindfold on. There is no room for implicit bias. The first impressions will be based off character, instead of appearance or status.\n\n## 约会\n\n- [bumble](https://bumble.com/zh/) - 女性友好\n- [vina](https://www.heyvina.com/) - 女性交友社区\n\n## All in one chat\n\n- [beeper](https://www.beeper.com/?hn) - 真正的 all in one 聊天，整合 15 个 app 的聊天，降维打击啊这是。\n\n## 复古\n\n- [spacehey](https://spacehey.com/home) - 重制了 mysapce，令人感慨那个年代的互联网的纯真\n\n## 本地\n\n- [纽约社交网络](https://newyorksocialnetwork.com/)\n"},{"fields":{"slug":"/awesome-speed/","title":"Awesome Speed"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: Awesome Speed\ntags:\n  - Awesome\n  - Speed\n  - Netwok\n---\n\n## Speed Test\n\n- [CSR](https://hostcsr.com/speedtest.html) - CSR 测速，有不少家的主机可以在线测试速度\n"},{"fields":{"slug":"/awesome-standards/","title":"有意思的协议收集"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 有意思的协议收集\ntags:\n  - Awesome\n  - Protocol\n  - Standard\n---\n\n收集一些协议：\n\n- [Business.txt](https://github.com/fesja/businesstxt) - 商家信息 txt，就像 robots.txt 但是是为商家\n\n  ```plain\n  Name: RJ Grunts\n  Categories: American Restaurant, Bar\n  Street: 2056 North Lincoln Park W (at Dickens Ave.)\n  Zip: 60614\n  City: Chicago\n  State: Illinois\n  Country: United States\n  Coordinates: 41.92012, -87.63645\n  Phone: (1) 773-929-5363\n  Price range: $$\n  Price description: $9.95 burger, $11.95 salad and soup bar. You can eat for $10-20.\n  Open: Mon-Fri 11.30am-12am, Sat 10am-12am, Sun 10am-9pm\n  Short description: Great place to have a great burger and salad bar\n\n  Website: http://www.rjgruntschicago.com/\n  Twitter: RJGruntsChicago\n  Facebook: http://www.facebook.com/rjgrunts\n  Foursquare: https://foursquare.com/v/rj-grunts/42153000f964a5208c1f1fe3\n  Google: https://plus.google.com/108935673850120788149/about?hl=en\n  Yelp: http://www.yelp.com/biz/rj-grunts-chicago\n  Urbanspoon: http://www.urbanspoon.com/r/2/15875/restaurant/Lincoln-Park/R-J-Grunts-Chicago\n  Foodspotting: http://www.foodspotting.com/places/186358-r-j-grunts-chicago\n  TouristEye: http://www.touristeye.com/RJ-Grunts-Chicago-p-2127\n  ```\n"},{"fields":{"slug":"/awesome-startups/","title":"Awesome Startups"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Startups\n  - Tools\n---\n\n# Awesome Startups\n\n## Prelaunch\n\n- [Waiting list](https://waitinglist.app/) - Build your audience before you launch, #API\n- [Startup Checklist](https://www.defmacro.org/2019/03/26/startup-checklist.html)\n  - [HN link](https://news.ycombinator.com/item?id=20254057)\n- [Gumroad](https://app.gumroad.com/) - 在线销售数字产品\n\n## Publish\n\n- [betalist](https://betalist.com/) - Discover tomorrow's startups, today.\n- [ProductHunt](https://www.producthunt.com/)\n- [Hacknew Show](https://news.ycombinator.com/show)\n- [Side Project Reddit](https://www.reddit.com/r/SideProject/)\n- [productlift](https://productlift.ai/) - ProductLift helps you find relevant communities and influencers so you can:\n- [280+ Websites To Share Your Startup / Public](https://airtable.com/shrwqaak73gy83w9A/tblu5RcUft9fYp9Ju/viwFHmIyMniXzlpK4?blocks=show)\n- [The best places to post your startup. Twitter Thread](https://twitter.com/jakeprins_nl/status/1293243281556594690?s=21)\n\n## Cooperation\n\n- [Circlebatch](https://circlebatch.com/) - Circlebatch is a collaborative community to practice skills and work on projects with others\n\n## Market\n\n- [Free Article Publishing](https://liquidary.com/freearticle/) - Get free press coverage for your project or startup\n- [Microacquire](https://microacquire.com/buyers/) - Sell your company online, Sell your startup within 30 days. Anonymous listings. No fees.\n- [promote your next startup](https://github.com/trekhleb/promote-your-next-startup) - 🚀 Free resources you may use to promote your next startup\n- [My Side Project rocks](https://mysideproject.rocks/)\n\n## Sharing\n\n- [#buildinpublic](https://buildinpublic.com/) - Share your process at Twitter with #buildinpublic\n\n## Tools\n\n- [AppLaunchpad - (1000) Best Free Mockup Generator (theapplaunchpad.com)](https://theapplaunchpad.com/mockup-generator/) - Screen Shot Generator\n- [Twitter Analytics](https://www.twitonomy.com/)\n\n## Investing\n\n- [Micro investment](https://www.micro-invest.io/) - Micro investment for solo founders\n- [Maker Fellow Ship](https://www.makerfellowship.com/) - We offer $500 grant to indie makers to ship something useful within four weeks.\n\n## Ideas\n\n- [110+ Actionable tasks to get from Zero to $$$](https://www.notion.so/110-Actionable-tasks-to-get-from-Zero-to-2a28bd237e964f75a8f4cf8fcd8182c5)\n\n## Legel\n\n- [avodocs](https://www.avodocs.com/) - Free legal documents for startups\n\n## Communities\n\n- [Get Maker Log](https://getmakerlog.com/) - How makers stay productive\n"},{"fields":{"slug":"/awesome-static-site-generator/","title":"Awesome Static Site Generator"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Static-Site-Generator\n---\n\n# Awesome Static Site Generator\n\n## List\n\n- [Eleventy](https://www.11ty.dev/docs/getting-started/)\n- [Gatsby](https://www.gatsbyjs.com/docs/tutorial/)\n- [Docusaurus](https://docusaurus.io/)\n- [blade site](https://github.com/grego/bladesite) - rust generator, blaze fast\n\n## Starter\n\n- [GitHub - stefanfrede/11st-starter-kit: 11ty, powered by Snowpack with Tailwind CSS and Alpine.js.](https://github.com/stefanfrede/11st-starter-kit)\n\n## Comments\n\n- [Static Man](https://github.com/eduardoboucas/staticman) - 💪 User-generated content for Git-powered websites, comment save to repo.\n\n## Marddown Tools\n\n- [xdm](https://github.com/wooorm/xdm) - Just a _really_ good MDX compiler. No runtime. With esbuild, Rollup, and webpack plugins\n"},{"fields":{"slug":"/awesome-swift/","title":"Awesome Swift"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Swift\ntags:\n  - Awesome\n  - Swift\n---\n\nCurating Swift resources.\n\n## Resource\n\n- [Swift Ebook in Chinese](https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese)\n- [Awesome-Swift-Playgrounds](https://github.com/uraimo/Awesome-Swift-Playgrounds)\n"},{"fields":{"slug":"/awesome-tech-anwser/","title":"收集一些有用的技术/环境问题的解决方案"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集一些有用的技术/环境问题的解决方案\ntags:\n  - Awesome\n  - FAQ\n  - Tech\n  - Serverless\n---\n\n收集一些有用的技术/环境问题的解决方案。\n\n## Serverless\n\n- [阿里云函数计算 php 环境如何自定义内置扩展，覆盖系统自带扩展](https://developer.aliyun.com/article/645670?spm=5176.smartservice_service_chat.0.0.6a33709aQ2zFPh)\n"},{"fields":{"slug":"/awesome-templates/","title":"Awesome Templates"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Templates\ntags:\n  - Awesome\n  - Templates\n---\n\nCurating awesome templates for projects.\n\n## SAAS\n\n- [utlimate-saas-js](https://github.com/gmpetrov/utlimate-saas-js) - Ultimate SAAS template Typescript/Next.js/NextAuth.js/Prisma/Stripe/Tailwindcss/Postgresql , Stop loosing time implementing authentication and payment over and over again. Focus on what brings value to your customers\n\n## Template Engine\n\n- [mustache](https://github.com/mustache/mustache) - Logic-less templates.\n  - [rust-mustache](https://github.com/nickel-org/rust-mustache)\n- [handlebars](https://github.com/handlebars-lang/handlebars.js#)\n  - [handlebars-rust](https://github.com/sunng87/handlebars-rust)\n\n## Boilerplate\n\n- [makenew](https://github.com/makenew/) - Tested project skeletons to instantly bootstrap and reliably maintain your next project.\n- [html boilerplate](https://www.matuzo.at/blog/html-boilerplate/)\n\n## Landing page\n\n- [react-saas](https://github.com/dunky11/react-saas-template)\n- [tailwind langding page](https://github.com/cruip/tailwind-landing-page-template)\n- [mobile app](https://github.com/sandoche/Mobile-app-landingpage-template)\n\n## Docuemnts Templates\n\n- [Document template](https://github.com/kbariotis/templatesf) - A set of standard document templates.\n"},{"fields":{"slug":"/awesome-tools/","title":"最好用的工具集合"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 最好用的工具集合\nlanguage: zh\ntags:\n  - Awesome\n  - Tools\n  - 中文\n---\n\n## 打字\n\n- [Code Typing Script](https://codingspeedtest.com) - 用代码测试你的打字速度，可以选语言比如 js,go\n- [用小说内容来练习打字](https://www.typelit.io/)\n\n## 公众号 RSS\n\n- [Feedadd](https://feeddd.org/) - 众包的形式运行爬虫机器人，上传数据\n\n## 测试，命理\n\n- [八字，命理测试](http://www.freehoro.net/FreeHoro/index.php)\n\n## 追贼\n\n- [I Know what your download](https://iknowwhatyoudownload.com/) - 我知道你下载了什么，追踪 ip 的下载列表，有点可怕。。\n\n## 转换\n\n- [百度文库转 word 或 pdf](http://www.html22.com/zh/) - 有瑕疵，勉强能用。\n- [微友活码](https://www.huomaqun.com/) - 用微友活码生成的营销二维码，具有不受个人号加人数量限制，不受扫码进群百人限制，群二维码过期灵活更新，扫码数据实时统计等优点，是个人号、微群及企业微信私域流量沉淀，营销引流必备的免费工具！\n\n## Server\n\n- [Nginx Playground](https://nginx-playground.wizardzines.com/) - 在线调试 nginx 服务器\n\n## Developmenets\n\n- [cosmopolitan - build-once run-anywhere c library](https://github.com/jart/cosmopolitan) - 编译生成单一的可执行文件的服务器\n- [try it online](https://tio.run/#) - 在线运行几百种变成语言\n- [Docker Run](https://github.com/glotcode/docker-run) - 使用 docker 来运行不信任的代码，运行后删除\n\n## Stocks\n\n- [GamestonkTerminal](https://github.com/GamestonkTerminal/GamestonkTerminal) - Investment Research for Everyone. python 写的投资情绪等分析。\n\n## Wifi\n\n- [Wificard](https://wificard.io/) - print wifi info to card\n\n## 图片生成\n\n- [漂亮的代码截图生成](https://ray.so/)\n  - [代码截图生成的 API](https://sourcecodeshots.com/language/js/theme/dark-plus)\n- [另一个代码截图生成器](https://carbon.now.sh/)\n- [52 斗图](https://www.52doutu.cn/) - 表情包在线生成\n- [rust 生成线条图片](https://github.com/lf94/img2utf)\n\n## URL 缩短器\n\n- [利用 github Issues 缩短网址](https://github.com/nelsontky/gh-pages-url-shortener)\n\n## 图片裁剪\n\n- [photo 16x9](https://photo16x9.com/) - 填充背景色以使得图片满足 16:9 的推特比例\n\n## 背景音乐，白噪音\n\n- [Lofi 咖啡](https://www.lofi.cafe/)\n- [BBC 6 音乐电台](http://radio.garden/listen/bbc-radio-6-music/sPUw6n5C)\n\n## RSS\n\n- [Hacker News to Kindle](https://hntokindle.com/)\n\n## 付费调查\n\n- [Surveys](https://eurekasurveys.com/)\n\n## Low Code website\n\n- [Sheet2site](https://www.sheet2site.com/) - google sheet to site\n\n## Workflows\n\n- [Patchbay](https://patchbay.pub/) - 穷人版 ifttt\n\n## 子域名\n\n- [免费的子域名，一个 get 请求即可生成](https://takingnames.io/blog/instant-subdomains)\n\n## 音频\n\n- [最快速的音频聊天/在线分享服务 farplay](https://farplay.io/)\n  - [好吧，他们说这个可能更快，jamulus](https://jamulus.io/)\n\n## Kindle\n\n- [Hacker News to Kindle](https://github.com/abishekmuthian/hntoebook)\n\n## 文件\n\n- [在线把本地文件夹作为一个 http 服务器](https://github.com/EtherDream/http-server-online)\n\n## Commands\n\n- [cmd 有趣在线挑战](https://cmdchallenge.com/)\n\n## Tools\n\n- [Json for matter, 友好的在线 json 格式化网站](https://jsonformatter.com/)\n\n## 视频\n\n- [爆米花种子播放器，边下边播](https://github.com/popcorn-official/popcorn-desktop)\n\n## Other\n\n- [Newsletter to RSS](https://github.com/leafac/kill-the-newsletter)\n\n## 爬虫\n\n- [secret-agent](https://github.com/ulixee/secret-agent) - 专为爬虫而生的 nodejs 仿浏览器爬虫\n\n## 编程\n\n- [Glitch](https://glitch.com/) - 在浏览器中快速开始一个新项目并运行它，有很多最佳实践的模版，很适合开始尝试某个项目。\n\n## 付费墙\n\n- [12ft](https://12ft.io/) - 绕过付费墙\n"},{"fields":{"slug":"/awesome-tv-quotes/","title":"划线的电视剧截图"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 划线的电视剧截图\ntags:\n  - TV\n  - Quotes\n  - 中文\n---\n\n1. ![他们不知道该怎么做，需要你来告诉他们](attachments/the-morning-show-screenshot-1.jpg)\n\n> -- 《早间新闻》S01E09\n\n2. ![一个穷人什么时候有时间发疯啊](attachments/Man.Of.La.Mancha.1972-quote1.jpg)\n\n> -- 《梦幻骑士》1972\n\n3. > 如果人们不知道你在做什么，那么他们就不知道你做错了什么。 -- 《是，大臣》S01E01\n\n4. ![](attachments/life-truth.jpg) ![](attachments/life-truth-2.png)\n\n> 事实证明，生活就是一系列令人失望的事，它们间隔的时间刚刚够让下一次失望令人大吃一惊。 -- 《早间新闻》S02E02\n"},{"fields":{"slug":"/awesome-tv-shows/","title":"值得观看的电视剧"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 值得观看的电视剧\ntags:\n  - Awesome\n  - TV\n  - List\n  - 中文\n---\n\n## Answers\n\n- [哪些美剧可以称为「神作」？ - 知乎](https://www.zhihu.com/question/22398342)\n\n## List\n"},{"fields":{"slug":"/awesome-ui/","title":"Awesome UI"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - UI\n  - Front-End\n---\n\n# Awesome UI\n\nCurating awesome UI tools, resources.\n\n## Articles\n\n- [Web Design in 4 minutes](https://jgthms.com/web-design-in-4-minutes/)\n\n## Tools\n\n- [RGB to hex, hsl convert tool by Google](https://www.google.com/search?q=rgb+to+hex&oq=rgb+to+hex&aqs=edge.0.0i433i512l4j0i512l2j69i65.2649j0j1&sourceid=chrome&ie=UTF-8)\n- [screely](https://www.screely.com) - Instantly Turn a Screenshot into a Browser Mockup\n- [Logo generator](https://formito.com/tools/favicon) - generate logo like stripe or hacker news\n\n## Command Tools\n\n- [Bootstrap npm starter](https://github.com/twbs/bootstrap-npm-starter)\n\n## Free Resources\n\n- [Open source illustrations kit](https://illlustrations.co/) - Free illustrations images resource, #Free #Image #UI\n- [placeholder avatar](https://pravatar.cc/)\n- [开源 emoji 库](https://openmoji.org/)\n\n## Demos\n\n- [体验 3D 互动 30 个使用 WebGL 技术的优秀网页设计案例](https://www.shejidaren.com/30-best-webgl-demo-examples.html)\n\n## CSS 框架\n\n- [bulma](https://github.com/jgthms/bulma)\n- [tailwindcss](https://github.com/tailwindlabs/tailwindcss)\n  - [headwind](https://github.com/heybourn/headwind) vscode extension for sort class name\n  - [tailwindcss-forms](https://github.com/tailwindlabs/tailwindcss-forms)\n  - [daisy ui](https://daisyui.com/)\n  - [track awesome tailwind](https://www.trackawesomelist.com/aniftyco/awesome-tailwindcss/readme#ui-libraries-components--templates)\n  - [kutty ui](https://kutty.netlify.app/docs/)\n  - [tailwind landing page](https://github.com/cruip/tailwind-landing-page-template)\n- [milligram](https://github.com/milligram/milligram) - 极简主义 css\n- [headlessui](https://github.com/tailwindlabs/headlessui)\n- [](https://github.com/picocss/pico) - 语义化的 CSS 框架，极简\n\n## CSS Tools\n\n- [theme-change](https://github.com/saadeghi/theme-change) - Change CSS theme with toggle, buttons or select using CSS custom properties and localStorage\n\n## Realworld inspiration\n\n- [remotestories](https://www.remotestories.com)\n\n## Themes\n\n- [bootstrap themes](https://github.com/thomaspark/bootswatch/)\n"},{"fields":{"slug":"/awesome-websites/","title":"收集一些好玩的网站"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集一些好玩的网站\nlanguage: zh\ntags:\n  - Awesome\n  - Tools\n  - 中文\n---\n\n## 列表\n\n- [异想天开网站俱乐部](https://whimsical.club/) - 收集了奇奇怪怪的网站\n\n## 发现类\n\n- [Reddit 小组趋势](https://subredditstats.com/) 在这可以发现很多有意思的 Reddit 小组，有各种维度的排序\n- [Your Stack 你的工具栈](https://yourstack.com/) 分享自己使用的产品，在这可以发现不少好用的东西，App\n- [Hacker News 黑客新闻](https://news.ycombinator.com/news) 著名的 HN，很多互联网用户的聚集地，上面的新闻还有讨论大多数是技术相关，也有少数社会新闻，当你有新产品要冷启动的时候，里面的子版块 Show HN 很适合去宣传，当然也有可能收到评论里的不看好。\n- [Hacker News 热门](https://hn.buzzing.cc/) 这是我做的一款抓取 Hacker News 的热门条目，然后用 Deepl 翻译标题和简介，帮助英文不是特别的非母语者做中文导读的站点，对我自己英文提升帮助很大，因为更容易找到感兴趣的文章，然后才点进去详读\n\n## 有意思\n\n- [我今天的上网体验](https://how-i-experience-web-today.com/) - 嘲讽的网站，展示了 21 世纪的今天，是如何被网站强奸眼睛的。\n- [stumbled](https://stumbled.cc/stumble) - 随机发现有意思的网站\n- [哪个艺术品更贵](https://expensivetaste.art/)\n- [ipod 复古界面听音乐](https://tannerv.com/ipod/)\n- [Gif.so](https://welcome.gif.so/) - 随便填个子域名，他会返回一个对应的表情包\n- [their news](https://www.their.news/) - 左派/右派新闻对比\n- [从图片/PDF 中提取表格](https://extract-table.com/)\n- [youtube 上的教程分类集合](ytt-tech.com)\n- [摄像头捕捉变成复选框动画](https://www.bryanbraun.com/checkboxland/docs/demos/webcam-test/)\n  - [源代码库](https://github.com/bryanbraun/checkboxland)\n- [将网站的 console 控制台变成聊天室](https://www.consolechat.io/)\n- [生成一次性秘密用一次性 url](https://github.com/sniptt-official/ots)\n- [收集有意思的网站到一个个清单](https://bunklist.com/)\n- [和老人聊天并获得报酬](https://silverdial.org/)\n- [欧拉项目](https://projecteuler.net/) - 对数学/计算机问题感兴趣的人的问题库，注册后可以去解决各种各样有意思的数学问题\n- [给你这个年纪提的建议](https://heyfromthefuture.com/age/)\n- [百万美元广告项目的区块链版本](https://thousandetherhomepage.com/)\n- [在线和朋友玩游戏/扑克/看视频等等/不登录也可以](https://kosmi.io/)\n- [一个完全由机器人提交和回复的 Reddit 小组，使用 GPT2 引擎](https://www.reddit.com/r/SubSimulatorGPT2/)\n  - [另一个类似的小组，使用 markov chains](https://www.reddit.com/r/SubredditSimulator/)\n- [人们希望在你这个年纪拥有的建议](https://heyfromthefuture.com/age/)\n- [Thoughter](https://aytwit.com/thoughter) - 电子邮件漂流瓶，match\n- [Webring](https://github.com/maxboeck/webring) - web 环，圈子内独立网站随机推荐，互相推荐\n- [GT3 生成的播客](https://anchor.fm/deepdreams)\n- [古人活在现在的样子](https://mossandfog.com/artist-imagines-what-famous-historical-figures-would-look-like-today/)\n- [paulgraham 的博客故意把列宽设置为一个很小的值，称之为人类最佳阅读宽度](http://www.paulgraham.com/)\n- [长期赌注](https://longbets.org/bets/)\n  - [巴菲特 2008 年赌标普 500 未来 10 年收益率超过对冲基金，赢](https://longbets.org/362/)\n- [2017:未来 4 年内某个生物袭击事件将导致 100 万人丧生](https://longbets.org/9/)\n- [Dwitter javascript 社交，像推特一样，140 字符限制，写一些有意思的 javascript 代码](https://beta.dwitter.net/)\n  - [Source Code](https://github.com/lionleaf/dwitter)\n- [awesome lite website](https://github.com/mdibaiee/awesome-lite-websites) - 轻量级网站汇总\n"},{"fields":{"slug":"/awesome-what-was-your-moment/","title":"Awesome What Was Your Moment"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome What Was Your Moment\ntags:\n  - Awesome\n---\n\nCurating what was your xxx moment.\n\n## List\n\n- [What was your \"Shit I'm getting old\" moment ? : AskReddit](https://www.reddit.com/r/AskReddit/comments/phs99j/what_was_your_shit_im_getting_old_moment/)\n"},{"fields":{"slug":"/awesome-wikipedia/","title":"收录一些有意思的维基百科"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收录一些有意思的维基百科\ntags:\n  - Wikipedia\n---\n\n收集维基百科链接：\n\n- [改造学](<https://en.wikipedia.org/wiki/Rehabilitation_(penology)>) - 挪威的监狱系统以正常化原则为基础，不再进行报复，而是注重改造。[3]囚犯可以使用他们在监狱外的设施，例如专用迷你冰箱，平板电视，私人浴室和户外环境。\n- [Webring](https://en.wikipedia.org/wiki/Webring) - Webring（或 Web 环）是以圆形结构链接在一起的网站的集合，通常围绕特定主题进行组织，通常是教育或社交。[1]它们在 1990 年代和 2000 年代初很受欢迎，特别是在业余网站中。要成为 Webring 的一部分，每个站点都有一个共同的导航栏;它包含指向上一个站点和下一个站点的链接。通过重复选择下一个（或上一个），用户最终将到达他们开始的站点;这就是术语 Webring 的起源。\n"},{"fields":{"slug":"/awesome-windows/","title":"收集Windows上好玩，好用的东西"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 收集Windows上好玩，好用的东西\ntags:\n  - Windows\n  - Awesome\n  - Tools\n  - Development-Environment\n  - 中文\n---\n\n## 开发环境\n\n- [在 Windows 上用 WSL 优雅开发](https://dowww.spencerwoo.com/) - 可能是市面上最详尽的中文 WSL 开发环境配置指南 的文档现场，本章我们将对 WSL 本身、WSL 近期更新和 WSL 的优越特性进行简单介绍，带领你熟悉利用 WSL 在 Windows 上面开发学习的基础知识。\n"},{"fields":{"slug":"/awesome-workflows/","title":"Awesome workflows"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome workflows\ntags:\n  - Awesome\n  - Workflows\n---\n\nCurating workflows.\n\n## Product\n\n- [Tara](https://tara.ai/) - Git ship done Define, plan & track mission-critical product updates, in one place.\n\n## Configure as Server\n\n- [Daptin](https://github.com/daptin/daptin) - Daptin - Backend As A Service - GraphQL/JSON-API Headless CMS\n- [Denoflow](https://github.com/denoflow/denoflow) - Configuration as Code, use YAML to write automated workflows that run on Deno, with any Deno modules, Typescript/Javascript codes\n\n## Bash as Workflows\n\n- [Patchbay](https://patchbay.pub/) - Poor man ifttt\n"},{"fields":{"slug":"/bash-tips/","title":"Bash Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Bash Tips\ntags:\n  - Bash\n  - Tips\n---\n\nCurating bash Tips\n\n## Get bash script parent dir absolute path\n\n```bash\nworkspace=\"$( cd -- \"$( dirname -- \"${BASH_SOURCE[0]}\" )/../\" &> /dev/null && pwd )\"\n```\n\n## Get bash script dir path\n\n```bash\nworkspace=\"$( cd -- \"$( dirname -- \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"\n```\n\n## Bash Dotenv\n\n> 导出.env 文件到当前执行环境\n\n```bash\nset -o allexport; source .env; set +o allexport\n```\n"},{"fields":{"slug":"/basic-language/","title":"出国，这几句话必须学会用当地语言怎么说"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 出国，这几句话必须学会用当地语言怎么说\ntags:\n  - Language\n---\n\n1. 你好\n\n- Hello\n\n2. 再见\n\n- Goodbye\n\n3. 请\n\n- Please\n\n4. 谢谢\n\n- Thank you\n\n5. 我\n\n- Me\n\n6. 你\n\n- You\n\n7. 他/她\n\n- Him/her\n\n8. 这个\n\n- This\n\n9. 那个\n\n- That\n\n10. 这儿\n\n- Here\n\n11. 那儿\n\n- There\n\n12. 你有这个吗？\n\n- Do you have this?\n\n13. 这个在哪里？\n\n- Where is this?\n\n14. 那个多少钱？\n\n- How much money is that?\n\n15. 洗手间在哪里？\n\n- Where is the toilet?\n\n16. 数字\n\n- Zero, one, two, three, four, five, six, seven, eight, nine, ten\n\n17. 好的\n\n- Ok, Yes\n\n18. 不\n\n- No\n\n19. 对不起，我不明白\n\n- Sorry, I don't understand.\n\n20. 我可以坐这里吗？\n\n- May I sit here?\n\n21. 这很好吃\n\n- This is so delicious!\n\n22. 这是什么？\n\n- What is this?\n\n23. 这个东西用你的语言怎么说？\n\n- How do you say {English word} in {your language}, please?\n"},{"fields":{"slug":"/bazarr-setup/","title":"Bazarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Subtitles\n  - Setup\n  - Self-Hosted\n---\n\n# Bazarr Setup\n\n## Install\n\nSee also [here](https://wiki.bazarr.media/Getting-Started/Installation/Linux/linux/)\n\n```bash\nsudo apt-get install python3-pip python3-distutils -y\nwget https://github.com/morpheus65535/bazarr/releases/latest/download/bazarr.zip\nunzip bazarr.zip -d ~/bazarr\ncd bazarr\npython3 -m pip install -r requirements.txt\n```\n\n### Setup as system service\n\nReference at [here](https://wiki.bazarr.media/Getting-Started/Autostart/Linux/linux/)\n\nYou have to create a `bazarr.service` file in `/etc/systemd/system` that would contain the following text:\n\n```bash\nsudo vim /etc/systemd/system/bazarr.service\n```\n\n```bash\n[Unit]\nDescription=Bazarr Daemon\nAfter=syslog.target network.target\n\n# After=syslog.target network.target sonarr.service radarr.service\n\n[Service]\nWorkingDirectory=/home/green/bazarr/\nUser=green\nGroup=admin\nUMask=0002\nRestart=on-failure\nRestartSec=5\nType=simple\nExecStart=/usr/bin/python3 /home/green/bazarr/bazarr.py\nKillSignal=SIGINT\nTimeoutStopSec=20\nSyslogIdentifier=bazarr\nExecStartPre=/bin/sleep 30\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now bazarr\nsudo systemctl status bazarr\nsudo systemctl restart bazarr\n\n```\n\n## Configure\n\nYou can set your password at the UI.\n\n### Sonarr\n\nEnabled, See [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#sonarr)\n\n### Provider\n\nAdd Zimuku, assrt, Opensubtitle\n\n### Language\n\nSee [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#languages)\n\nAdd default settings, see [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#default-settings)\n"},{"fields":{"slug":"/books-2022/","title":"2022年读书笔记"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 2022年读书笔记\ntags:\n  - Books\n  - Notes\n  - 中文\n---\n\n收录 2022 年读书笔记。Also see [[books]]\n\n## 列表\n\n- [ ] 《印尼 ETC》,伊丽莎白·皮萨尼,\n  - 若干年前，雅加达市政府决心改善市区主干道拥堵情况，规定高峰时间每辆车至少须乘坐三人才能上路，结果是上有政策、下有对策，脑筋动得快的居民再度想出应变之道。几天之内，许多道路支线上，经常可见失业者自告奋勇钻进有钱人家的空调车，充当额外乘客。\n  - 大家一致认为公务员都是既懒惰又自私的蠢蛋，满脑子只想填满自己的口袋，处处为难诚实老百姓，可是他们却依然希望子女当公务员\n- [x] 《使女的故事》，玛格丽特·阿特伍德, 我太爱女性作家写的书了，我本身天性并不敏感，所以很多书里的心理描写都会让我想快速阅读过去，但是女性作家的文笔写出来的心理描写，特别的能让人共情，那种娓娓道来的感觉，特别的吸引读者阅读。原著确实比电视剧带给人更多的信息，之前曾经 3 次尝试看使女的故事的电视剧版，但是每次都有点摸不着头脑，看完原著后再去看剧，一切都 make sense 了。\n\n  - 别让那些杂种骑在你头上。\n  - 但到你们下一代就容易多了。她们会心甘情愿接受自己的职责。 她没有说：因为没有记忆，没有任何其他生活方式的记忆。\n  - 迷宫里的老鼠只要呆在迷宫里，是可以由它四处乱跑的。\n  - 人们无法控制情感，莫伊拉曾经说，但有办法控制行为。\n  - 不为什么大事，只为鸡毛蒜皮、无足轻重的日常小事争吵一通，诸如谁来把碗碟放进洗碗机，该轮到谁来给要洗的衣服分类和清洗卫生间等等。\n  - 我不太喜欢这样，这种对过去心存积怨、耿耿于怀的态度。\n  - 所谓更美好，并非对人人而言都是如此，他说。对某些人，它从来都意味着更糟。\n  - 我们谁也不愿抽签抽到她们做采购同伴。她们比我们更灰心失望；和她们在一起很难做到轻松愉快。\n  - 此刻我跪在这坚硬无比的地上，耳边听着集会不紧不慢地进行，终于明白了这一点。用下流话悄悄议论那些当权者确实威力无比。它包含了某种令人快乐的成分，某种恶作剧一般、不可告人、偷尝禁果、发抖战栗的成分。它像一道符咒，一种魔力。它使高高在上的当权者顿时威风扫地，使他们降低到公分母的位置，一变而成常人可与之相匹敌的凡人。在厕所隔间的油漆上，不知谁曾画出这样一行字：丽迪亚嬷嬷口淫。它像一面在山头高高飘扬的反叛之旗。光是想想丽迪亚嬷嬷干这种事本身就让人开心振奋。\n  - 他们有些人喜欢这么做，为的是寻求刺激。好比在祭坛上或其他什么圣洁的地方淫乱胡搞：谁让你们是众望所归、贞洁无邪的圣女呢。他们巴不得看到你们个个浓妆艳抹。不过是拙劣的权力炫耀\n  - 我们的最大错误是教会她们识字。将来我们再不会重蹈覆辙。”\n\n- [x] 《证言》，✨✨✨✨✨, 玛格丽特·阿特伍德，这是作者在时隔 30 多年之后为使女的故事写的续作，我只能说比原作更加精彩，难以想象这是作者在 80 岁发布的小说续作。更多的视角来回顾基列共和国是如何成为基列共和国的。\n\n  - 男人的眼光总在这儿那儿游走，就像老虎的眼睛，搜寻中的探照灯，而我们的诱惑当真会让他们失去判断力——我们或纤瘦或肥壮，形状较好的双腿，或优美或骨感或丰润的双臂，或白里透红或斑斑点点的肌肤，或鬓曲或善良的头发，或毛糙蓬乱或如枯草般的细发辫——是什么样的诱惑无关紧要，但必须遮挡起来，不被那些眼睛看到。不管我们的体型或五官是什么样子，反正都是陷阱，都是诱惑，哪怕我们并不想那样；我们清白无辜又无可指摘，但我们生而就有的天性就是让男人沉醉于欲望的根源，另他们醉到踉跄，蹒跚，乃至越界。\n  - 事情就是这么办的，也只能这样办，为了基列的能有美好未来必须这么做：少数人必须为多数人做出牺牲。\n  - 官方口径是一致的：基列国没有腐败堕落的天使军，当然也没有逃离的使女；因为——为什么会有人舍弃上帝的王国，宁愿跳进火坑呢？\n  - 学会读写并不能提供所有问题的答案，而是引发出新的问题，然后是更多的问题。\n  - 一旦你认为千真万确的事被证明是假的，你就会开始怀疑所有的事。\n  - 译者后记：要推翻基列的暴政，没有操控权力的能力是不可能实现的。对于建立在谎言基础上的极权国家，掌握谎言背后的真相，就等于拥有了最强大的武器。\n  - 她们喜欢给他洗浴，大惊小怪地称赞他的小手指、小脚趾、小酒窝和小小的男性器官，他撒尿时从那儿喷出的小喷泉还真是让人惊讶。多么强壮的小男人！\n  - 但别人要你必须坚强——这会造成多么大的压力啊。\n  - 这可不是个小要求：伊丽莎白要冒很大的风险。在基列，作伪证被视为重罪，但话说回来，大家都经常作伪证。\n  - 口径是一致的：基列没有腐败堕落的天使军士，当然也没有逃离的使女；为什么会有人舍弃上帝的王国，宁愿跳进火坑呢？\n  - 学会读写并不能提供所有问题的答案，而是引发出新的问题，然后是更多的问题。\n  - 但当我发现基列更改了什么、添加了什么、省略了什么之后，我担心我可能彻底失去信念。\n  - 一旦你认为千真万确的事被证明是假的，你就会开始怀疑所有的事。\n  - 在那个年代，男人有冲动；这些冲动难以计数；它们潜存在男人体内黑暗的角落里，隔一阵子就会积聚力量，像鼠群般冲出来，它是如此狡猾而强大，怎么能指望一个真正的男人战胜它们呢？这是威妮弗蕾德的理论。公平地说，这也是许多其他人的理论。\n\n- [x] 《盲刺客》，✨✨✨✨，玛格丽特·阿特伍德，2000 年的布克奖获奖作品，我是第一次看到这种结构的作品，学到了另一种写作手法。但是作品的故事有点离我太远，所以不是很能共情。但是还是喜欢作者的文笔。\n- [x] 《设计心理学》，✨✨✨✨，从生活中到机器人，各个方面探讨了良好的交互设计是怎样的，看完之后你会发现有好多东西，你从来没有注意到/想到，看完之后有助于一个高质量的生活。\n  - 在巴黎乘坐地铁时，门不会自动打开，因为你得自己开车门，你必须按一下按钮或是转动一下把手，或是往一边推动车门，才能下车（具体是哪一种操作，要看你乘坐的是哪一种车）。乘坐某些交通工具时，乘客得自己开门，但另外一些交通工具则禁止乘客自行操作。\n  - 数年来厂商尽力使汽车跑起来安静无声，谁能够想到有一天还需要花费数年时间和数以千万美元的成本添加声音？\n  - 2000 年前，罗马哲学家塞内加曾抱怨，旅行让我们结识到很多人，但是没有朋友，时至今日，这样的抱怨依然很有道理。在过去，距离非常重要，离开家人和朋友，联系就会减少。当然，人们可以利用信件和电话进行联系，但是在每天忙碌的生活中，这样的沟通是不够的。身处各地的人们，他们的社交和情感也常常会随之分开。\n- [x] 《Don't let me think》,✨✨✨,中文版叫《点石成金》，主要设计理念是：不要让我思考，不要在网页设计中做出让用户 confuse 的设计。但是本书的出版有点早，所以里面其实有不少东西稍微有点过时。\n- [x] 《鄙视》，✨✨✨✨，意大利作家：阿尔贝托・莫拉维亚，去年看到一个视频在做这本书的新书发布会，我还以为是一个本新书，直到我看完之后，我还是觉得这是一本近几年才出版的书，直到我去看了豆瓣的评价，才知道这本书竟然是 70 年前，20 世纪 50 年代的作品。一本好书的生命力就体现在这里。全书以丈夫的口吻，在一直找出妻子鄙视自己的答案，把心理描写的非常让人入戏，我曾以为，男性作家的心理描写都不怎么样，但是看了这本之后，我觉得作家就是作家。特别推荐给现在有在恋爱，或者已经结婚的人。\n- [x] 《那不勒斯四部曲》，✨✨✨✨✨，随着最近《我的天才女友》第三季电视剧的播出，又开始重新看这本书了。\n  - 在他眼里，索拉拉兄弟是成功年轻人的典范，需要模仿和超越，所以，他要在过新年时放很多烟花鞭炮，预示在新的一年里超越他们。城区里那些对索拉拉家心怀嫉妒的人，都觉得索拉拉是敌人，需要打败他们、取代他们的位子。\n  - 那是没有危及到他真正的利益。\n  - 她对亲戚和朋友说，在一个明媚的早晨，她和丈夫乘着小船去发黄的峭壁下的沙滩，撞在了阿马尔菲海滩的礁石上才弄成这样的。在她哥哥和皮诺奇娅的订婚宴会上，在说这谎言的时候，她用了一种嘲讽的语气，所有人都面带嘲讽地相信了她，尤其是女人，她们总是很清楚：当男人爱她们的时候该说什么，当男人想打她们的时候又该说些什么。再说，整个城区的所有人，特别是女人，都觉得她早就该被修理修理了。所以她脸上的伤并没有激起人们对斯特凡诺的谴责，周围的人反而对他又增添了一份仰慕和敬意，觉得他知道怎样做个男人。\n  - \"你对她说了谎，你对我也说了谎，你这么做，并不是出于对我们中任何一个人的爱，只是为了你自己，因为你没有勇气做出选择，你是一个懦夫！\" -- 埃莱娜对尼诺\n  - 对别人不要有太大的期望，要尽量享受你拥有的，这就是规则。\n  - 你不要生气，先反思一下，你是一个有觉悟的女人，当你的幸福建立在另一个女人的毁灭之上，你会有什么样的感受？”\n  - 但他觉得，他同时拥有我和他妻子，这很正常。\n  - 就是这样，他想解放别人的女人，而不是自己的女人。\n  - 你们不要相信他说的，刚开始的时候，他会帮着我收拾桌子，洗碗。现在他连地上的袜子都不会捡起来。”\n- [ ] 《如何生活》，✨✨✨，德里克西佛斯，有点混乱，有点像诗歌，主要是前后不一致，前面说不要社交，后面又说要多交朋友。。读不下去。。\n  - 永远不要在听到某个观点的同一天就同意任何事情。\n  - 大多数问题是人际关系，成为社会的一部分就是失去自己，切断与社会的联系。\n  - 提供产品而不是个人服务，这样你的产品没有你也能跑\n- [x]《饥饿游戏三部曲》，✨✨✨，这本书电影似乎比小说更能表现故事情节，怀疑写的时候是不是就是有影视化的打算。不知道是翻译的问题还是原著的问题，其实阅读体验不是太好。\n  - “我永远都不想要孩子。”我说。 “要是不住这儿，我会要的。”盖尔说。 “可你现在住在这儿。”我说，有些恼火。\n  - “可我也注意到他们没有播放我给露露身上放花的情景。”\n  - “如果一把浆果就能把它摧毁的话，那它肯定非常脆弱。”\n  - ”在化妆的过程中，他们每个人至少大哭过两次，而奥克塔维亚整个上午都在嘤嘤哭泣。没想到他们已真的喜欢上我，看到我要再回到竞技场，他们便垮掉了。加之，失去我就等于失去了进入所有重要社交场合的门票，特别是我的婚礼，他们更觉难以忍受。要为了别人而坚强，这种念头从没在他们的脑子里出现过，因而，我反倒成了安慰他们的人。可要去赴死的人却是我，这么一想，不禁令人恼火。“\n- [x]《经济学的思维方式》，✨✨✨✨，又一本经典的经济学著作。\n  - 在封建经济或社会主义经济中，领导人可以持续无限地犯着同样的错误，后果则由其他人来承担，承受着由于稀缺资源的不当利用而造成的生活水平低下的结果。\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[books]: books.md \"读书笔记\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/books/","title":"读书笔记"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 读书笔记\ntags:\n  - Books\n  - Notes\n  - 中文\n---\n\n记录自己看过的书，基本上从 2021 开始记的，以前的由于没有及时建立这个第二大脑，基本都忘的差不多了。按年份排序，星星 ✨ 是我自己的评分，如有笔记则另外链接。\n\nAlso see [[tv-shows]], [[movies]]\n\n## 其他人的书籍推荐资源\n\n- [汇总了 hacker news 上评论里提到的书籍的排名](https://hacker-recommended-books.vercel.app/)\n  - [又一个 hacker news 提到的图书周报](https://hackernewsbooks.com/top-books-on-hacker-news)\n- [reddit 上的图书推荐排名](https://www.redditreads.com/)\n- [豆瓣图书 top250](https://book.douban.com/top250)\n- [像在书店一样发现新的书](https://shepherd.com/)\n- [Ask HN: 那些书改变了你对所有事情的看法？](https://news.ycombinator.com/item?id=19087418)\n  - [Ask HN: 您推荐大家阅读的一本书是什么？](https://hn.buzzing.cc/hn/30241190/)\n- [Sive 的读书笔记](https://sive.rs/book)\n- [BBC 最有影响力的 100 本书籍](https://en.wikipedia.org/wiki/BBC_list_of_100_%22most_inspiring%22_novels)\n- [Good read 最受欢迎的书籍列表](https://www.goodreads.com/list/popular_lists)\n  - [有史以来最好的书 - Good read list](https://www.goodreads.com/list/show/1.Best_Books_Ever)\n- [时代周刊百大最佳英文长篇小说](https://zh.wikipedia.org/wiki/%E6%99%82%E4%BB%A3%E9%9B%9C%E8%AA%8C%E7%99%BE%E5%A4%A7%E8%8B%B1%E6%96%87%E5%B0%8F%E8%AA%AA)\n\n## 资源\n\n- [标准电子书](https://standardebooks.org/) - 制作精美的免费版权的电子书\n- [鸠摩电子书搜索](https://www.jiumodiary.com/)\n\n## 人生必读系列\n\n这里放我自己觉得必读的一些书籍：\n\n- 动物农场\n- 使女的故事，证言\n- 少数派报告\n- 那不勒斯四部曲\n\n## 2020\n\n- [x] 那不勒斯四部曲，埃莱娜费兰特，✨✨✨✨✨，看完电视剧看的书，小镇做题家最感同身受的一本书。\n\n## 2021\n\n- [x] 动物农场英文版，乔治奥威尔，✨✨✨✨✨，适合初级阶段的英语学习者阅读\n- [ ] 第二性，波伏娃，好吧，这个看了几章有点看不下去，这种偏哲学的书目前阶段有点不适合我，太难读下去了，读一会儿就犯困，只能先弃，再过几年再读。\n- [x] 基督山伯爵，大仲马，✨✨✨✨✨，神作，人生必看，情节设计太精彩了，不知道有没有类似的读物，还想再读类似的。\n- [x] 三个火枪手，大仲马，✨✨✨，看完基督山伯爵之后，感觉这本就一般般了，直到看完之后也没啥大惊喜，果然基督山伯爵是巅峰。\n- [x] 包法利夫人，福楼拜，✨✨✨✨，经典的力量就是过多少年之后，书里探讨的问题依然存在。\n- [x] 失踪的人，卡夫卡，✨✨✨，没咋看懂，本来想看完全集，但是有点看不下去，以后再说吧\n- [x] 少数派报告，菲利普迪克，✨✨✨✨✨，神作，50 年前作者在思考和探索的宇宙，人类，智能的问题，以及情节的设计，都太牛了，人生必读。\n- [x] 堂吉诃德，塞万提斯,✨✨✨✨ “《堂吉诃德》是一个令人伤感的故事，它越是令人发笑，则越使人感到难过。这位英雄是主持正义的，制伏坏人是他的唯一宗旨。正是那些美德使他发了疯。” -- 乔治·戈登·拜伦\n- [ ] 罪与罚，陀思妥耶夫斯基，看了两章，暂时弃了，主要是还是对漫长的心理活动没有耐心。\n- [x] 快思慢想，丹尼爾·卡尼曼， ✨✨✨✨，懂了很多道理，但是还是不怎么懂在生活中应该怎么做\n- [x] 银河帝国，阿西莫夫，✨✨✨✨✨，神作，由于最近在热播《基地》所有找来书看看，看完了 3 本，还在继续。\n  - 更新看完了 7 本了，基地 7 部曲，后面的是讲更早期的机器人和第一帝国的建立，感觉有点读不下去了，太长了！暂时弃坑\n  - 前 7 部必看！神作\n- [x] 永恒的终结，阿西莫夫，✨✨✨✨，不是很长，大概 3 个小时就能看完。反转确实很多！总体上这种时间旅行是因果论或者说是有点宿命论，但是其中又有人的自由意志对后续时空对影响，没有涉及平行世界，对时间旅行感兴趣的必读！\n- [x] 美丽新世界，阿道司，✨✨✨✨✨，竟然直到今天才看，非常非常有警示意义的设定，无知的快乐还是清醒的痛苦？ 有点不解的就是福帝竟然放任一个外国人在自己地盘里得到那么大的关注？福帝好的有点不像是独裁者了。\n- [x]沙丘，弗兰克·赫伯特，✨✨✨✨，看了电影\n- [x]深度工作，卡尔·纽波特，✨✨✨✨✨，正在看，就目前来说，非常契合我自己的想法，人需要长时间的专注才能产出东西。像是开放式办公室就是深度工作的典型反例，我至今不知道为什么大多数公司都要这样干。尤其是国内，更不适合这样干，每次周围有任何响动都会打扰到你。\n  - 其实每次读类似的书之后的一小段时间都会比较亢奋，也比较上进，但是随后可能就不再能坚持，所以我需要找到能让自己坚持下去的方法。\n- [x]意志力，关于专注、自控与效率的心理学，罗伊•鲍迈斯特，✨✨✨✨，强调了意志力，自制力，自控能力对于人生的重要性。批判了目前的自尊文化，作者认为现在的孩子普通自尊都很高，但是自控力其实很差，我们应该从小开始把培养孩子的自制力当成第一件事。用一致，即时的奖罚机制来训练孩子。\n- [ ] 枪炮，病菌与钢铁，人类社会的命运，贾雷德·戴蒙德，✨✨✨✨，快速浏览的，不算看完。主要试图回答人类社会各大洲的发展为何不同。\n  1. 各大陆民族长期历史之间的显著差异，不是源自这些民族本身的天生差异，而是源自他们环境的差异\n     1. 第一组差异是各大陆在可以用作驯化的起始物种的野生动植物品种方面的差异\n     2. 第二组因素就是那些影响传播和迁移速度的因素，而这种速度在大陆与大陆之间差异很大。在欧亚大陆速度最快，这是由于它的东西向主轴线和它的相对而言不太大的生态与地理障碍。\n     3. 与影响大陆内部传播的这些因素有关的，是第三组影响大陆之间传播的因素，这些因素也可能有助于积累一批本地的驯化动植物和技术。大陆与大陆之间传播的难易程度是不同的，因为某些大陆比另一些大陆更为孤立\n     4. 第四组也是最后一组因素是各大陆之间在面积和人口总数方面的差异。更大的面积或更多的人口意味着更多的潜在发明者，更多的互相竞争的社会，更多的可以采用的发明创造——以及更大的采用和保有发明创造的压力，因为任何社会如果不这样做就往往会被竞争对手所淘汰。\n  2. 中国在地理上的四通八达最后却成了一个不利条件，某个专制君主的一个决定就能使改革创新半途而废，而且不止一次地这样做了。相比之下，欧洲在地理上的分割形成了几十个或几百个独立的、相互竞争的小国和发明创造的中心。如果某个国家没有去追求某种改革创新，另一个国家会去那样做的，从而迫使邻国也这样去做，否则就会被征服或在经济上处于落后地位。欧洲的地理障碍足以妨碍政治上的统一，但还不足以使技术和思想的传播停止下来。欧洲还从来没有哪一个专制君王能够像在中国那样切断整个欧洲的创造源泉\n- [x] 一课经济学，亨利•黑兹利特，✨✨✨✨，古典自由主义经济的倡导者。作者认为政府真正该做的事，应该是建立并实施一套法律体系，禁止暴力和欺诈，鼓励并维护自由市场。其他的事情一概不要做，包括福利制度，社保制度等等。\n- [ ] 人类群星闪耀时，茨维格，✨✨✨✨，挑了自己感兴趣的几个故事看了下，文笔很优美，主要介绍了一些个人英雄？\n- [x] 哲学的故事，威尔杜兰特，✨✨✨✨✨，特别好的哲学入门书，还在看。 可能是读书太少的缘故，特别中意这类总结类书籍，可能没耐心或者是没能力读完原著，特别希望有饱学之士能总结，归纳，介绍各种书籍，然后有感兴趣的再深入阅读。这本书是看完的第一本哲学类著作。看完之后才能对西方哲学史有大概的了解，才不至于别人说 xxx 完全没概念的状态。我是在罗翔的那本《圆圈正义》里看到这本的，推荐入门的人读一下。\n- [ ] 卡拉马佐夫兄弟，陀思妥耶夫斯基，✨✨✨，实在读不下去啊。。为啥微信评分高达 9.1，我太菜了，迄今为止没读下去任何一本俄罗斯书。。谁能救救我。\n- [x] 月亮与六便士，毛姆，✨✨✨✨✨，不得不说，毛姆的文笔，实在是太好了，一个好的作家就应该写出一种让人能一直想读下去，同时又不觉得又臭又长的本领，毛姆简直就是集大成者。之前在《一本小书》看过赵立新演绎的《月亮与六便士》戏剧，演的很好！所以一直想读原著，读了之后果然不后悔。\n  - 在对待爱情这个问题上，女人跟男人最大的不同就是，女人是每时每刻都陷在恋爱的情绪里不可自拔，而男人则是有空了才会去考虑它。\n- [x] 面纱，毛姆，✨✨✨✨✨，读完月亮与六便士后，马上就想读下一本毛姆的书，选了这本看过电影版《面纱》的原著。在读中。同样，文笔依然非常吸引人读下去。\n  - 已读完。\n\n## 2022\n\nSee [[books-2022]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[tv-shows]: tv-shows.md \"电视剧笔记\"\n[movies]: movies.md \"电影笔记\"\n[books-2022]: books-2022.md \"2022年读书笔记\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/caddy-file-server-url-scheme/","title":"Caddy File Server Browser with URL Scheme"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Files\n  - Server\n  - Proxies\n  - Templates\n---\n\n# Caddy File Server Browser with URL Scheme\n\n[Template](https://gist.github.com/theowenyoung/e09cb6e2c59f247fdc3f4e6fe4401481)\n\nUse this template to display the follow page:\n![screenshot](./attachments/caddy-file-template-screenshot.png)\n\n```bash\nlocalhost {\n  root * /root\n  encode gzip\n  file_server {\n    browse ./file-browser-template-for-caddy.html\n    hide .*\n  }\n}\n```\n"},{"fields":{"slug":"/caddy2-setup-for-debian/","title":"Caddy2 Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Caddy\n  - Debian\n  - Setup\n  - Proxies\n  - Server\n---\n\n# Caddy2 Setup for Debian\n\n[Official Site](https://caddyserver.com/v2)\n\n## Install\n\n```bash\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install caddy\n```\n\nOnce installed, caddy is running.\n\nThe default config file at `/etc/caddy/Caddyfile`\n\n## Resources\n\n- [GitHub - greenpau/caddy-auth-portal: Authentication Plugin for Caddy v2 implementing Form-Based, Basic, Local, LDAP, OpenID Connect, OAuth 2.0 (Github, Google, Facebook, Okta, etc.), SAML Authentication](https://github.com/greenpau/caddy-auth-portal)\n- [GitHub - greenpau/caddy-auth-jwt: JWT Authorization Plugin for Caddy v2](https://github.com/greenpau/caddy-auth-jwt)\n- [basicauth (Caddyfile directive) — Caddy Documentation](https://caddyserver.com/docs/caddyfile/directives/basicauth#basicauth)\n"},{"fields":{"slug":"/common-url-scheme/","title":"Common URL Scheme"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - URL\n  - Tips\n---\n\n# Common URL Scheme\n\n## IINA\n\n[IINA - The modern media player for macOS](https://iina.io/)\n\nOpen stream video:\n\n```bash\niina://weblink?url={encoed url}\n```\n"},{"fields":{"slug":"/debian-server-setup/","title":"Debian Server Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Debian\n  - Server\n  - Setup\n---\n\n# Debian Server Setup\n\n> For linux common commands, see [[linux-common-commands]]\n\n1. Update Source\n\n   ```bash\n   apt update --yes && apt upgrade --yes\n   ```\n\n2. Install sudo package\n\n   ```bash\n   apt install -y sudo\n   ```\n\n3. Open BBR: [[open-bbr-for-debian]]\n\n4. Use ssh key login instead of password, for more details see [How To Configure SSH Key-Based Authentication on a Linux Server](https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server)\n\n5. In your local machine:\n\n```bash\nssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\n```\n\n> This will copy your id_rsa.pub to remote machine `~/.ssh/authorized_keys`\n\n3. Change the default password\n\n   1. `passwd`\n\n4. Create an admin group\n   1. `groupadd admin`\n   2. Give admin group root access, and no password sudo\n      1. Backup sudo files `cp /etc/sudoers /root/sudoers.bak`\n      2. Edit the `/etc/sudoers` file by typing the command: `visudo`\n      3. Add `%admin ALL=(ALL:ALL) NOPASSWD:ALL` after `sudo` group\n5. Create a admin group user\n   1. `useradd username -g admin`\n6. Use ssh key login instead of password for normal user\n   1. `ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host`\n7. Login with new normal user `ssh username@ip`\n8. Install common utils:\n   1. `sudo apt install build-essential software-properties-common curl vim unzip git pkg-config libssl-dev --yes`\n9. Create `/data` for store data files with `777` permissions, avoid to use `/home` directory\n\nYou might want to read also:\n\n- [[shadowsocks-rust-setup-for-debian]]\n- [[caddy2-setup-for-debian]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[linux-common-commands]: linux-common-commands.md \"Linux Common Commands\"\n[open-bbr-for-debian]: open-bbr-for-debian.md \"Open BBR for Debian\"\n[shadowsocks-rust-setup-for-debian]: shadowsocks-rust-setup-for-debian.md \"Shadowsocks Rust Setup for Debian\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/deno-tips/","title":"Deno Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Deno Tips\ntags:\n  - Deno\n  - Tips\n---\n\nCuration of Deno Tips.\n\n## Dirname\n\n```ts\nconst __dirname = new URL(\".\", import.meta.url).pathname;\n```\n"},{"fields":{"slug":"/depression/","title":"抑郁症相关资料汇总"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 抑郁症相关资料汇总\ntags:\n  - depression\n---\n\n## 文章\n\n- [如何从抑郁中恢复过来](https://psychlopaedia.org/health/how-to-prevent-depression-full-transcript/)\n  - 你如何解释，你如何赋予意义，你对生活中的事件赋予什么样的意义。我们学到的部分内容是，有一种现象叫做归因风格，这是一种人们如何反射性地、无意识地解释事件意义的模式。\n  - 抑郁症人群决策的质量，以及他们做决定的方式实际上如何无意中加剧了抑郁。它会影响工作效率和在工作中发挥作用的能力，影响注意力，伤害人们，损害人们的生活，影响人际关系。你很难和抑郁的人在一起，它最终会破坏人际关系，当然，所有这会导致更多的孤立和更多的抑郁。\n  - 2017 年起，抑郁症被宣布为人类痛苦和残疾的头号原因。\n  - 作为一个一般原则，你在屏幕前花费的时间越多，无论是小的，还是大的，你就越有可能患抑郁症。\n  - 再多的药物也无法帮助你培养管理压力的技能，再多的药物也无法帮助你发展出更好的归因或解释性风格，或者帮助你建立和维持与他人的积极关系，或者帮助你发展出那种认知技能，帮助你建立批判性的思考体系，帮助你避免只以自己的感受为唯一的标准。它不会帮助你培养解决问题的能力，不会帮助你制定更好的决策策略，不会教你如何与人建立一个支持体系，不会帮助你接受生活中发生的任何糟糕的事情，它肯定也不会帮助你建立接受治疗最重要的事情之一，就是如何建立一个令人信服的未来。\n  - 如果我们问这个问题：\"谁克服了抑郁症，谁没有？\"，那些发现自己开始向前看，开始思考\"我希望我的生活如何\"的人，比那些一直关注不可改变的过去的人做得更好。 这是关键所在，药物不会帮助你做到这一点。\n  - 抑郁症的关键因素是：内在取向(The internal orientation), 压力产生(stress generation), 思维反刍(rumination,反复的思考某些想法),大而宏观的思考(global thinking), 不切实际的希望(unrealistic expectations.)\n    - 内在取向驱使你变得向内。实际上，有一些抑郁症作家认为抑郁症是所有状态中最自恋的。这显然是一种夸张，但它确实说明了某种自恋的程度，我所说的内在取向，就是当你用你的感觉作为该怎么做的标准时，你会犯错误。我知道，世界上有人会对你说：\"相信你的感受，倾听你的感受。听听你的心告诉你什么“。作为心理学家和抑郁症专家，我可以告诉你，这是非常糟糕的建议，因为你的感受太容易欺骗你了，人们很容易认为事情比实际情况更糟。用通俗易懂的语言来说，抑郁症患者的关键问题是，他们想了事情，然后犯了相信自己的错误。如果没有能力学习如何走出自己和现实测试，这种思考是潜在危险的，你很可能成为自己思想的囚徒。这就是为什么，特别是在澳大利亚，CBT 是最常用的方法之一，并且适当地帮助人们学习如何收集信息以及如何使用它的认知技能，而不是只是跳到毫无根据的结论并相信正在发生的事情，当然，这也与社会孤立有关。\n      - 简单示例：我打电话给你，你不在家，我留言。\"嗨，是迈克尔。现在是上午 10：00。给我回电话。现在是晚上 10 点，你还没有给我回电话。如果我是一个抑郁的人，我有什么可预测的归因或解释，为什么你没有给我回电话？\"你不再关心我了。这会让我振作起来，但并不止于此。然后它进入下一个层次，\"为什么人们不关心我？为什么人们从来没有对我做出过回应？为什么人们不是都和我的朋友住在一起呢？\"接下来你知道的，这个人已经建立了这个，直到它真的是一个自杀危机，因为你没有给他们回电话。这就是它的工作原理。这就是内在的方向。训练人们产生多种解释，为什么这个人不回电话？可能是这个。可能是这个。可能是这个。可能是这个。可能是这个。哪一个是它？我不知道。掌握识别你不知道的东西的艺术，而不是编造东西，然后真正相信自己。\n    - 压力的产生，情绪状态会影响决策的质量，当人们没有好的决策策略时，当他们只是跟随自己的内心，只是跟随他们的感受时，他们就会犯错误。所以，治疗任务的一部分是学习如何采取与目标一致的行动，而不是采取与感觉一致的行动。感情来来去去，而后果会持续下去，开始用这些术语思考，对于那些习惯于如此密切地追随自己的感受的人来说，成为一种非常不同的范式，\n    - 分清楚什么时候是有用的分析，什么时候是无用的反刍？行动起来，\"创造可能性\"，生活中没有任何保证，但我们可以采取行动，为未来创造可能性。\n    - 不要大而抽象的思考，要具体的思考，别想那些宏观的东西。有目标很重要，但目标必须被定义，没有步骤的目标只是一个愿望。\n    - 我们的期望是我们如何判断一切的过滤器，它引出了一个问题，你怎么知道你的期望是否现实？\n  - 获得专业帮助\n  - 训练做出正確決定的能力\n  - 完全避免饮酒\n  - 你的具体风险因素是什么？你对哪些事情有反应，而其他人对这些事情不是特别反应？\n  - 学会区分事实与感觉，信仰与事实\n  - 睡眠很重要\n  - 每天挑战自己 50 次，比如每天做个小网页，每天锻炼\n  - 做有趣的事情，经常做\n  - 获取并与他人保持联系\n  - 在你生活的重要领域以目标为导向。但同样，它们必须是现实的目标。如果你不能完成步骤的流程，如果你不知道步骤是什么，那么你就陷入了\"你愿意，但你真的没有计划\"。确定优先级并解决问题。获取支持，获取帮助。不要再等了。\n  - 不该做的事情\n    - 不要纠结于过去。它已经消失了，但明天还没有发生。真正专注于我能做些什么，将来会有所不同，这将改变我们对过去的感觉。\n    - 不要将自己与他人进行比较，如果你看社交媒体，如果你参与社交媒体，很容易得出结论，其他人都玩得很开心，其他人都很可爱，其他人都很受欢迎，其他人都在去很酷的地方，其他人都是，而我不是。你不能看着一张照片，说这就是这个人的生活\n    - 不要忽视现实，了解事实\n    - 不要放棄或被動\n  - 你是唯一一个能管理好自己的人，目标不是治愈抑郁症，目标是学习如何管理你的情绪\n"},{"fields":{"slug":"/docker-common-commands/","title":"Docker Common Commands"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Docker Common Commands\ntags:\n  - Docker\n  - Tips\n---\n\n## docker compose exec bin\n\n```bash\ndocker-compose exec service-name /bin/sh\n```\n\n## Stop All contains and remove\n\n```bash\nsudo docker stop $(sudo docker ps -a -q)\nsudo docker rm $(sudo docker ps -a -q)\n```\n\n## Clean all\n\n```bash\nsudo docker system prune --volumes\nsudo docker image prune -a\n```\n"},{"fields":{"slug":"/docker-setup/","title":"Docker Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Docker\n  - Setup\n---\n\n# Docker Setup\n\n## Install\n\nSee [here](https://docs.docker.com/engine/install/debian/)\n\n[Install Docker compose](https://docs.docker.com/compose/install/)\n"},{"fields":{"slug":"/filebrowser-setup/","title":"FileBrowser Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Setup\n  - Files\n---\n\n# FileBrowser Setup\n\n## Install\n\n```bash\ncurl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash\n```\n\n## Systemd\n\n```bash\nsudo vim /etc/systemd/system/filebrowser.service\n```\n\n```bash\n[Unit]\nDescription=File browser: %I\nAfter=network.target\n\n[Service]\nUser=www-data\nGroup=www-data\nExecStart=/usr/local/sbin/filebrowser -c /etc/filebrowser/%I -d /etc/filebrowser/filebrowser.db\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now filebrowser\n```\n"},{"fields":{"slug":"/git-sshkey/","title":"Use ssh key for Git"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Git\n  - SSH\n  - Auth\n---\n\n# Use ssh key for Git\n\nReference: [Generating a new SSH key and adding it to the ssh-agent - GitHub Docs](https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)\n\n## Generate ssh key\n\n```bash\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n# Start the ssh-agent in the background.\neval \"$(ssh-agent -s)\"\n# Add your SSH private key to the ssh-agent\nssh-add ~/.ssh/id_ed25519\n```\n\n## Add ssh key to Github\n\n```bash\ncat .ssh/id_ed25519.pub\n```\n\n[SSH Keys Setting](https://github.com/settings/keys)\n"},{"fields":{"slug":"/git-tips/","title":"收集常用Git技巧"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集常用Git技巧\nlanguage: zh\ntags:\n  - Git\n  - Tips\n  - 中文\n---\n\n## 回答合集\n\n- [Finding the date/time a file was first added to a Git repository - Stack Overflow](https://stackoverflow.com/questions/2390199/finding-the-date-time-a-file-was-first-added-to-a-git-repository/25633731) - 获取首次提交时间\n\n## 提交\n\n- [Git Semantic Commit Messages](https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716) - git 语义化提交消息模版\n\n## 合并上游的时候不弹出确认框\n\n```bash\ngit pull upstream main --commit --no-edit\n```\n\n## 对所有采用上游的更新\n\n```bash\ngit checkout --theirs .\n```\n\n## 首次更新子 repo\n\n```bash\ngit submodule update --init --recursive\n```\n\nLater\n\n```bash\ngit submodule update --recursive\n```\n\n## 忽略所有，除了文件夹\n\n```bash\nfolder/*\n!folder/.gitkeep\n```\n"},{"fields":{"slug":"/git-workflows/","title":"Git workflows"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Git\n  - Workflows\n---\n\n# Git workflows\n\n## Intro\n\nSee [here](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)\n\n![](https://wac-cdn.atlassian.com/dam/jcr:8f00f1a4-ef2d-498a-a2c6-8020bb97902f/03%20Release%20branches.svg?cdnVersion=1770)\n\n## Other Version Control Systems\n\n- [fossil](https://fossil-scm.org/home/doc/trunk/www/index.wiki) - Sqlite use this system to develop things.\n"},{"fields":{"slug":"/github-actions-workflow-check-if-there-is-uncommited-changes/","title":"How to check if there are uncommited changes in Github Actions?"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: How to check if there are uncommited changes in Github Actions?\ntags:\n  - Github\n  - Actions\n  - Git\n---\n\n```yaml\nname: Github Actions check if there are uncommited changes\non:\n  repository_dispatch:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out repository code\n        uses: actions/checkout@v2\n      - run: touch index.html\n      - name: chown\n        run: sudo chown -R $USER:$USER ./\n      - name: git config\n        run: git config --global user.name \"github-actions[bot]\" && git config --global user.email github-actions-bot@users.noreply.github.com\n      - name: git add\n        run: git add .\n      - run: git status\n      - id: isChanged\n        run: git diff-index --cached --quiet HEAD || echo '::set-output name=changed::true'\n      - run: echo ${{ steps.isChanged.outputs.changed }}\n      - if: ${{ steps.isChanged.outputs.changed == 'true' }}\n        run: echo 'yes, changed'\n      - if: ${{ steps.isChanged.outputs.changed != 'true' }}\n        run: echo 'no any change'\n```\n"},{"fields":{"slug":"/go-template-tips/","title":"Go Template Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Go\n  - Templates\n  - Tips\n  - Programming-Languages\n---\n\n# Go Template Tips\n\n- Parent Variable, `{{$.XX}}`\n- URL encode, `urlquery \"https://test.com\"`\n"},{"fields":{"slug":"/goals-2021/","title":"2021 Goals"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 2021 Goals\ntags:\n  - \"Year2021\"\n  - Todo\n---\n\n- [x] Post 100 articles/wikis this year\n- [x] More patient about stocks.\n- [ ] Significantly improve English level\n"},{"fields":{"slug":"/jackett-setup/","title":"Jackett Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Jackett\n  - Torrents\n  - BT\n  - Self-Hosted\n  - Setup\n---\n\n# Jackett Setup\n\nRead more at [here](https://github.com/Jackett/Jackett#install-as-service)\n\n1. Download and extract the latest `Jackett.Binaries.LinuxAMDx64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases)\n\n```bash\nwget https://github.com/Jackett/Jackett/releases/download/v0.18.545/Jackett.Binaries.LinuxAMDx64.tar.gz\n# tar to a directory you want\ntar -xf Jackett.Binaries.LinuxAMDx64.tar.gz\n```\n\n2. To install Jackett as a service, open a Terminal, cd to the jackett folder and run `sudo ./install_service_systemd.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\n`http://your-ip:9117`\n\nYou can set password, or port by UI.\n"},{"fields":{"slug":"/jellyfin-setup/","title":"Jellyfin setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Jellyfin\n  - Setup\n  - Self-Hosted\n---\n\n# Jellyfin setup\n\n## Install\n\nSee [Installing Jellyfin | Documentation - Jellyfin Project](https://jellyfin.org/docs/general/administration/installing.html#debian)\n\n## Usage\n\n```bash\nsudo systemctl restart jellyfin\n```\n\n## 中文字体\n\n1. Download google noto fonts:\n   This [repo](https://github.com/CodePlayer/webfont-noto) compiled noto fonts, so you can just download it and use it.\n\n   ```bash\n   wget https://github.com/CodePlayer/webfont-noto/raw/master/dist/NotoSans/NotoSansCJKsc-hinted/subset/NotoSansCJKsc-hinted-standard/NotoSansCJKsc-Regular.woff2\n   ```\n\n   At Jellyfin Admin dashboard, player, open back font, add the font path\n\n## FAQ\n\n- [Jellyfin 中文字体问题](https://github.com/jellyfin/jellyfin-web/issues/934)\n"},{"fields":{"slug":"/license-comparison/","title":"License比较"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: License比较\nlanguage: zh\ntags:\n  - License\n  - Comparison\n  - 中文\n---\n\n![License Comparison](attachments/license-comparision.png)\n\n> By [如何选择开源许可证？](https://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html)\n"},{"fields":{"slug":"/life-pro/","title":"提升生活质量的东西列表"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 提升生活质量的东西列表\ntags:\n  - List\n  - Tips\n  - Life\n---\n\n收集自己用过的一些好东西。\n\n## 避雷\n\n- Kindle, 积灰好几年了，体验太差，尤其是翻页，然后找书又不太方便，所以现在基本都是在用微信读书了，可以自己导入书籍，电脑，ipad，手机都可以用。\n\n## 厨房\n\n- 洗碗机，我用的是松下的 6 人份的，即使这样，大概都是每隔 1 天洗一次\n- 一个 5L 的电热水壶，每天只用烧一次水，我用的是一款美的的\n- switch 健身环\n\n## 办公\n\n- 桌面站立书桌，如果一直在家工作，即使是人体工学椅，保持一天也很累，所以需要切换一下，站几个小时，再坐几个小时是最好的。\n\n## 笔记\n\n- [Foam](https://foambubble.github.io/foam/) + [我开发的主题](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki)，太爽了，所以我才这么勤快的更新 wiki\n\n## 阅读\n\n- [[awesome-explore]] - 参考这里，经常逛的一些地方\n\n## 读书\n\n- 微信读书，可能有删减吧，但是你也可以自己倒入 pdf，三端都能用，很方便。\n- Kindle, 曾经觉得这是被割韭菜的产品，当时知乎大 V 铺天盖地的推广，但是买回来之后，基本没怎么用，闲置了 7 年之久。最近开始重度看 Hacker News 之后，突然喜欢了某种简单，离线的东西。于是重新开始用，由于 Kindle 几乎只能下一页，所以你的确不会被干扰，这一点很重要，我用微信读书的时候，一定会想切换到别的应用的。现在变成了我的遛狗必用硬件。我会在一个没有网络的地下室或者小区里边遛狗边看书。\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[awesome-explore]: awesome-explore.md \"Awesome Explore\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/life-tips/","title":"高质量生活方式推荐"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 高质量生活方式推荐\ntags:\n  - Life\n  - Tips\n---\n\n收集一些有意思的生活方式。\n\n## List\n\n- [#推特剁手指南 2020 版](https://twitter.com/StarKnight/status/1317653363408859136)\n- [#推特剁手指南 2021 版](https://twitter.com/StarKnight/status/1450260340252368896)\n\n## 硬件\n\n- [显示器推荐 - Dell UltraSharp U2515H 2560x1440 显示器](https://nickjanetakis.com/blog/how-to-pick-a-good-monitor-for-software-development)\n"},{"fields":{"slug":"/linux-common-commands/","title":"Linux Common Commands"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Tips\n  - Linux\n  - Commands\n  - Bash\n---\n\n# Linux Common Commands\n\n## View current system info\n\n```bash\nlsb_release -a\n```\n\nOutput:\n\n```bash\nDistributor ID:\tDebian\nDescription:\tDebian GNU/Linux 10 (buster)\nRelease:\t10\nCodename:\tbuster\n```\n\n## View all users\n\n```bash\ncat /etc/passwd | grep -v nologin|grep -v halt|grep -v shutdown|awk -F\":\" '{ print $1\"|\"$3\"|\"$4 }'|more\n```\n\n## Get Publish IP\n\n```bash\nhostname -I\n```\n\n## Change user group\n\n```bash\nusermod -g groupname username\n```\n\n## Get user group\n\n```bash\nid -g -n\n```\n\n## Remove apt ppa\n\n```bash\nsudo add-apt-repository --remove ppa:qbittorrent-team/qbittorrent-stable\n```\n\n## Get current shell\n\n```bash\necho \"$SHELL\"\n```\n\n## Get current cpu arch\n\n```bash\narch\n```\n\nor\n\n```bash\ndpkg --print-architecture\n```\n\n## Unzip tar.gz\n\n```bash\ntar -xf x.tar.gz\n```\n\nSee also [here](https://linuxize.com/post/how-to-extract-unzip-tar-gz-file/)\n\nTar to specific directory\n\n```bash\ntar -xf x.tar.gz -C ./xxx\n```\n\n## Stdout to File\n\n```bash\ncommand &> file\n```\n\nOverwrite:\n\n```bash\ncommand >| file.txt 2>&1\n```\n\n## Download/Upload file by SSH SCP\n\nDownload to local:\n\n```bash\nscp root@ip:/path ~/Downloads\n```\n\n## Remove node_modules\n\n```bash\nfind . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n```\n\n## Remove target\n\n```bash\nfind . -name 'target' -type d -prune -exec rm -rf '{}' +\n```\n\n## Find and replace string\n\n```bash\nsed -i 's/old-text/new-text/g' input.txt\n```\n\n## Soft Link\n\n```bash\nln -s source_file target_file\n```\n\n## Create User\n\n```bash\nuseradd -m USERNAME\n```\n\n> Note: with home directory\n\n## Get all shells\n\n```bash\ncat /etc/shells\n```\n\n## Last n lines in file\n\n```bash\ntail -3 file.txt\n```\n\n## Linux find a biggest directory in ./\n\n```bash\nsudo du -a ./ 2>/dev/null | sort -n -r | head -n 20\n```\n\n## Linux find a biggest file in ./\n\n```bash\nfind ./ -type f -printf '%s %p\\n' | sort -nr | head -10\n```\n"},{"fields":{"slug":"/linux-log/","title":"Linux Log"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Linux Log\ntags:\n  - Linux\n  - Log\n---\n\nLinux view systemctl log:\n\n```bash\nsudo journalctl -f -u service-name.service\n```\n"},{"fields":{"slug":"/linux-network/","title":"Linux Anti DDos"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Linux Anti DDos\ntags:\n  - Linux\n  - DDos\n---\n\n## See who connect with Me\n\nSee: [here](https://www.linuxshelltips.com/find-ip-addresses-are-connected-to-linux/)\n\n```bash\nss -tun state connected\n```\n\n## Sort by ip connect with 443\n\n```bash\nnetstat -tn 2>/dev/null | grep -E '\\s[0-9.]+:443\\s' | awk '{print $5}' | cut -d : -f 1 | sort | uniq -c | sort -nr\n```\n\n## Ban\n\nSee [here](https://docs.rackspace.com/support/how-to/block-an-ip-address-on-a-Linux-server/)\n\n```bash\nsudo systemctl status firewalld\nsudo firewall-cmd --permanent --add-rich-rule=\"rule family='ipv4' source address='202.61.254.136' reject\"\nsudo firewall-cmd --reload\nsudo firewall-cmd --list-all\n```\n\n## Kill tcp\n\n```bash\ntcpkill host <ip>\n```\n"},{"fields":{"slug":"/mac-setup/","title":"Mac Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Mac Setup\ntags:\n  - mac\n  - setup\n---\n\n## Script\n\n- [mac developer new computer script](https://github.com/vendasta/setup-new-computer-script)\n"},{"fields":{"slug":"/makefile-templates/","title":"Makefile Templates"},"frontmatter":{"draft":false},"rawBody":"---\ntags: \n\t- Makefile\n  - Templates\n  - Workflows\n---\n\n# Makefile Templates\n\n```Makefile\n.PHONY: start reload stop\nstart:\n\tsystemctl start caddy\nstop:\n\tsystemctl stop caddy\nreload:\n\tsystemctl reload caddy\n```\n"},{"fields":{"slug":"/mastdon-development-setup/","title":"Mastdon Development Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Mastdon Development Setup\ntags:\n  - Mastdon\n  - Setup\n---\n\nAlso see [dev/setup](https://docs.joinmastodon.org/dev/setup/) [admin/install](https://docs.joinmastodon.org/admin/install/)\n\n1. Install Ruby\n\n[[ruby-setup]]\n\n2. Install Node\n\nSee [nvm](https://github.com/nvm-sh/nvm)\n\n3. Install postgres\n\n[[postgres-setup-for-macos]]\n\n4. Install redit\n\n```bash\nbrew install redis\nbrew services start redis\n```\n\n5. Clone\n\n```bash\ngit clone git@github.com:mastodon/mastodon.git live\n```\n\n6. Install ruby dependences\n\n```bash\ncd live\nbundle config set --local with 'development'\nbundle install\n```\n\n6. Install yarn\n\n```bash\nnpm install --global yarn\n```\n\n7. Install nodejs dependences\n\n```bash\nyarn\n```\n\n1. Init database\n\n```bash\nRAILS_ENV=development bundle exec rails db:setup\n```\n\n8. Install foreman for multiple run\n\n```bash\ngem install foreman --no-document\n```\n\n9. Open\n\n<http://localhost:3000>\n\nemail: `admin@localhost:3000`\npassword: `mastodonadmin`\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[ruby-setup]: ruby-setup.md \"Ruby Setup for MacOS\"\n[postgres-setup-for-macos]: postgres-setup-for-macos.md \"Postgres Setup for Macos\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/mini-reset-css/","title":"Mini Reset CSS"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - CSS\n---\n\n# Mini Reset CSS\n\n> Forked by <https://github.com/jgthms/minireset.css/blob/master/minireset.css>\n\n```css\nhtml {\n  font-family: \"SF Pro SC\", \"SF Pro Text\", \"SF Pro Icons\", \"PingFang SC\",\n    \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n}\nbody {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\nhtml,\nbody,\np,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal;\n}\n\nbutton,\ninput,\nselect {\n  margin: 0;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nimg,\nvideo {\n  height: auto;\n  max-width: 100%;\n}\n\niframe {\n  border: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n```\n"},{"fields":{"slug":"/movies/","title":"电影笔记"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 电影笔记\ntags:\n  - Movies\n  - Notes\n  - 中文\n---\n\n记录自己看过的电影，按年份排序，星星 ✨ 是我自己的评分，如有笔记则另外链接。基本上从 2021 开始记的，以前的由于没有及时建立这个第二大脑，基本都忘的差不多了。\n\nAlso see [[books]], [[tv-shows]]\n\n## workflows\n\n目前主要是用 [[qbittorrent-setup-for-debian]],[[jackett-setup]]在下载电影，买了一台 1T 的 VPS 作为 NAS。本来想用[[jellyfin-setup]]来作为影视中心的，但是使用后感觉客户端并不是 native 的，略卡，可能暂时还不胜用，所以索性直接上[[caddy-file-server-url-scheme]], 然后 mac 用 [IINA](https://iina.io/)，或者[迅雷看看](https://video.xunlei.com/)（大多数剧的字幕匹配做的好一点），手机端用 [nplayer](https://nplayer.com/)或[VLC](https://www.videolan.org/) 打开流文件。目前这样的体验是最爽的。\n\n![Root Screenshot](attachments/caddy-root.png)\n![Movie Demo](attachments/movie-demo.png)\n\n## 人生必看系列\n\n这里放我自己觉得必看的一些电影：\n\n- 黑客帝国\n\n## 2021\n\n- [x] 梦幻骑士, 1972,✨✨✨✨， 戏剧+电影结合的非常好的一部剧，仅节选了原著中的第一个故事，但是结局改的非常感人，唐吉可德救赎了自己的女神。\n- [x] 沙丘，2021，✨✨✨✨，看的 imax，不得不说，视觉体验真的贼好，但是由于没看书就看电影，一开始有点懵，后面回去补了书，发现拍的其实很好。\n- [x] 芬奇，2021，✨✨✨，有点简单温馨，不太是我的菜。但是也不算浪费时间。\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[books]: books.md \"读书笔记\"\n[tv-shows]: tv-shows.md \"电视剧笔记\"\n[qbittorrent-setup-for-debian]: qbittorrent-setup-for-debian.md \"qBittorrent setup for Debian\"\n[jackett-setup]: jackett-setup.md \"Jackett Setup\"\n[jellyfin-setup]: jellyfin-setup.md \"Jellyfin setup\"\n[caddy-file-server-url-scheme]: caddy-file-server-url-scheme.md \"Caddy File Server Browser with URL Scheme\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/netdata-setup-for-debian/","title":"Netdata Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Netdata Setup for Debian\ntags:\n  - Debian\n  - Netdata\n  - Monitor\n---\n\n## Install\n\n```bash\nbash <(curl -Ss https://my-netdata.io/kickstart.sh)\n```\n"},{"fields":{"slug":"/nginx-setup-for-debian/","title":"Nginx Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Nginx Setup for Debian\ntags:\n  - Nginx\n  - Debian\n  - Setup\n---\n\nInstall latest stable nginx for debian\n\n> Also see [here](https://www.nginx.com/resources/wiki/start/topics/tutorials/install/)\n\n```bash\nsudo su\ncat <<EOF >> /etc/apt/sources.list.d/nginx.list\ndeb http://nginx.org/packages/debian/ buster nginx\ndeb-src http://nginx.org/packages/debian/ buster nginx\nEOF\nexit\ncurl -L https://nginx.org/keys/nginx_signing.key | sudo apt-key add -\nsudo apt update\nsudo apt install nginx\n```\n\n## Optional generate nginx conf online\n\nGenerate a nginx conf online at [here](https://www.digitalocean.com/community/tools/nginx)\n\nIf nginx conf need dhparam.pem, run :`cd /etc/nginx sudo openssl dhparam -dsaparam -out dhparam.pem 4096`\n\n## Optional install acme.sh\n\n```bash\nsudo su\nwget -O -  https://get.acme.sh | sh -s email=my@example.com\n```\n\n```bash\nsource ~/.bashrc\nacme.sh --issue -d example.com --nginx\n```\n\n## Optional Install certbot\n\n### Install snap\n\n> https://snapcraft.io/docs/installing-snapd\n\n```bash\nsudo apt -y install snapd\nsudo snap install core; sudo snap refresh core\n\n```\n\n> https://certbot.eff.org/lets-encrypt/debianbuster-nginx\n\n```bash\nsudo snap install --classic certbot\nsudo snap install certbot-dns-cloudflare\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n```\n\n## Generate SSL\n\n```bash\nsudo certbot --nginx\n```\n"},{"fields":{"slug":"/nodejs-monorepo/","title":"Nodejs Monorepo"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Monorepo\n  - Javascript\n  - Workflows\n---\n\n# Nodejs Monorepo\n\n## Tools\n\n[GitHub - atlassian/changesets: 🦋 A way to manage your versioning and changelogs with a focus on monorepos](https://github.com/atlassian/changesets)\n\n## Use Changesets as monorepo manager\n\n### Init a monorepo\n\n```bash\nmkdir monorepo && cd monorepo\ngit init\n# Add .gitignore file for nodejs <https://github.com/github/gitignore/blob/master/Node.gitignore>\nnpm init --yes\n```\n\nAdd `\"private\":\"true\"` to the root `package.json`\n\n```bash\nnpm init -w packages/a\nnpm init -w packages/b\nnpm init -w packages/c\n```\n\nLet `c` depends `a` and `b`,\n\nAdd\n\n```json\n\"dependencies\": {\n  \"a\":\"^1.0.0\",\n  \"b\":\"^1.0.0\"\n}\n```\n\nto `packages/c/package.json`\n\n### Install changesets\n\nAlso see [here](https://github.com/atlassian/changesets/blob/main/docs/intro-to-using-changesets.md)\n\n```bash\nnpm install -D @changesets/cli && npx changeset init\n```\n\nThis action will add a `.changeset` folder, and a couple of files to help you out:\n\nYou should change the `.changeset/config.json` -> `baseBranch` to yourself main branch, also change `access` to `public`\n\nCommit current files.\n\n```bash\ngit add .\ngit commit -m \"feat: init\"\n```\n\nThat's done.\n\n### Usage\n\n#### First publish\n\nFirst publish you should just use the follow command to publish your module\n\n```bash\nnpx changeset publish\n```\n\n#### Future changes\n\nYou should see [changesets philosophy](https://github.com/atlassian/changesets/blob/main/docs/detailed-explanation.md)\n\nYou should first create an `intent to change`, that said, before what ever changes you want to make, you should create a `intent change`\n\n```bash\nnpx changeset\n```\n\n...Make some changes\n\nNow, generate new version, changeset will take care your dependences,\n\n> Note, by default, if `a` upgrade from `1.0.1` to `1.0.2`, `c` depends on `a@^1.0.1`, then `c` `package.json` will not change, cause npm will auto update `a@^1.0.1` to the last version `1.0.2`\n> if you want change to the exact version every time, you can set the config to\n>\n> ```bash\n>  \"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH\": {\n>     \"updateInternalDependents\": \"always\"\n>  }\n> ```\n\n```bash\nnpx changeset version\n```\n\nThen, you can publish it.\n\n```bash\nnpx changeset publish\n```\n\n```bash\ngit add .\ngit commit -m \"chore: version\"\ngit push --follow-tags\n```\n\n## With CI\n\nI'll use Github Actions as example.\n\nThe CI workflow assume that you use [[git-workflows]] as your git workflow.\n\n> Note, you can use [`@changesets/changelog-github`](https://github.com/atlassian/changesets/tree/main/packages/changelog-github) as your changelog format log. with this, you can generate a log like [this](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-b%401.1.0) , without this, then the log will only include [commit link](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-c%401.1.2) > `npm i -D @changesets/changelog-github`\n>\n> ```json\n> {\n>   \"changelog\": [\n>     \"@changesets/changelog-github\",\n>     { \"repo\": \"theowenyoung/monorepo-example\" }\n>   ]\n> }\n> ```\n\n1. Create a script in root `package.json`\n\n```json\n{\n  \"scripts\": {\n    \"version-packages\": \"changeset version\",\n    \"release\": \"changeset publish\"\n  }\n}\n```\n\n2. Create github actions workflows\n\n```bash\nmkdir -p .github/workflows\n```\n\n```bash\ntouch .github/workflows/release.yml\n```\n\nWith the following content:\n\n```yaml\nname: Release\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@master\n        with:\n          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits\n          fetch-depth: 0\n\n      - name: Setup Node.js 12.x\n        uses: actions/setup-node@master\n        with:\n          node-version: 12.x\n      - name: Setup NPM Latest\n        run: npm i -g npm\n      - name: Install Dependencies\n        run: npm i\n\n      - name: Create Release Pull Request or Publish to npm\n        uses: changesets/action@master\n        with:\n          # this expects you to have a script called release which does a build for your packages and calls changeset publish\n          publish: npm run release\n          version: npm run version-packages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n```\n\n3. Add `NPM_TOKEN` to your github repo secret settings\n\nBy [[nodejs-tips]]:\n\n```bash\nnpm token create\n```\n\nDone.\n\nEvery time you use `npx changeset` to generate a new changeset intent, and the change is pulled to the `main` branch, then CI will create a pull request to generate a new version, and after the pull request was merged, CI will publish npm packages, and create a new release.\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[git-workflows]: git-workflows.md \"Git workflows\"\n[nodejs-tips]: nodejs-tips.md \"Nodejs Tips\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/nodejs-setup-for-debian/","title":"Nodejs Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Server\n  - Javascript\n  - Setup\n  - Debian\n  - Programming-Languages\n---\n\n# Nodejs Setup for Debian\n\n## Install\n\nSee also [here](https://github.com/nodesource/distributions/blob/master/README.md)\n\n```bash\n# Using Debian, as root\ncurl -fsSL https://deb.nodesource.com/setup_14.x | bash -\napt-get install -y nodejs\n```\n"},{"fields":{"slug":"/nodejs-tips/","title":"Nodejs Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Javascript\n  - Tips\n  - Programming-Languages\n---\n\n# Nodejs Tips\n\n## Answers\n\n### Delete node_modules folder recursively from a specified path using command line\n\n> [Delete node_modules folder recursively from a specified path using command line - Stack Overflow](https://stackoverflow.com/questions/42950501/delete-node-modules-folder-recursively-from-a-specified-path-using-command-line)\n\n```bash\nfind . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n```\n\n### Get NPM Token\n\n```bash\nnpm token create\n```\n\n### Check NPM modules updates\n\n```bash\nnpx npm-check-updates\n```\n\nUpdate to the latest version:\n\n```bash\nnpx npm-check-updates -u\n```\n"},{"fields":{"slug":"/now/","title":"What I’m doing now?"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: What I’m doing now?\ntags:\n  - Now\n  - Journal\n  - Me\n---\n\n> This is a [now](https://nownownow.com/about) page, read more about me at [[about]] page or [[projects]] page.\n\n## Sounds Now\n\n- [BBC Radio 6 Music](https://www.bbc.co.uk/sounds/play/live:bbc_6music)\n- [BBC Radio 1 Relax](https://www.bbc.co.uk/sounds/play/live:bbc_radio_one_relax)\n\n> 目前使用 [@hzlzh](https://twitter.com/hzlzh) 开发的[Menubarx](https://menubarx.app) , 打开 BBC sounds 的网页版（BBC 广播的网页版和客户端都做的非常棒），保存书签，下次即可接着收听，方便快捷。\n\n## Projects now\n\n- **Maintaining [Denoflow](https://github.com/denoflow/denoflow)**\n\n  [Denoflow](https://github.com/denoflow/denoflow) is an automate workflows based on Deno/Typescript/Javascript\n\n- **Maintaining [Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki)**\n- **Maintaining [Track Awesome List](https://www.trackawesomelist.com)**\n- **Maintaining [Actionsflow](https://github.com/actionsflow/actionsflow)**\n\n  [Actionsflow](https://github.com/actionsflow/actionsflow) helps you automate workflows - it's a free [IFTTT](https://ifttt.com/)/[Zapier](https://zapier.com/) alternative for developers. With [Actionsflow](https://github.com/actionsflow/actionsflow) you can connect your favorite apps, data, and APIs, receive notifications of actions as they occur, sync files, collect data, and more.\n\n- **Maintaining [Buzzing](https://www.buzzing.cc/)**\n\n  You can use [Buzzing](https://www.buzzing.cc/) to see hot discussions in your native language. Browse in your native language, Read more into the original text. Currently, it supports Chinese, I hope it can support more languages, and more topics.\n\n- **Starting a new Project about merchandising**\n\n  I'm ready into a new app about fresh food merchandising, hope I can get it online soon.\n\n- **Writing Letters**\n\n  Recently, I found a new penpal app [SLOWLY](https://slowly.app/en/), SLOWLY lets you meet pen pals from your smartphone! Match with someone that shares your passion, write a letter and collect stamps from around the world. Speak your mind – one letter at a time! I really like it, and now I have 5 firends.\n\n- **Practicing English**\n\n  I'm a failure of English learning. I've learned English more than 10 years, but it still sucks, so I registered a Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung) for only English tweets, and this [blog](https://blog.owenyoung.com) to force me to use more English. It's Feb, 01, 2021 today when I writing this, I hope this is my last goal after making so many goals. Once I reach my goal, I'll update here.\n\n## Goals\n\n- [[goals-2022]]\n- [[goals-2021]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[about]: about.md \"About Me\"\n[projects]: projects.md \"Projects\"\n[goals-2022]: goals-2022.md \"2022 Goals\"\n[goals-2021]: goals-2021.md \"2021 Goals\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/open-bbr-for-debian/","title":"Open BBR for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Debian\n  - Server\n  - BBR\n  - Proxies\n---\n\n# Open BBR for Debian\n\n## Steps\n\n1. Open the following configuration file to enable enable TCP BBR.\n\n```bash\nvi /etc/sysctl.conf\n```\n\n2. At the end of the config file, add the following lines.\n\n```bash\nnet.core.default_qdisc=fq\nnet.ipv4.tcp_congestion_control=bbr\n```\n\n3. reload\n\n```bash\nsysctl -p\n```\n\nNow, Verify if BBR is enabled in your system,\n\n```bash\nsysctl net.ipv4.tcp_congestion_control\n```\n\nOutput:\n\n```bash\nroot@vps:~# sysctl net.ipv4.tcp_congestion_control\nnet.ipv4.tcp_congestion_control = bbr\n```\n"},{"fields":{"slug":"/peertube-setup/","title":"Peertube Setup with Caddy Server"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Peertube Setup with Caddy Server\ntags:\n  - Peertube\n  - Setup\n---\n\nPeertube is an activityPub-federated video streaming platform using P2P directly in your web browser.\n\nAlso see [here](https://github.com/Chocobozzz/PeerTube/blob/develop/support/doc/production.md)\n\n## Pre Requirement\n\n1. [[debian-server-setup]]\n2. [[caddy2-setup-for-debian]]\n3. [[nodejs-setup-for-debian]]\n4. Install yarn, and be sure to have [a recent version](https://github.com/yarnpkg/yarn/releases/latest):\n   [https://yarnpkg.com/en/docs/install#linux-tab](https://yarnpkg.com/en/docs/install#linux-tab)\n\n```bash\nsudo npm i -g yarn\n```\n\n4. Install Python:\n\nOn Ubuntu <= bionic (18.04 LTS) or Debian <= Buster:\n\n```\nsudo apt update\nsudo apt install python-dev\npython --version # Should be >= 2.x or >= 3.x\n```\n\nOn Ubuntu >= focal (20.04 LTS) or Debian >= Bullseye:\n\n```\nsudo apt update\nsudo apt install python3-dev python-is-python3 # python-is-python2 should also work\npython --version # Should be >= 2.x or >= 3.x\n```\n\n## Install\n\n1. Install common dependencies:\n\n```\nsudo apt update\nsudo apt install certbot nginx ffmpeg postgresql postgresql-contrib openssl g++ make redis-server git cron wget\nffmpeg -version # Should be >= 4.1\ng++ -v # Should be >= 5.x\n```\n\nNow that dependencies are installed, before running PeerTube you should start PostgreSQL and Redis:\n\n```\nsudo systemctl start redis postgresql\n```\n\n### PeerTube user\n\nCreate a `peertube` user with `/var/www/peertube` home:\n\n```\n$ sudo useradd -m -d /var/www/peertube -s /bin/bash -p peertube peertube\n```\n\nSet its password:\n\n```\n$ sudo passwd peertube\n```\n\n### Database\n\nCreate the production database and a peertube user inside PostgreSQL:\n\n```\n$ cd /var/www/peertube\n$ sudo -u postgres createuser -P peertube\n```\n\nFor password you can use `peertube` from the default config yaml.\n\nHere you should enter a password for PostgreSQL `peertube` user, that should be copied in `production.yaml` file.\nDon't just hit enter else it will be empty.\n\n```\n$ sudo -u postgres createdb -O peertube -E UTF8 -T template0 peertube_prod\n```\n\nThen enable extensions PeerTube needs:\n\n```\n$ sudo -u postgres psql -c \"CREATE EXTENSION pg_trgm;\" peertube_prod\n$ sudo -u postgres psql -c \"CREATE EXTENSION unaccent;\" peertube_prod\n```\n\n### Prepare PeerTube directory\n\nFetch the latest tagged version of Peertube\n\n```\n$ VERSION=$(curl -s https://api.github.com/repos/chocobozzz/peertube/releases/latest | grep tag_name | cut -d '\"' -f 4) && echo \"Latest Peertube version is $VERSION\"\n```\n\nOpen the peertube directory, create a few required directories\n\n```\n$ cd /var/www/peertube\n$ sudo -u peertube mkdir config storage versions\n$ sudo -u peertube chmod 750 config/\n```\n\nDownload the latest version of the Peertube client, unzip it and remove the zip\n\n```\n$ cd /var/www/peertube/versions\n$ sudo -u peertube wget -q \"https://github.com/Chocobozzz/PeerTube/releases/download/${VERSION}/peertube-${VERSION}.zip\"\n$ sudo -u peertube unzip -q peertube-${VERSION}.zip && sudo -u peertube rm peertube-${VERSION}.zip\n```\n\nInstall Peertube:\n\n```\ncd /var/www/peertube\nsudo -u peertube ln -s versions/peertube-${VERSION} ./peertube-latest\ncd ./peertube-latest\nsudo -H -u peertube yarn install --production --pure-lockfile\n```\n\n### PeerTube configuration\n\nCopy the default configuration file that contains the default configuration provided by PeerTube.\nYou **must not** update this file.\n\n```\n$ cd /var/www/peertube\n$ sudo -u peertube cp peertube-latest/config/default.yaml config/default.yaml\n```\n\nNow copy the production example configuration:\n\n```\n$ cd /var/www/peertube\n$ sudo -u peertube cp peertube-latest/config/production.yaml.example config/production.yaml\n```\n\nThen edit the `config/production.yaml` file according to your webserver\nand database configuration (`webserver`, `database`, `redis`, `smtp` and `admin.email` sections in particular).\nKeys defined in `config/production.yaml` will override keys defined in `config/default.yaml`.\n\n**PeerTube does not support webserver host change**. Even though [PeerTube CLI can help you to switch hostname](https://docs.joinpeertube.org/maintain-tools?id=update-hostjs) there's no official support for that since it is a risky operation that might result in unforeseen errors.\n\n### Webserver\n\nWe only provide official configuration files for Nginx.\n\nCopy the nginx configuration template:\n\n```\n$ sudo /etc/nginx/sites-available/peertube\n```\n\nwith the following config:\n\n```conf\n# Minimum Nginx version required:  1.13.0 (released Apr 25, 2017)\n# Please check your Nginx installation features the following modules via 'nginx -V':\n# STANDARD HTTP MODULES: Core, Proxy, Rewrite, Access, Gzip, Headers, HTTP/2, Log, Real IP, SSL, Thread Pool, Upstream, AIO Multithreading.\n# THIRD PARTY MODULES:   None.\n\nupstream backend {\n  server 127.0.0.1:9000;\n}\n\nserver {\n  listen 8880;\n  listen [::]:8880;\n  access_log /var/log/nginx/peertube.access.log; # reduce I/0 with buffer=10m flush=5m\n  error_log  /var/log/nginx/peertube.error.log;\n\n  ##\n  # Certificates\n  # you need a certificate to run in production. see https://letsencrypt.org/\n  ##\n\n  location @api {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host  $host;\n    proxy_set_header X-Real-IP       $remote_addr;\n\n    client_max_body_size  100k; # default is 1M\n\n    proxy_connect_timeout 10m;\n    proxy_send_timeout    10m;\n    proxy_read_timeout    10m;\n    send_timeout          10m;\n\n    proxy_pass http://backend;\n  }\n\n  location / {\n    try_files /dev/null @api;\n  }\n\n  location = /api/v1/videos/upload-resumable {\n    client_max_body_size    0;\n    proxy_request_buffering off;\n\n    try_files /dev/null @api;\n  }\n\n  location = /api/v1/videos/upload {\n    limit_except POST HEAD { deny all; }\n\n    # This is the maximum upload size, which roughly matches the maximum size of a video file.\n    # Note that temporary space is needed equal to the total size of all concurrent uploads.\n    # This data gets stored in /var/lib/nginx by default, so you may want to put this directory\n    # on a dedicated filesystem.\n    client_max_body_size                      12G; # default is 1M\n    add_header            X-File-Maximum-Size 8G always; # inform backend of the set value in bytes before mime-encoding (x * 1.4 >= client_max_body_size)\n\n    try_files /dev/null @api;\n  }\n\n  location ~ ^/api/v1/(videos|video-playlists|video-channels|users/me) {\n    client_max_body_size                      6M; # default is 1M\n    add_header            X-File-Maximum-Size 4M always; # inform backend of the set value in bytes before mime-encoding (x * 1.4 >= client_max_body_size)\n\n    try_files /dev/null @api;\n  }\n\n  ##\n  # Websocket\n  ##\n\n  location @api_websocket {\n    proxy_http_version 1.1;\n    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header   Host            $host;\n    proxy_set_header   X-Real-IP       $remote_addr;\n    proxy_set_header   Upgrade         $http_upgrade;\n    proxy_set_header   Connection      \"upgrade\";\n\n    proxy_pass http://backend;\n  }\n\n  location /socket.io {\n    try_files /dev/null @api_websocket;\n  }\n\n  location /tracker/socket {\n    # Peers send a message to the tracker every 15 minutes\n    # Don't close the websocket before then\n    proxy_read_timeout 15m; # default is 60s\n\n    try_files /dev/null @api_websocket;\n  }\n\n  ##\n  # Performance optimizations\n  # For extra performance please refer to https://github.com/denji/nginx-tuning\n  ##\n\n  root /var/www/peertube/storage;\n\n  # Enable compression for JS/CSS/HTML, for improved client load times.\n  # It might be nice to compress JSON/XML as returned by the API, but\n  # leaving that out to protect against potential BREACH attack.\n  gzip              on;\n  gzip_vary         on;\n  gzip_types        # text/html is always compressed by HttpGzipModule\n                    text/css\n                    application/javascript\n                    font/truetype\n                    font/opentype\n                    application/vnd.ms-fontobject\n                    image/svg+xml;\n  gzip_min_length   1000; # default is 20 bytes\n  gzip_buffers      16 8k;\n  gzip_comp_level   2; # default is 1\n\n  client_body_timeout       30s; # default is 60\n  client_header_timeout     10s; # default is 60\n  send_timeout              10s; # default is 60\n  keepalive_timeout         10s; # default is 75\n  resolver_timeout          10s; # default is 30\n  reset_timedout_connection on;\n  proxy_ignore_client_abort on;\n\n  tcp_nopush                on; # send headers in one piece\n  tcp_nodelay               on; # don't buffer data sent, good for small data bursts in real time\n\n  # If you have a small /var/lib partition, it could be interesting to store temp nginx uploads in a different place\n  # See https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path\n  #client_body_temp_path /var/www/peertube/storage/nginx/;\n\n  # Bypass PeerTube for performance reasons. Optional.\n  # Should be consistent with client-overrides assets list in /server/controllers/client.ts\n  location ~ ^/client/(assets/images/(icons/icon-36x36\\.png|icons/icon-48x48\\.png|icons/icon-72x72\\.png|icons/icon-96x96\\.png|icons/icon-144x144\\.png|icons/icon-192x192\\.png|icons/icon-512x512\\.png|logo\\.svg|favicon\\.png))$ {\n    add_header Cache-Control \"public, max-age=31536000, immutable\"; # Cache 1 year\n\n    root /var/www/peertube;\n\n    try_files /storage/client-overrides/$1 /peertube-latest/client/dist/$1 @api;\n  }\n\n  # Bypass PeerTube for performance reasons. Optional.\n  location ~ ^/client/(.*\\.(js|css|png|svg|woff2|otf|ttf|woff|eot))$ {\n    add_header Cache-Control \"public, max-age=31536000, immutable\"; # Cache 1 year\n\n    alias /var/www/peertube/peertube-latest/client/dist/$1;\n  }\n\n  # Bypass PeerTube for performance reasons. Optional.\n  location ~ ^/static/(thumbnails|avatars)/ {\n    if ($request_method = 'OPTIONS') {\n      add_header Access-Control-Allow-Origin  '*';\n      add_header Access-Control-Allow-Methods 'GET, OPTIONS';\n      add_header Access-Control-Allow-Headers 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n      add_header Access-Control-Max-Age       1728000; # Preflight request can be cached 20 days\n      add_header Content-Type                 'text/plain charset=UTF-8';\n      add_header Content-Length               0;\n      return 204;\n    }\n\n    add_header Access-Control-Allow-Origin    '*';\n    add_header Access-Control-Allow-Methods   'GET, OPTIONS';\n    add_header Access-Control-Allow-Headers   'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n    add_header Cache-Control                  \"public, max-age=7200\"; # Cache response 2 hours\n\n    rewrite ^/static/(.*)$ /$1 break;\n\n    try_files $uri @api;\n  }\n\n  # Bypass PeerTube for performance reasons. Optional.\n  location ~ ^/static/(webseed|redundancy|streaming-playlists)/ {\n    limit_rate_after            5M;\n\n    # Clients usually have 4 simultaneous webseed connections, so the real limit is 3MB/s per client\n    set $peertube_limit_rate    800k;\n\n    # Increase rate limit in HLS mode, because we don't have multiple simultaneous connections\n    if ($request_uri ~ -fragmented.mp4$) {\n      set $peertube_limit_rate  5M;\n    }\n\n    # Use this line with nginx >= 1.17.0\n    #limit_rate $peertube_limit_rate;\n    # Or this line if your nginx < 1.17.0\n    set $limit_rate $peertube_limit_rate;\n\n    if ($request_method = 'OPTIONS') {\n      add_header Access-Control-Allow-Origin  '*';\n      add_header Access-Control-Allow-Methods 'GET, OPTIONS';\n      add_header Access-Control-Allow-Headers 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n      add_header Access-Control-Max-Age       1728000; # Preflight request can be cached 20 days\n      add_header Content-Type                 'text/plain charset=UTF-8';\n      add_header Content-Length               0;\n      return 204;\n    }\n\n    if ($request_method = 'GET') {\n      add_header Access-Control-Allow-Origin  '*';\n      add_header Access-Control-Allow-Methods 'GET, OPTIONS';\n      add_header Access-Control-Allow-Headers 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n\n      # Don't spam access log file with byte range requests\n      access_log off;\n    }\n\n    # Enabling the sendfile directive eliminates the step of copying the data into the buffer\n    # and enables direct copying data from one file descriptor to another.\n    sendfile on;\n    sendfile_max_chunk 1M; # prevent one fast connection from entirely occupying the worker process. should be > 800k.\n    aio threads;\n\n    rewrite ^/static/webseed/(.*)$ /videos/$1 break;\n    rewrite ^/static/(.*)$         /$1        break;\n\n    try_files $uri @api;\n  }\n}\n```\n\nAdd caddy config:\n\n```conf\nexample.com {\n\treverse_proxy 127.0.0.1:8880\n}\n```\n\nThen modify the webserver configuration file. Please pay attention to the `alias` keys of the static locations.\nIt should correspond to the paths of your storage directories (set in the configuration file inside the `storage` key).\n\n```\n$ sudo vim /etc/nginx/sites-available/peertube\n```\n\nActivate the configuration file:\n\n```\n$ sudo ln -s /etc/nginx/sites-available/peertube /etc/nginx/sites-enabled/peertube\n```\n\nTo generate the certificate for your domain as required to make https work you can use [Let's Encrypt](https://letsencrypt.org/):\n\n```\n$ sudo systemctl stop nginx\n$ sudo certbot certonly --standalone --post-hook \"systemctl restart nginx\"\n$ sudo systemctl reload nginx\n```\n\nNow you have the certificates you can reload nginx:\n\n```\n$ sudo systemctl reload nginx\n```\n\nCertbot should have installed a cron to automatically renew your certificate.\nSince our nginx template supports webroot renewal, we suggest you to update the renewal config file to use the `webroot` authenticator:\n\n```\n$ # Replace authenticator = standalone by authenticator = webroot\n$ # Add webroot_path = /var/www/certbot\n$ sudo vim /etc/letsencrypt/renewal/your-domain.com.conf\n```\n\n### TCP/IP Tuning\n\n**On Linux**\n\n```\n$ sudo cp /var/www/peertube/peertube-latest/support/sysctl.d/30-peertube-tcp.conf /etc/sysctl.d/\n$ sudo sysctl -p /etc/sysctl.d/30-peertube-tcp.conf\n```\n\nYour distro may enable this by default, but at least Debian 9 does not, and the default FIFO\nscheduler is quite prone to \"Buffer Bloat\" and extreme latency when dealing with slower client\nlinks as we often encounter in a video server.\n\n### systemd\n\nIf your OS uses systemd, copy the configuration template:\n\n```\n$ sudo cp /var/www/peertube/peertube-latest/support/systemd/peertube.service /etc/systemd/system/\n```\n\nCheck the service file (PeerTube paths and security directives):\n\n```\n$ sudo vim /etc/systemd/system/peertube.service\n```\n\nTell systemd to reload its config:\n\n```\n$ sudo systemctl daemon-reload\n```\n\nIf you want to start PeerTube on boot:\n\n```\n$ sudo systemctl enable peertube\n```\n\nRun:\n\n```\n$ sudo systemctl start peertube\n$ sudo journalctl -feu peertube\n```\n\nRun:\n\n```\n$ sudo service peertube start\n```\n\n### Administrator\n\nThe administrator password is automatically generated and can be found in the PeerTube\nlogs (path defined in `production.yaml`). You can also set another password with:\n\n```\n$ cd /var/www/peertube/peertube-latest && NODE_CONFIG_DIR=/var/www/peertube/config NODE_ENV=production npm run reset-password -- -u root\n```\n\nAlternatively you can set the environment variable `PT_INITIAL_ROOT_PASSWORD`,\nto your own administrator password, although it must be 6 characters or more.\n\n### What now?\n\nNow your instance is up you can:\n\n- Add your instance to the public PeerTube instances index if you want to: https://instances.joinpeertube.org/\n- Check [available CLI tools](/support/doc/tools.md)\n\n## Upgrade\n\n### PeerTube instance\n\n**Check the changelog (in particular BREAKING CHANGES!):** https://github.com/Chocobozzz/PeerTube/blob/develop/CHANGELOG.md\n\n#### Auto\n\nThe password it asks is PeerTube's database user password.\n\n```\n$ cd /var/www/peertube/peertube-latest/scripts && sudo -H -u peertube ./upgrade.sh\n$ sudo systemctl restart peertube # Or use your OS command to restart PeerTube if you don't use systemd\n```\n\n#### Manually\n\nMake a SQL backup\n\n```\n$ SQL_BACKUP_PATH=\"backup/sql-peertube_prod-$(date -Im).bak\" && \\\n    cd /var/www/peertube && sudo -u peertube mkdir -p backup && \\\n    sudo -u postgres pg_dump -F c peertube_prod | sudo -u peertube tee \"$SQL_BACKUP_PATH\" >/dev/null\n```\n\nFetch the latest tagged version of Peertube:\n\n```\n$ VERSION=$(curl -s https://api.github.com/repos/chocobozzz/peertube/releases/latest | grep tag_name | cut -d '\"' -f 4) && echo \"Latest Peertube version is $VERSION\"\n```\n\nDownload the new version and unzip it:\n\n```\n$ cd /var/www/peertube/versions && \\\n    sudo -u peertube wget -q \"https://github.com/Chocobozzz/PeerTube/releases/download/${VERSION}/peertube-${VERSION}.zip\" && \\\n    sudo -u peertube unzip -o peertube-${VERSION}.zip && \\\n    sudo -u peertube rm peertube-${VERSION}.zip\n```\n\nInstall node dependencies:\n\n```\n$ cd /var/www/peertube/versions/peertube-${VERSION} && \\\n    sudo -H -u peertube yarn install --production --pure-lockfile\n```\n\nCopy new configuration defaults values and update your configuration file:\n\n```\n$ sudo -u peertube cp /var/www/peertube/versions/peertube-${VERSION}/config/default.yaml /var/www/peertube/config/default.yaml\n$ diff /var/www/peertube/versions/peertube-${VERSION}/config/production.yaml.example /var/www/peertube/config/production.yaml\n```\n\nChange the link to point to the latest version:\n\n```\n$ cd /var/www/peertube && \\\n    sudo unlink ./peertube-latest && \\\n    sudo -u peertube ln -s versions/peertube-${VERSION} ./peertube-latest\n```\n\n### nginx\n\nCheck changes in nginx configuration:\n\n```\n$ cd /var/www/peertube/versions\n$ diff \"$(ls --sort=t | head -2 | tail -1)/support/nginx/peertube\" \"$(ls --sort=t | head -1)/support/nginx/peertube\"\n```\n\n### systemd\n\nCheck changes in systemd configuration:\n\n```\n$ cd /var/www/peertube/versions\n$ diff \"$(ls --sort=t | head -2 | tail -1)/support/systemd/peertube.service\" \"$(ls --sort=t | head -1)/support/systemd/peertube.service\"\n```\n\n### Restart PeerTube\n\nIf you changed your nginx configuration:\n\n```\n$ sudo systemctl reload nginx\n```\n\nIf you changed your systemd configuration:\n\n```\n$ sudo systemctl daemon-reload\n```\n\nRestart PeerTube and check the logs:\n\n```\n$ sudo systemctl restart peertube && sudo journalctl -fu peertube\n```\n\n### Things went wrong?\n\nChange `peertube-latest` destination to the previous version and restore your SQL backup:\n\n```\n$ OLD_VERSION=\"v0.42.42\" && SQL_BACKUP_PATH=\"backup/sql-peertube_prod-2018-01-19T10:18+01:00.bak\" && \\\n    cd /var/www/peertube && sudo -u peertube unlink ./peertube-latest && \\\n    sudo -u peertube ln -s \"versions/peertube-$OLD_VERSION\" peertube-latest && \\\n    sudo -u postgres pg_restore -c -C -d postgres \"$SQL_BACKUP_PATH\" && \\\n    sudo systemctl restart peertube\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[debian-server-setup]: debian-server-setup.md \"Debian Server Setup\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[nodejs-setup-for-debian]: nodejs-setup-for-debian.md \"Nodejs Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/postgres-setup-for-debian/","title":"Postgres Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Postgres Setup for Debian\ntags:\n  - Postgres\n  - Debian\n  - Setup\n---\n\n## Install\n\n```bash\nsudo sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\nwget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\nsudo apt-get update\nsudo apt-get -y install postgresql\n```\n\n### Optional\n\nInstall postgis\n\n```bash\nsudo apt -y install postgis\n```\n"},{"fields":{"slug":"/postgres-setup-for-macos/","title":"Postgres Setup for Macos"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Postgres Setup for Macos\ntags:\n  - Postgres\n  - MacOS\n  - Setup\n---\n\n## Install\n\n```bash\nbrew install postgresql\nbrew services start postgresql\n```\n"},{"fields":{"slug":"/postgresql-tips/","title":"Postgresql Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Postgresql Tips\ntags:\n  - Postgresql\n  - Tips\n---\n\n## 0. Enter psql\n\n```bash\npsql\n```\n\n## Show all databases\n\n```bash\n\\l\n```\n\n## Enter Database\n\n```bash\n\\c database_name\n```\n\n## Show all Tables\n\n```bash\n\\d\n```\n\n## Show Table structure\n\n```bash\n\\d table_name\n```\n\n## Pretty print table\n\n```bash\n\\x on\n```\n\n## Alter table\n\nSee <https://www.postgresql.org/docs/current/sql-altertable.html>\n\n## Upsert\n\nSee <https://stackoverflow.com/questions/61494958/postgres-on-conflict-do-update-only-non-null-values-in-python>\n\n## Export Schema\n\n```bash\n pg_dump database_name -s --no-owner > schema.sql\n```\n\n## Export Only data\n\n```bash\n pg_dump database_name -a --no-owner > data.sql\n```\n\n## Delete or Drop or Remove Database\n\n```bash\npsql\ndrop database database_name;\n```\n\n## Create Database\n\n```bash\npsql\nCREATE DATABASE name;\n```\n\n## Import Database\n\n```bash\npsql database_name < data.sql\n```\n"},{"fields":{"slug":"/projects/","title":"Projects"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Projects\ntags:\n  - Projects\n  - Me\n---\n\nThis is a list of projects I've done and am doing.\n\n## List\n\n- **Maintaining [Denoflow](https://github.com/denoflow/denoflow)**\n\n  [Denoflow](https://github.com/denoflow/denoflow)\\*\\* is an automate workflows based on Deno/Typescript/Javascript\n\n- **[Track Awesome List](https://www.trackawesomelist.com)**\n\n  Track your favorite github awesome repo, not just star it. trackawesomelist.com provides website, newsletter, RSS for tracking the popular awesome list by daily and weekly.\n\n- **[Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki)**\n\n  A gatsby theme for wiki site. Like this site is using the theme to generate. Cause this wiki is a thing that I want to maintain the whole life, so the theme would be maintain for a long time.\n\n- **[Actionsflow](https://github.com/actionsflow/actionsflow)**\n\n  [Actionsflow](https://github.com/actionsflow/actionsflow) helps you automate workflows - it's a free [IFTTT](https://ifttt.com/)/[Zapier](https://zapier.com/) alternative for developers. With [Actionsflow](https://github.com/actionsflow/actionsflow) you can connect your favorite apps, data, and APIs, receive notifications of actions as they occur, sync files, collect data, and more. We implemented it based on [Github actions](https://docs.github.com/en/actions), and you use a YAML file to build your workflows. The configuration format is the same as [Github actions](https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow), which makes it easy for you to get going if you've explored Github actions before. You can also use any [Github actions](https://github.com/marketplace?type=actions) as your job's steps.\n\n- **[Buzzing](https://www.buzzing.cc)**\n\n  You can use [Buzzing](https://www.buzzing.cc/) to see hot discussions in your native language. Browse in your native language, Read more into the original text. Currently, it supports Chinese, Japanese, English, you can find topics like [Buzzing on Reddit](https://reddit.buzzing.cc), [Buzzing on Stocks](https://stocks.buzzing.cc), [Buzzing on Product Hunt](https://ph.buzzing.cc), [Buzzing on Hacker News](https://hn.buzzing.cc/), [Buzzing on Reddit ASK](https://ask.buzzing.cc/), etc.\n\n- **[Gatsby Theme Timeline](https://github.com/theowenyoung/gatsby-theme-timeline)**\n\n  A Gatsby theme, you can use it to show your all posts, tweets, instagram posts etc into one blog. In my opinion, this is a real personal home.\n"},{"fields":{"slug":"/qbittorrent-setup-for-debian/","title":"qBittorrent setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Downloads\n  - BT\n  - Torrents\n  - qBittorrent\n  - Jackett\n  - Debian\n  - Setup\n  - Server\n---\n\n# qBittorrent setup for Debian\n\n## Install\n\nBecause there is no official ppa of qBittorrent for debian, so we use a [third party service - qbittorrent-nox-static](https://github.com/userdocs/qbittorrent-nox-static) to compile qb.\n\n1. Download script\n\n```bash\nwget -qO ~/qbittorrent-nox-static.sh https://git.io/qbstatic\nchmod +x ~/qbittorrent-nox-static.sh\n# pre\nsudo ~/qbittorrent-nox-static.sh\n# build\n~/qbittorrent-nox-static.sh all\n# install\nsudo ~/qbittorrent-nox-static.sh install\n```\n\n## Configure\n\nRead more at [qbittorrent-nox configure](https://userdocs.github.io/qbittorrent-nox-static/#/install-qbittorrent?id=configuring-qbittorrent)\n\n```bash\nvim ~/.config/qBittorrent/qBittorrent.conf\n```\n\nWith follow config:\n\n```ini\n[LegalNotice]\nAccepted=true\n\n[Preferences]\nWebUI\\Port=8080\nWebUI\\HostHeaderValidation=false\n```\n\n## Systemd service\n\nReference at [here](https://userdocs.github.io/qbittorrent-nox-static/#/systemd)\n\n```bash\n# create a user\nsudo vim /etc/systemd/system/qbittorrent.service\n```\n\nConfig:\n\n```bash\n[Unit]\nDescription=qBittorrent-nox service\nWants=network-online.target\nAfter=network-online.target nss-lookup.target\n\n[Service]\nType=exec\nUser=qbtuser\nExecStart=/usr/local/bin/qbittorrent-nox\nRestart=on-failure\nSyslogIdentifier=qbittorrent-nox\n\n[Install]\nWantedBy=multi-user.target\n```\n\nAfter any changes to the services reload using this command.\n\n```bash\nsudo systemctl daemon-reload\n```\n\nNow you can enable the service\n\n```bash\nsudo systemctl enable --now qbittorrent.service\n```\n\nNow you can use these commands\n\n```bash\nsystemctl stop qbittorrent\nsystemctl start qbittorrent\nsystemctl restart qbittorrent\nsystemctl status qbittorrent\n\n```\n\n## Reverse Proxy (Optional)\n\nUse Caddy to access qBittorrent with domain. This should install [[caddy2-setup-for-debian]]\n\nConfig:\n\n```bash\nexample.com {\n   push\n   reverse_proxy 127.0.0.1:8080\n}\n\n```\n\nNow, you can access your qBittorrent web UI at: example.com, the default username and password is : admin/adminadmin\n\n> Note, you should change the default username/password\n\n## Config\n\n- Download directory, `/data/Downloads`\n- Settings, auto add [China](https://github.com/XIU2/TrackersListCollection) <https://trackerslist.com/best.txt> , [US](https://github.com/ngosang/trackerslist) <https://ngosang.github.io/trackerslist/trackers_best.txt>\n- Open `announce_to_all_trackers` at settings.\n\n## Install Search Plugin Jackett\n\n[Jackett](https://github.com/Jackett/Jackett) is a server program that provides support for more than 400 torrent sites (public and private).\n\n### Install Jackett\n\nSee [[jackett-setup]]\n\n### Install Jackett Plugin\n\nSee also at [here](https://github.com/qbittorrent/search-plugins/wiki/How-to-configure-Jackett-plugin)\n\nOpen qBittorrent Web UI, In the Search tab, click the Search plugins... button (bottom-right) -> add new plugin -> `https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/jackett.py`\n\nChange API key settings, You can get it from Jackett UI\n\n```bash\nvim ~/.local/share/qBittorrent/nova3/engines/jackett.json\n```\n\n## Resource\n\n[高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[jackett-setup]: jackett-setup.md \"Jackett Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/radarr-setup/","title":"Radarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Radarr\n  - Setup\n  - Self-Hosted\n---\n\n# Radarr Setup\n\n[repo](https://github.com/Radarr/Radarr)\n\n## Install\n\nSee also [here](https://wiki.servarr.com/radarr/installation#linux)\n\n[Latest Release](https://github.com/Radarr/Radarr/releases)\n\n### Systemd\n\n```bash\ncat << EOF | sudo tee /etc/systemd/system/radarr.service > /dev/null\n[Unit]\nDescription=Radarr Daemon\nAfter=syslog.target network.target\n[Service]\nUser=green\nGroup=admin\nType=simple\n\nExecStart=/home/green/radarr/Radarr -nobrowser -data=/home/green/.config/radarr/\nTimeoutStopSec=20\nKillMode=process\nRestart=always\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n"},{"fields":{"slug":"/rclone-setup/","title":"Rclone Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Rclone\n  - Setup\n  - Files\n---\n\n# Rclone Setup\n\n## Install\n\n```bash\ncurl https://rclone.org/install.sh | sudo bash\n```\n\nAlso see [here](https://rclone.org/drive/)\n\n## Transfer\n\n```bash\ncat ~/.config/rclone\n```\n\nCopy that to another machine.\n\n## Web UI\n\n```bash\nrclone rcd --rc-web-gui --rc-user=test --rc-pass=test --rc-web-gui-update --stats=24h --rc-enable-metrics --rc-web-gui-no-open-browser\n```\n"},{"fields":{"slug":"/ruby-setup/","title":"Ruby Setup for MacOS"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Ruby Setup for MacOS\ntags:\n  - Setup\n  - Ruby\n---\n\n## Install\n\n```bash\nbrew install rbenv\nrbenv init\n\n# add eval \"$(rbenv init -)\" to ~/.zshrc\nRUBY_CONFIGURE_OPTS=--with-jemalloc rbenv install 2.7.4\nrbenv global 2.7.4\ngem install bundler --no-document\n```\n"},{"fields":{"slug":"/rust-enviroment-setup-for-debian/","title":"Rust Environment Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Rust\n  - Debian\n  - Setup\n---\n\n# Rust Environment Setup for Debian\n\n[Official Site](https://www.rust-lang.org/learn/get-started)\n\n## Rust 镜像设置\n\n<https://rsproxy.cn/>\n\nAdd this to `~/.bashrc`\n\n```bash\nexport RUSTUP_DIST_SERVER=\"https://rsproxy.cn\"\nexport RUSTUP_UPDATE_ROOT=\"https://rsproxy.cn/rustup\"\n```\n\nInstall rustup `curl --proto '=https' --tlsv1.2 -sSf https://rsproxy.cn/rustup-init.sh | sh`\n\n`~/.cargo/config`:\n\n```bash\n[source.crates-io]\nreplace-with = 'rsproxy'\n\n[source.rsproxy]\nregistry = \"https://rsproxy.cn/crates.io-index\"\n\n[registries.rsproxy]\nindex = \"https://rsproxy.cn/crates.io-index\"\n\n[net]\ngit-fetch-with-cli = true\n```\n\n## Install\n\n```bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n"},{"fields":{"slug":"/rust-tips/","title":"Rust Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Rust Tips\ntags:\n  - Rust\n  - Tips\n---\n\nCurating rust tips.\n\n1. Test with print\n\n```bash\ncargo test -- --nocapture\n```\n"},{"fields":{"slug":"/shadowsocks-rust-setup-for-debian/","title":"Shadowsocks Rust Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Shadowsocks\n  - Rust\n  - Setup\n  - Debian\n  - Proxies\n---\n\n# Shadowsocks Rust Setup for Debian\n\nRepo: <https://github.com/shadowsocks/shadowsocks-rust>\n\nSetup rust first: [[rust-enviroment-setup-for-debian]]\n\n## Install\n\n```bash\nrustup default nightly\ncargo install shadowsocks-rust\n```\n\n## Configure\n\n```bash\nmkdir ss\n```\n\nServer config sample:\n\n```json\n{\n  \"servers\": [\n    {\n      \"address\": \"::\",\n      \"port\": 9982,\n      \"method\": \"chacha20-ietf-poly1305\",\n      \"password\": \"strong-password\",\n      \"mode\": \"tcp_and_udp\",\n      \"fast_open\": false,\n      \"timeout\": 7200\n    }\n  ]\n}\n```\n\n## Add as a system service\n\n```bash\nsudo vim /etc/systemd/system/ss.service\n```\n\n\n> Note: Change `username` to your own username\n\n```bash\n[Unit]\nDescription=ssserver service\nAfter=network.target\n\n[Service]\nExecStart=/home/username/.cargo/bin/ssserver -c /home/username/ss/config.json\nExecStop=/usr/bin/killall ssserver\nRestart=on-failure\nStandardOutput=syslog               # Output to syslog\nStandardError=syslog                # Output to syslog\nSyslogIdentifier=ss\nUser=username\nGroup=admin\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now ss\n```\n\n## Run\n\n## Status\n\n```bash\nsudo systemctl status ss\n```\n\n## Stop\n\n```bash\nsudo systemctl stop ss\n```\n\n## Update\n\n```bash\ncargo install shadowsocks-rust\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[rust-enviroment-setup-for-debian]: rust-enviroment-setup-for-debian.md \"Rust Environment Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/smart-word-break-in-css/","title":"Smart word break in CSS"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - CSS\n---\n\n# Smart word break in CSS\n\n> From [Smarter word break in CSS? - Stack Overflow](https://stackoverflow.com/a/48830291)\n\n```css\nbody {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n```\n"},{"fields":{"slug":"/sonarr-setup/","title":"Sonarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Self-Hosted\n  - Sonarr\n---\n\n# Sonarr Setup\n\nBefore setup sonarr, you should setup [[qbittorrent-setup-for-debian]]\n\n## Install\n\nSee [here](https://sonarr.tv/#downloads-v3-linux)\n\nOnce installed, visit <http://ip:8989>\n\n## Restart\n\n```bash\nsudo systemctl restart sonarr\n```\n\n## Setup\n\nSee also [Sonarr Quick Start Guide | WikiArr](https://wiki.servarr.com/sonarr/quick-start-guide)\n\n1. Click on `Settings => Media Management` on the left menu.\n\n   Check `Rename Episodes`\n\n2. Check left top `Show Advanced`\n\n   `Importing` -> `Import Extra Files` `.srt,.ass,.sub`\n\n3. Add `/data/TV` to `Root Folders`\n\n4. Indexers, Add `eztv`, `RARBG` as Indexers, see jackett home page.\n\n### Add qBittorrent Client:\n\n`Setting` -> `Download Clients ` -> `qBittorrent`\n\n## Resource\n\n- [高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[qbittorrent-setup-for-debian]: qbittorrent-setup-for-debian.md \"qBittorrent setup for Debian\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/stop/","title":"你应该立即停止做的事"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 你应该立即停止做的事\ntags:\n  - Stop\n---\n\n## 1. 停止使用 Notion 等非明文存储，运营商锁定的笔记软件\n\n应该使用本地文件，纯文本格式存储。大多数人一生的产出用一个文件夹保存已经够用了。\n\n为什么？\n\n1. 你的笔记在整个人生期间不断的完善和补充，我们需要一个经得起时间检验的规划，而纯文本文件是整个计算机系统里最基础最基本的设施，可以被任何系统，任何软件轻易的读取，写入。\n1. 享受本地全文搜索的速度。\n1. 避免了运营商锁定，如果有同步需求，你可以选择任何一个云去同步或者用 github 仓库即可。\n1. 可以选择公开你的笔记，来激励自己持续记录，总结。我有两个笔记文件夹，一个是公开笔记，一个是私有笔记，公开笔记直接放在 [Github](https://github.com/theowenyoung/wiki) 上，私有笔记放在一个私有仓库。\n"},{"fields":{"slug":"/subtitles/","title":"Subtitles"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Subtitles\n---\n\n# Subtitles\n\n## List\n\n- [ass to srt](https://sorz.github.io/asstosrt-wasm/) - ass to srt converter\n- [[bazarr-setup]] - Subtitle manager\n- [subtitles translate](https://translate-s ubtitles.com/) - Google translate subtitles\n- [Subhd](https://subhd.tv/) - Best Chinese subtitle website\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[bazarr-setup]: bazarr-setup.md \"Bazarr Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/svg/","title":"SVG"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - SVG\n  - Front-End\n---\n\n# SVG\n\n## 教程\n\n- [SVG 图像入门教程 - 阮一峰的网络日志](https://www.ruanyifeng.com/blog/2018/08/svg.html)\n"},{"fields":{"slug":"/thinking/","title":"所思所想"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 所思所想\ntags:\n  - Thinking\n  - Tweet\n---\n\n有些感想只适合记录下来，不适合发在社交网络，推送给 followers，这些想法适合放在这里。其实一个 markdown 文件已经足够记录大多数人的想法了。[twtxt](https://github.com/buckket/twtxt)就是这样一个项目。\n\n## 想法\n\n- 贵族统治并不可怕，最可怕的是没有荣誉感的贵族统治。 - 2021.12.01\n- 临近年尾，很多人都会写年度总结，但是我很抗拒点开，每点开一篇，都可能会给自己碌碌无为的一年插上一刀。 - 2021.12.31\n- 以前觉得 Gatsby 生态好繁荣，好棒啊。Gatsby 升级了几个版本之后，再也笑不出来了,所以，越少依赖越好。- 2022.02.20\n- 人应该年轻的时候多阅读，不然你就无法践行你在阅读中收获的东西了。 - 2022.02.22\n"},{"fields":{"slug":"/todo/","title":"Todos"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Todos\ntags:\n  - Todo\n---\n\n- [ ] - 写一篇文章主要指出为什么不要用运营商绑定的东西做笔记这种一辈子的东西\n- [ ] - hacker news 中文热门推特\n- [ ] - 优化 wiki 的搜索功能\n"},{"fields":{"slug":"/travel-approvals/","title":"旅行手续"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntags:\n  - Travel\n  - Approvals\n  - 中文\n---\n\n# 旅行手续\n\n## List\n\n- [如何给车辆办理“护照”出境自驾？](https://zhuanlan.zhihu.com/p/25400818) ，[备份](https://web.archive.org/web/20210825164831/https://zhuanlan.zhihu.com/p/25400818)\n\n## Communities\n\n- [Long term visas](https://longtermvisas.com/) - Travel decisions, simplified.\n\n## Tools\n\n- [预测你在世界各地的生活成本](https://gromov.com/)\n"},{"fields":{"slug":"/trivia/","title":"冷知识"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 冷知识\ntags:\n  - 冷知识\n---\n\n收集冷知识。\n\n- [40%的越南人姓阮](https://en.wikipedia.org/wiki/Nguyen)\n"},{"fields":{"slug":"/tv-shows/","title":"电视剧笔记"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntitle: 电视剧笔记\ntags:\n  - TV\n  - Notes\n  - 中文\n---\n\n记录自己看过的剧，按年份排序，星星 ✨ 是我自己的评分，如有笔记则另外链接。基本上从 2021 开始记的，以前的由于没有及时建立这个第二大脑，基本都忘的差不多了。有一些剧是看的解说，但是有点后悔，当时是为了节省时间，早知道那么精彩就应该看原剧。\n\nAlso see [[books]], [[movies]]\n\n## workflows\n\n目前主要是用 [[qbittorrent-setup-for-debian]],[[jackett-setup]]，[[sonarr-setup]],[[bazarr-setup]] 在下载和管理剧以及字幕，买了一台 1T 的 VPS 作为 NAS。本来想用[[jellyfin-setup]]来作为影视中心的，但是使用后感觉客户端并不是 native 的，略卡，可能暂时还不胜用，所以索性直接上[[caddy-file-server-url-scheme]], 然后 mac 用 [IINA](https://iina.io/)，或者[迅雷看看](https://video.xunlei.com/)（大多数剧的字幕匹配做的好一点），手机端用 [nplayer](https://nplayer.com/)或[VLC](https://www.videolan.org/) 打开流文件。目前这样的体验是最爽的。\n\n![Root Screenshot](attachments/caddy-root.png)\n![Rick and Morty Season 5](attachments/caddy-tv-demo.png)\n\n## 人生必看系列\n\n这里放我自己觉得必看的一些剧：\n\n- 绝命毒师\n- 绝命律师\n- 傲骨之战\n- 我的天才女友\n- 早间新闻\n- 行骗天下\n\n## 2020\n\n- [x] 我的天才女友，✨✨✨✨✨，神剧\n- [x] 银河英雄传说，✨✨✨✨✨，动画长剧，后悔小时候没看，神动画剧，很宏大的宇宙世界。正反派都刻画的非常好。\n\n## 2021\n\n- [x] 黑道家族，共六季， ✨✨✨✨，颠覆对黑道剧的想象。\n- [x] 傲骨之战，第五季，✨✨✨✨✨，神剧，第五季紧跟时事，对新冠疫情，直播，言论自由，冗长的体制进行了深刻的探讨。人生必看。\n- [ ] 瑞克与莫蒂，第五季， ✨✨✨✨，还行，但是有一点套路化了，没有第一季的惊喜了。\n- [x] 早间新闻，第一季，✨✨✨✨✨，全剧在多方面探讨了 Metoo 的影响，剧情也很精彩（虽然有部分地方有点戏剧化，但是不影响），有很多地方看的很揪心。反正在我看来这部剧就是既深刻又精彩。期待第二季。\n- [x] 半泽直树，第二季，✨✨✨✨，日本剧总感觉有那么一点含蓄，等级森严。虽然第二季引入了女性角色，但是还是有点不够饱满。\n- [x] 行骗天下，✨✨✨✨✨，五星推荐，日本神剧，每一集都反转反转再反转，精彩！\n- [x] 法官大人，✨✨，绝命毒师里的老白主演，但是后面剧情越来越烂尾，不推荐。\n- [x] 致命女人，第二季，✨✨✨，前面很精彩，但是后面走向有点套路。\n- [ ] 新闻编辑室，第一季，✨✨✨，看了 10 来集，暂时弃剧了，主要是里面的情感关系和幽默让我有点看《硅谷》的感觉，感情有点太脸谱化，幽默就更脸谱化了，笑不出来，深刻是有，但是如果只有深刻，没有剧情，就有点看不下去。\n- [x] 太空堡垒卡拉狄加，✨✨✨，第一季+第二季，后面几季没看了，按现在的眼光来看有点套路，然后又有点太男女主光环，以及有点 迷信？\n- [ ] 是大臣，全三季，✨✨✨✨✨，五星推荐，英式情景喜剧，每一集一个主题，对英国政治运作的吐槽。非常到位。\n\n## 2022\n\n- [ ] 我的天才女友， 第三季，✨✨✨✨✨，一如既往的水准。这部剧是我心中排名前三的剧。\n- [ ] 使女的故事，第一季，✨✨✨✨，推荐先看原著，再看电视剧，不然很可能一头雾水。\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[books]: books.md \"读书笔记\"\n[movies]: movies.md \"电影笔记\"\n[qbittorrent-setup-for-debian]: qbittorrent-setup-for-debian.md \"qBittorrent setup for Debian\"\n[jackett-setup]: jackett-setup.md \"Jackett Setup\"\n[sonarr-setup]: sonarr-setup.md \"Sonarr Setup\"\n[bazarr-setup]: bazarr-setup.md \"Bazarr Setup\"\n[jellyfin-setup]: jellyfin-setup.md \"Jellyfin setup\"\n[caddy-file-server-url-scheme]: caddy-file-server-url-scheme.md \"Caddy File Server Browser with URL Scheme\"\n[//end]: # \"Autogenerated link references\"ences\"\n"},{"fields":{"slug":"/vim-tips/","title":"Vim Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Tips\n  - Editors\n  - Vim\n---\n\n# Vim Tips\n\n## Resources\n\n- [Vim online exercises](https://www.vim.so/) - help you master vim with interactive exercises.\n\n## Tips\n\n- Delete all words: `1,$d`\n\n- Current line end: `$`\n\n- Replace all string: `s/string/replace_string/g`\n"},{"fields":{"slug":"/vscode-tips/","title":"VS Code Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - VS Code\n  - Editors\n  - Tips\n---\n\n# VS Code Tips\n\n## Tips\n\n### Open command palette: `⇧⌘P`\n\n### Select current line: `cmd+L`\n\n### Quick Switch Windows\n\nAlso see [here](https://stackoverflow.com/questions/37371739/os-x-cycle-between-windows-in-visual-studio-code)\n\nAdded the following shortcut to `keybindings.json`\n\n```json\n{\n  \"key\": \"alt+tab\",\n  \"command\": \"workbench.action.quickSwitchWindow\"\n}\n```\n\n## Read more:\n\n- [Visual Studio Code Tips and Tricks](https://code.visualstudio.com/docs/getstarted/tips-and-tricks)\n- [GitHub - microsoft/vscode-tips-and-tricks: Collection of helpful tips and tricks for VS Code.](https://github.com/microsoft/vscode-tips-and-tricks)\n"},{"fields":{"slug":"/wish-lists/","title":"想买的东西列表"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 想买的东西列表\ntags:\n  - Wish\n  - List\n---\n\n收集一些有钱了之后会买的东西，现在来说有点贵，又不那么需要。也可以当作生日礼物参考。\n\n## 音乐类\n\n- 吉他\n- GeoShred - ios 的乐器软件，有生产力的音乐演奏软件\n"},{"fields":{"slug":"/youtube-download/","title":"Youtube Download"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Youtube\n  - Downloads\n  - Self-Hosted\n  - Metube\n---\n\n# Youtube Download\n\n## List\n\n- [GitHub - alexta69/metube: youtube-dl web UI](https://github.com/alexta69/metube)\n- [Metube chrome extension](https://chrome.google.com/webstore/detail/metube-downloader/fbmkmdnlhacefjljljlbhkodfmfkijdh)\n\n## Setup\n\nRun with [[docker-setup]]\n\n## Config\n\n```yaml\nversion: \"3\"\nservices:\n  metube:\n    image: alexta69/metube\n    container_name: metube\n    restart: unless-stopped\n    ports:\n      - \"10005:8081\"\n    volumes:\n      - /data/youtube:/downloads\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[docker-setup]: docker-setup.md \"Docker Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/install-php8-on-centos7/","title":"Install PHP 8.0 On CentOS 7 / RHEL 7"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Install PHP 8.0 On CentOS 7 / RHEL 7\ntags:\n  - Setup\n  - PHP\n  - CentOS\n---\n\n```bash\n\nyum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\nyum install -y https://rpms.remirepo.net/enterprise/remi-release-7.rpm\nyum install -y --enablerepo=remi-php80 php php-cli\nphp -v\n```\n"},{"fields":{"slug":"/how-to-write/","title":"如何写作？"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 如何写作？\ntags:\n  - Writing\n---\n\n- [写出更好的东西读书笔记](https://sive.rs/book/OnWritingWell)\n  - 用第一人称写。\n  - 如果它在写作中让你感到好笑，那就把它放进去\n  - 出乎意料但令人耳目一新的话语\n  - 在让它进入世界之前，大声朗读所有内容。\n  - 学习写作的唯一方法是强迫自己定期产生一定数量的单词。\n  - 每一部成功的非虚构作品都应该给读者留下一个他或她以前没有的挑衅性想法。不是两个想法，也不是五个- 只是一个。\n  - 任何文章中最重要的句子都是第一个句子。如果它没有诱使读者继续第二句话，那么你的文章就死了。如果第二句话没有诱使他继续第三句话，那么它同样已经死了。\n  - 特别注意每个段落的最后一句 - 这是下一段的关键跳板。试着给这句话一个额外的幽默或惊喜。\n  - 每一个小小的限定词都会削弱读者的信任度。\n  - 有趣的作家保持自己的兴趣。有趣的生活和继续教育。\n  - 现在，您的读者接下来想知道什么？在每句话之后问自己这个问题。\n  - 尽可能有趣地写作。\n"},{"fields":{"slug":"/goals-2022/","title":"2022 Goals"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 2022 Goals\ntags:\n  - \"Year2022\"\n  - Todo\n---\n\n- [ ] More patient about stocks.\n- [ ] Significantly improve English level\n"},{"fields":{"slug":"/journal/awesome-stocks/","title":"收集股市相关的资源"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集股市相关的资源\ntags:\n  - Awesome\n  - Stocks\n---\n\n## Tools\n\n- [美国众议员的股票操作跟踪](https://housestockwatcher.com/)\n- [美国参议院的股票操作跟踪](https://senatestockwatcher.com/)\n- [用中文查看美国股市热门讨论](https://stocks.buzzing.cc)\n\n## Interesting\n\n- [简单交易买 etf](https://github.com/KibaeKim/SectorTradingAlgorithm)\n\n## Commmunities\n\n- [reddit brkb - 追踪把巴菲特的股票投资](https://www.reddit.com/r/brkb/)\n"},{"fields":{"slug":"/journal/daily-note-2021-09-05/","title":"Journal Entry, Sunday, September 05, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Sunday, September 05, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## List\n\n- [Deno Deploy Beta2](https://deno.com/blog/deploy-beta2)\n- [罗伯特-萨波尔斯基谈抑郁症(2009)](https://www.robertsapolskyrocks.com/depression.html) - #Depression\n- [深圳准留学生花 15800 元“围观”的厂妹，曾让我羡慕死了](https://cj.sina.com.cn/articles/view/1154814715/44d512fb01900wn2x) - #Society\n- [最好的域名不是.com, 而是.is, The Best TLD is Not .com](https://slc.is/#The%20Best%20TLD%20is%20Not%20.com) - #Domains , the best tld is `.is`, by Iceland\n- [Helm](https://thehelm.com/) - 个人服务器，类似树莓派，$399 1T, #Privacy\n- [为什么超链接是蓝色的？](https://blog.mozilla.org/en/internet-culture/deep-dives/why-are-hyperlinks-blue/)\n- [幼儿园，一孩难求](https://mp.weixin.qq.com/s/b6TLj4b2rhexEjDT-u4jHA) - 小孩数量在减少\n- [「不长大」，是怎么成为越来越多人的愿望？](https://mp.weixin.qq.com/s/XhRf8pvVxljAAzAd81_bLg)\n- [浪漫是怎么一步步在现代爱情中消失的？](https://mp.weixin.qq.com/s/5uKyMHd2G4bunZIZ9YFYYg)"},{"fields":{"slug":"/journal/daily-note-2021-09-10/","title":"Journal Entry, Friday, September 10, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Friday, September 10, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Interesting Tools\n\n- [Wish Wall](https://www.wishwall.xyz/) - What is the one thing you want to do before you die?\n"},{"fields":{"slug":"/journal/daily-note-2021-09-11/","title":"Journal Entry, Saturday, September 11, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Saturday, September 11, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n- [stackoverflow, 我们仍然相信私人办公室](https://stackoverflow.blog/2015/01/16/why-we-still-believe-in-private-offices/)\n"},{"fields":{"slug":"/journal/daily-note-2021-09-12/","title":"Journal Entry, Sunday, September 12, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Sunday, September 12, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n- [和太阳一起升起和落下的壁纸，以及推出 15 天后我得到的教训](https://www.reddit.com/r/SideProject/comments/i8x1rt/wallow_wallpaper_that_rises_and_sets_with_the_sun/)\n\n  推出 15 天后。我学到了很多教训， 具有讽刺意味的是， 我一直读到的教训,以下是我学到的：\n\n  1. 如果你建立它， 他们不会来： 启动后的头几天， 零下载， 零评论。如果你没有营销，不要感到惊讶。\n  2. 围绕您的产品建立社区至关重要：如果人们都住在一个房间里，而不是分散在互联网上的许多地方，则更容易与热爱您的产品或服务的人交谈。我刚刚想通了， 现在我正争先恐后地学习如何为此设置正确的方法。\n  3. 倾听您的用户的意见并迅速做出反应：我让人们留下糟糕的评论或完全放弃使用我的产品，因为他们没有得到及时的回答。这是很多的努力，但对于你的前 100 个客户，我认为这是必须的。\n  4. 不要将所有用户建议/反馈添加到您的要做的事情列表中：当你意识到自己无法取悦每个人时，这只会让你感到不知所措和痛苦。\n  5. 在推出之前，请考虑您的营销策略。不要赌\"病毒化\"。你可能不会， 如果你这样做， 它可能会几天， 那么你会平线。而是专注于稳定增长。当我想出如何做到这一点时， 我会很高兴的。\n  6. 尽早建立你的个人品牌：如果你目前建立的东西或渴望建立的东西在你的职业生涯的后期，我不能强调这一点！使用社交媒体来谈论您感兴趣的领域，与技术领导者或其他创始人等互动。建立一个圈子/关注那些知道你的兴趣和你做什么的人（重要：他们应该喜欢你，而不仅仅是虚荣心喜欢和追随者计数的幽灵追随者）。\n\n- [To dont](https://crazymarvin.com/to-dont/)\n"},{"fields":{"slug":"/journal/daily-note-2021-09-15/","title":"Journal Entry, Wednesday, September 15, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Wednesday, September 15, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n- [《太空堡垒卡拉狄加》时间轴的说明](https://zh.e-pistolas.org/entire-battlestar-galactica-timeline-explained)\n- [五分钟日记 - 技巧和提示](https://briansunter.com/blog/five-minute-journal/)\n\n## Morning Questions\n\n### What Would Make Today Great?\n\n- base telegram bot\n- learn rust together\n\n### What Am I Worried About?\n\n- make money\n\n### What Am I Thinking of?\n\n- do something.\n\n## Evening Questions\n\n### How Am I feeling?\n\n### What's Something Good That Happened Today?\n\n### What Did I Do Well?\n\n### What Could I Have Done Better?\n"},{"fields":{"slug":"/journal/daily-note-2021-09-17/","title":"Journal Entry, Friday, September 17, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Friday, September 17, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n## Morning Questions\n\n### What Would Make Today Great?\n\n- 健身环运动\n- telegram bot\n- learn rust together\n\n### What Am I Worried About?\n\n- rust\n\n### What Am I Thinking of?\n\n## Evening Questions\n\n### How Am I feeling?\n\n### What's Something Good That Happened Today?\n\n### What Did I Do Well?\n\n### What Could I Have Done Better?\n"},{"fields":{"slug":"/journal/daily-note-2021-09-23/","title":"Journal Entry, Thursday, September 23, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Thursday, September 23, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-09\n---\n\n## Read List\n\n- [reddit 上的人通过复制国会议员的所作所为来交易股票](https://text.npr.org/1039313011)\n"},{"fields":{"slug":"/journal/daily-note-2021-10-11/","title":"Journal Entry, Monday, October 11, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Monday, October 11, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-10\n---\n\n## Read List\n\n- [问 HN：给我看看你的半成品项目](https://news.ycombinator.com/item?id=25700135)\n\n## Quotes\n\n- 隐私是指人们知道您是谁，但不知道您在做什么。匿名是指人们知道您在做什么，但不知道您是谁 - https://anonymousplanet.org/guide.html\n"},{"fields":{"slug":"/journal/daily-note-2021-10-10/","title":"Journal Entry, Sunday, October 10, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Sunday, October 10, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-10\n---\n\n## Read List\n\n- [挑战 180 天做 180 个网站，并成为 Yc 奖学金创始人](https://zube.io/blog/how-i-built-180-websites-in-180-days-and-became-a-yc-fellowship-founder/)\n- [艺术品生成器](https://colors.jaylow.se/)\n- [新西兰创业公司](https://www.failory.com/startups/new-zealand)\n- [app store 2021 stats](https://42matters.com/ios-apple-app-store-statistics-and-trends)\n- [妈妈测试- hn 图书推荐](https://hacker-recommended-books.vercel.app/category/0/past-6-months/page/0/5)\n  - [妈妈测试书评](https://book.douban.com/review/10002244/)\n- [hn shows 去哪了](https://news.ycombinator.com/item?id=28682173)\n\n## 感想\n\n- 人一旦开始为了赚钱有目的的找事情，就不好玩了。\n"},{"fields":{"slug":"/journal/daily-note-2021-10-12/","title":"Journal Entry, Tuesday, October 12, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Tuesday, October 12, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-10\n---\n\n## Read List\n\n- [all things using check box](https://www.bryanbraun.com/2021/09/21/i-keep-making-things-out-of-checkboxes/)\n- [问 HN： 你读过的最能改变生活的文章是什么？](https://news.ycombinator.com/item?id=28232165)\n- [问 hn： 谁在寻找联合创始人](https://news.ycombinator.com/item?id=25644817)\n- [问 HN：除了 HN 之外，还有哪些其他通用链接聚合器？](https://news.ycombinator.com/item?id=28632002)\n- [问 hn：你用过最昂贵的服务是什么？](https://news.ycombinator.com/item?id=26990815)\n- [something awful rule](https://www.somethingawful.com/forum-rules/forum-rules/)\n"},{"fields":{"slug":"/journal/daily-note-2021-10-27/","title":"Journal Entry, Wednesday, October 27, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Wednesday, October 27, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-10\n---\n\n## Read List\n\n- [👨💻[FirstDevRole #1] 成为一名程序员的真正要求是什么？](https://dev.to/antoniopk/firstdevrole-1-what-are-the-real-requirements-for-becoming-a-programmer-2e1p)\n"},{"fields":{"slug":"/journal/daily-note-2021-11-08/","title":"Journal Entry, Monday, November 08, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Monday, November 08, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-11\n---\n\n## Read List\n\n- [如何快速学习](https://www.joshwcomeau.com/blog/how-to-learn-stuff-quickly/#%2F%2F%2F%2F%2F%2F/)\n"},{"fields":{"slug":"/journal/daily-note-2021-12-13/","title":"Journal Entry, Monday, December 13, 2021"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Monday, December 13, 2021\ntags:\n  - Journal\n  - \"Year2021\"\n  - 2021-12\n---\n\n## Read List\n\n- [太阳能供电的网站](https://solar.lowtechmagazine.com/power.html)\n"},{"fields":{"slug":"/journal/daily-note-2022-02-16/","title":"Journal Entry, Wednesday, February 16, 2022"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Journal Entry, Wednesday, February 16, 2022\ntags:\n  - Journal\n  - \"Year2022\"\n  - 2022-02\n---\n\n## Read List\n\n- [徐州丰县目前为止的总结](https://mp.weixin.qq.com/s/FDKV22VnBOayDlEwFAtzmw)\n- [马云公司的悲惨结局](https://www.forbes.com/sites/georgecalhoun/2021/06/07/the-sad-end-of-jack-ma-inc/?sh=55c1fd0c123a)\n- [Arweave（AR）－为永存网络（Permaweb）提供动力的区块链](https://www.wwsww.cn/qkl/10173.html)\n"},{"fields":{"slug":"/placeholder/","title":"This Is a Placeholder File for Mdx"},"frontmatter":{"draft":true},"rawBody":"---\ntitle: This Is a Placeholder File for Mdx\ndraft: true\ntags:\n  - gatsby-theme-primer-wiki-placeholder\n---\n"}]}}}