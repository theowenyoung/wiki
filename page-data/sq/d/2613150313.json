{"data":{"tagsGroup":{"group":[{"fieldValue":"2021"},{"fieldValue":"API"},{"fieldValue":"Approvals"},{"fieldValue":"Auth"},{"fieldValue":"Awesome"},{"fieldValue":"BBR"},{"fieldValue":"BT"},{"fieldValue":"Bash"},{"fieldValue":"Benchmark"},{"fieldValue":"CSS"},{"fieldValue":"Caddy"},{"fieldValue":"Commands"},{"fieldValue":"Date"},{"fieldValue":"Debian"},{"fieldValue":"Docker"},{"fieldValue":"Downloads"},{"fieldValue":"Editors"},{"fieldValue":"Files"},{"fieldValue":"Free"},{"fieldValue":"Front-End"},{"fieldValue":"Git"},{"fieldValue":"Go"},{"fieldValue":"Jackett"},{"fieldValue":"Javascript"},{"fieldValue":"Jellyfin"},{"fieldValue":"Journal"},{"fieldValue":"Linux"},{"fieldValue":"List"},{"fieldValue":"Makefile - Templates - Workflows"},{"fieldValue":"Me"},{"fieldValue":"Medias"},{"fieldValue":"Metube"},{"fieldValue":"Monorepo"},{"fieldValue":"Notes"},{"fieldValue":"Now"},{"fieldValue":"Programming-Languages"},{"fieldValue":"Projects"},{"fieldValue":"Proxies"},{"fieldValue":"Radarr"},{"fieldValue":"Rclone"},{"fieldValue":"Rust"},{"fieldValue":"SEO"},{"fieldValue":"SSH"},{"fieldValue":"SVG"},{"fieldValue":"Self-Hosted"},{"fieldValue":"Server"},{"fieldValue":"Setup"},{"fieldValue":"Shadowsocks"},{"fieldValue":"Social"},{"fieldValue":"Sonarr"},{"fieldValue":"Static-Site-Generator"},{"fieldValue":"Subtitles"},{"fieldValue":"Templates"},{"fieldValue":"Tips"},{"fieldValue":"Todo"},{"fieldValue":"Tools"},{"fieldValue":"Torrents"},{"fieldValue":"Travel"},{"fieldValue":"UI"},{"fieldValue":"URL"},{"fieldValue":"VS Code"},{"fieldValue":"Vim"},{"fieldValue":"Workflows"},{"fieldValue":"Youtube"},{"fieldValue":"qBittorrent"},{"fieldValue":"中文"}]},"allMdx":{"nodes":[{"fields":{"slug":"/","title":"Everything I Know by Owen"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Everything I Know by Owen\nseoTitle: Everything I Know by Owen - A Personal Knowledge Based Wiki\ndescription: Personal wiki, share everything I learned, and spend a lifetime updating it. I hope it'll be a good gift for my grandchildren.\nimage: ./attachments/graph-visualisation.jpg\nimageAlt: Graph Visualisation\ntags:\n  - Me\n---\n\n> A personal knowledge based wiki\n\nSince I found [Everything I know](https://wiki.nikitavoloboev.xyz), I realized that \"Yes, this is what I want to do\", I used to create many blogs, tumblr, wordpress, hexo, hugo, gatsbyjs etc. But I do not post too much posts, cause there is a certain cost for blog post. But not for note.\n\nSo I hope it's a gift for my grandchildren(if I have :)\n\n[Read this wiki online.](https://wiki.owenyoung.com/)\n\n## Why I build this?\n\n- Knowledge that is not remembered/not found is useless\n- My memory is poor\n- I am eager to show(show off) what I know\n- The cost of writing a blog is high, but the cost of writing notes is low\n- I need a non-vendor locked solution to motivate me to record permanently\n\n## How I build this?\n\nThe source and site are hosted on [GitHub - theowenyoung/wiki: Personal Knowledge Base Wiki, Everything I Know.](https://github.com/theowenyoung/wiki)\n\nI am proud to have developed my own theme [GitHub - theowenyoung/gatsby-theme-primer-wiki: Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki), If you want to build your own wiki like this, you can follow [GitHub - theowenyoung/foam-template-gatsby-theme-primer-wiki](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki)\n\n## About Me\n\n- [[about]]\n- [[now]]\n- [[projects]]\n- [[goals-2021]]\n\n## Follow Me\n\n- Wiki [Everything I Know](https://wiki.owenyoung.com/)\n- Blog [Owen's Story](https://blog.owenyoung.com)\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- Twitter for Chinese [@owenyoung_zh](https://twitter.com/owenyoung_zh)\n- Github [@theowenyoung](https://github.com/theowenyoung)\n- Telegram [@theowenyoung](https://t.me/theowenyoung)\n- Instagram [@iamowenyoung](https://www.instagram.com/iamowenyoung/)\n- Patreon [@theowenyoung](https://www.patreon.com/theowenyoung)\n\n## Graph Visualisation Preview\n\n![Graph Visualisation](./attachments/graph-visualisation.jpg)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[about]: about.md \"About Me\"\n[now]: now.md \"What I’m doing now?\"\n[projects]: projects.md \"Projects\"\n[goals-2021]: goals-2021.md \"2021 Goals\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/about/","title":"About Me"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: About Me\ntags:\n  - Me\n---\n\nProgrammer, Freelancer, Workflow lover, Personal Finance Enthusiast\n\n## A failure of English learning\n\nI've learned English more than 10 years, but it still sucks, so I registered a Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung) for only English tweets, and this [wiki](https://wiki.owenyoung.com) and [blog](https://blog.owenyoung.com) to force me to use more English.\n\n## Programmer\n\nFull stack developer, main technology stack is javascript. Find more my projects [[projects]]\n\n## Follow me at the following platforms\n\n- Wiki [Everything I Know](https://wiki.owenyoung.com/)\n- Blog [Owen's Story](https://blog.owenyoung.com)\n- Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung)\n- Twitter for Chinese [@owenyoung_zh](https://twitter.com/owenyoung_zh)\n- Github [@theowenyoung](https://github.com/theowenyoung)\n- Telegram [@theowenyoung](https://t.me/theowenyoung)\n- Instagram [@iamowenyoung](https://www.instagram.com/iamowenyoung/)\n- Patreon [@theowenyoung](https://www.patreon.com/theowenyoung)\n\n## How I built my wiki?\n\n- [Source Repository](https://github.com/theowenyoung/wiki)\n\n## How I built my blog?\n\n- [How I Built my Blog?](https://blog.owenyoung.com/en/posts/how-i-built-my-blog/)\n- [Content Repository](https://github.com/theowenyoung/story)\n- [Site Repository](https://github.com/theowenyoung/theowenyoung.github.io)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[projects]: projects.md \"Projects\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/api-tokens/","title":"API Tokens"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - API\n  - Auth\n---\n\n# API Tokens\n\n## List\n\n- [API Tokens: A Tedious Survey](https://fly.io/blog/api-tokens-a-tedious-survey/)\n"},{"fields":{"slug":"/auth-gateway/","title":"Auth Gateway"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Auth\n---\n\n# Auth Gateway\n\n## List\n\n- [GitHub - linuxserver/docker-swag: Nginx webserver and reverse proxy with php support and a built-in Certbot (Let's Encrypt) client. It also contains fail2ban for intrusion prevention.](https://github.com/linuxserver/docker-swag)\n- [Setting Up Authelia With SWAG | LinuxServer.ioGitBook icon](https://www.linuxserver.io/blog/2020-08-26-setting-up-authelia)\n- [GitHub - authelia/authelia: The Single Sign-On Multi-Factor portal for web apps](https://github.com/authelia/authelia)\n- [GitHub - greenpau/caddy-auth-portal: Authentication Plugin for Caddy v2 implementing Form-Based, Basic, Local, LDAP, OpenID Connect, OAuth 2.0 (Github, Google, Facebook, Okta, etc.), SAML Authentication](https://github.com/greenpau/caddy-auth-portal)\n"},{"fields":{"slug":"/awesome-backup/","title":"Awesome Backup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Backup\n\n## List\n\n- [Save-to-the-Wayback-Machine](https://github.com/VerifiedJoseph/Save-to-the-Wayback-Machine) - A browser extension that allow you to save the webpage to wayback machine\n"},{"fields":{"slug":"/awesome-benchmark/","title":"Awesome Benchmark"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Benchmark\n  - Proxies\n  - Bash\n  - Awesome\n---\n\n# Awesome Benchmark\n\n## Proxy\n\n- [GitHub - NickMRamirez/Proxy-Benchmarks: Benchmarks for several proxies](https://github.com/NickMRamirez/Proxy-Benchmarks)\n"},{"fields":{"slug":"/awesome-bookmarks/","title":"Awesome Bookmarks"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Bookmarks\n\n## List\n\n- [shiori](https://github.com/go-shiori/shiori) - Pocket open-source alternative.\n"},{"fields":{"slug":"/awesome-file-managers/","title":"Awesome File Managers"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Files\n---\n\n# Awesome File Managers\n\n## List\n\n- [GitHub - filebrowser/filebrowser: 📂 Web File Browser](https://github.com/filebrowser/filebrowser)\n"},{"fields":{"slug":"/awesome-free/","title":"Awesome Free"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Free\ntags:\n  - Free\n  - Awesome\n  - Tools\n---\n\n## Mail\n\n- [Mailtie](https://mailtie.com) - Free Email Forwarding for Your Domain\n- [FakerMail](https://fakermail.com) - Unlimited Temporary Email Provider\n\n## Git\n\n- [ Codeberg.org ](https://codeberg.org) - free git, privacy\n\n## Video\n\n- [Create amazing videos with our online video editor - Mastershot](https://mastershot.app)\n\n## Domain\n\n- [freedns](https://freedns.afraid.org/domain/registry/) - free subdomain dns\n\n## Name\n\n- [namae](https://namae.dev) - name checking\n"},{"fields":{"slug":"/awesome-gatsby/","title":"Awesome Gatsby"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Gatsby\n\n## Plugins\n\n- [GitHub - kraynel/gatsby-transformer-gitinfo](https://github.com/kraynel/gatsby-transformer-gitinfo) - Add git info to file, so you can get last update date for your files.\n- [gatsby-plugin-local-search](https://github.com/angeloashmore/gatsby-plugin-local-search) - Gatsby plugin for providing client-side search for data available in Gatsby's GraphQL layer using a variety of engines\n\n## Tutorials\n\n[How to get 'Last Update Date' of a blog post in GATSBY.js - Stack Overflow](https://stackoverflow.com/questions/56025679/how-to-get-last-update-date-of-a-blog-post-in-gatsby-js)\n"},{"fields":{"slug":"/awesome-jackett-indexes/","title":"Awesome Jackett Indexes"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n---\n\n# Awesome Jackett Indexes\n\n## List\n\n- EZTV\n- RARBG\n- YTS\n\n## References\n\n[高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n"},{"fields":{"slug":"/awesome-js-date/","title":"Awesome JS Date"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Javascript\n  - Date\n---\n\n# Awesome JS Date\n\n## Articles\n\n[You probably don't need Moment.js](https://dev.to/aminnairi/you-probably-don-t-need-moment-js-493m)\n\n## Github\n\n[GitHub - you-dont-need/You-Dont-Need-Momentjs: List of functions which you can use to replace moment.js + ESLint Plugin](https://github.com/you-dont-need/You-Dont-Need-Momentjs)\n"},{"fields":{"slug":"/awesome-js/","title":"收集 Javascript 里好用的库"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集 Javascript 里好用的库\nlanguage: zh\ntags:\n  - Awesome\n  - Javascript\n  - 中文\n---\n\n收集用过的，好用的 Javascipt 库。\n\n## 其他 Javascript 相关的 Awesome List\n\n- [[awesome-js-date]]\n- [[awesome-gatsby]]\n\n## UI 框架\n\n- [GitHub - system-ui/theme-ui: Build consistent, themeable React apps based on constraint-based design principles](https://github.com/system-ui/theme-ui) - ThemeUI, 我愿意称之为真正的以配置主题为核心的 UI 框架，基本所有的元素样式都是配置出来的，页面 UI 里基本不怎么需要内联样式了，缺点（也可以说是优点）是内置组件少，适合自定义 UI 风格。\n\n## UI 组件\n\n- [Tippyjs](https://github.com/atomiks/tippyjs) - 弹出提示，tips, tooltip, popup\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[awesome-js-date]: awesome-js-date.md \"Awesome JS Date\"\n[awesome-gatsby]: awesome-gatsby.md \"Awesome Gatsby\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/awesome-list/","title":"Awesome List"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome List\ntags:\n  - Awesome\n  - List\n---\n\nCurating the best of list on the internet with good summaries from others.\n\n## Awesome\n\n- [GitHub - sindresorhus/awesome: 😎 Awesome lists about all kinds of interesting topics](https://github.com/sindresorhus/awesome)\n\n## Social\n\n- [Reddit List](https://redditlist.io) - Discover Subreddits for different topics\n\n## Startup\n\n- [STARTUP LAUNCH LIST](https://startuplaunchlist.com) - A​rticle list you need to read before launching a startup.\n\n## Freelancer\n\n- [Freelancer Resources List](https://nira.com/templates/freelancer-templates/) - All the free resources and templates you need to get work done as a freelancer\n\n## HR\n\n- [Nomad List](https://nomadlist.com) - The biggest crowdsourced list of cities in the world to help you choose where to go next.\n\n## Market\n\n- [Marketing Resources List](https://nira.com/templates/marketing-templates/) - The biggest collection of free marketing resources\n\n## API\n\n- [API list](https://apilist.fun/) - A collective list of APIs\n\n## Travel\n\n- [Visa List](https://visalist.io) - Know where you can travel with your passport tension free\n- [What is one country that you will never visit again?](https://www.reddit.com/r/AskReddit/comments/om38bx/what_is_one_country_that_you_will_never_visit/)\n- [What is one country you will gladly visit again? : AskReddit](https://www.reddit.com/r/AskReddit/comments/omnrxb/what_is_one_country_you_will_gladly_visit_again/)\n\n## Media\n\n- [Tech Blogs List](https://airtable.com/shriIvyyV3gAJf0x4/tblcakhoBi0A33QhB/viwWIaPD1CBQtE5e1) - Curated list of 3,800+ tech journalists\n"},{"fields":{"slug":"/awesome-notes/","title":"Awesome Notes"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome Notes\ntags:\n  - Awesome\n  - Notes\n  - Tools\n---\n\n## VS Code Extensions\n\n- [GitHub - foambubble/foam: A personal knowledge management and sharing system for VSCode](https://github.com/foambubble/foam)\n\n## Applications\n"},{"fields":{"slug":"/awesome-seo/","title":"Awesome SEO Tools"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Awesome SEO Tools\ntags:\n  - SEO\n  - Awesome\n  - Tools\n---\n\n## Tools\n\n- [Twitter Card Validator](https://cards-dev.twitter.com/validator)\n"},{"fields":{"slug":"/awesome-socials/","title":"Awesome Socials"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Social\n  - Awesome\n---\n\n# Awesome Socials\n\n## Text Social\n\n- [SLOWLY](https://slowly.app/en/) - An app you can receive and send letters like real. The time for sending a letter depends on the distance that you and the other guy.\n"},{"fields":{"slug":"/awesome-static-site-generator/","title":"Awesome Static Site Generator"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - Static-Site-Generator\n---\n\n# Awesome Static Site Generator\n\n## List\n\n- [Eleventy](https://www.11ty.dev/docs/getting-started/)\n- [Gatsby](https://www.gatsbyjs.com/docs/tutorial/)\n- [Docusaurus](https://docusaurus.io/)\n\n## Starter\n\n- [GitHub - stefanfrede/11st-starter-kit: 11ty, powered by Snowpack with Tailwind CSS and Alpine.js.](https://github.com/stefanfrede/11st-starter-kit)\n"},{"fields":{"slug":"/awesome-tools/","title":"最好用的工具集合"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 最好用的工具集合\nlanguage: zh\ntags:\n  - Awesome\n  - Tools\n  - 中文\n---\n\n## 打字\n\n- [Code Typing Script(https://codingspeedtest.com) - 用代码测试你的打字速度，可以选语言比如 js,go\n"},{"fields":{"slug":"/awesome-ui/","title":"Awesome UI"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Awesome\n  - UI\n  - Front-End\n---\n\n# Awesome UI\n\n## List\n\n- [RGB to hex, hsl convert tool by Google](https://www.google.com/search?q=rgb+to+hex&oq=rgb+to+hex&aqs=edge.0.0i433i512l4j0i512l2j69i65.2649j0j1&sourceid=chrome&ie=UTF-8)\n"},{"fields":{"slug":"/awesome-websites/","title":"收集一些好玩的网站"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集一些好玩的网站\nlanguage: zh\ntags:\n  - Awesome\n  - Tools\n  - 中文\n---\n\n## 发现类\n\n- [Reddit 小组趋势](https://subredditstats.com/) 在这可以发现很多有意思的 Reddit 小组，有各种维度的排序\n- [Your Stack 你的工具栈](https://yourstack.com/) 分享自己使用的产品，在这可以发现不少好用的东西，App\n- [Hacker News 黑客新闻](https://news.ycombinator.com/news) 著名的 HN，很多互联网用户的聚集地，上面的新闻还有讨论大多数是技术相关，也有少数社会新闻，当你有新产品要冷启动的时候，里面的子版块 Show HN 很适合去宣传，当然也有可能收到评论里的不看好。\n  - [Hacker News 热门](https://hn.buzzing.cc/) 这是我做的一款抓取 Hacker News 的热门条目，然后用 Deepl 翻译标题和简介，帮助英文不是特别的非母语者做中文导读的站点，对我自己英文提升帮助很大，因为更容易找到感兴趣的文章，然后才点进去详读\n"},{"fields":{"slug":"/bazarr-setup/","title":"Bazarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Subtitles\n  - Setup\n  - Self-Hosted\n---\n\n# Bazarr Setup\n\n## Install\n\nSee also [here](https://wiki.bazarr.media/Getting-Started/Installation/Linux/linux/)\n\n```bash\nsudo apt-get install python3-pip python3-distutils -y\nwget https://github.com/morpheus65535/bazarr/releases/latest/download/bazarr.zip\nunzip bazarr.zip -d ~/bazarr\ncd bazarr\npython3 -m pip install -r requirements.txt\n```\n\n### Setup as system service\n\nReference at [here](https://wiki.bazarr.media/Getting-Started/Autostart/Linux/linux/)\n\nYou have to create a `bazarr.service` file in `/etc/systemd/system` that would contain the following text:\n\n```bash\nsudo vim /etc/systemd/system/bazarr.service\n```\n\n```bash\n[Unit]\nDescription=Bazarr Daemon\nAfter=syslog.target network.target\n\n# After=syslog.target network.target sonarr.service radarr.service\n\n[Service]\nWorkingDirectory=/home/green/bazarr/\nUser=green\nGroup=admin\nUMask=0002\nRestart=on-failure\nRestartSec=5\nType=simple\nExecStart=/usr/bin/python3 /home/green/bazarr/bazarr.py\nKillSignal=SIGINT\nTimeoutStopSec=20\nSyslogIdentifier=bazarr\nExecStartPre=/bin/sleep 30\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now bazarr\nsudo systemctl status bazarr\nsudo systemctl restart bazarr\n\n```\n\n## Configure\n\nYou can set your password at the UI.\n\n### Sonarr\n\nEnabled, See [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#sonarr)\n\n### Provider\n\nAdd Zimuku, assrt, Opensubtitle\n\n### Language\n\nSee [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#languages)\n\nAdd default settings, see [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#default-settings)\n"},{"fields":{"slug":"/caddy-file-server-url-scheme/","title":"Caddy File Server Browser with URL Scheme"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Files\n  - Server\n  - Proxies\n  - Templates\n---\n\n# Caddy File Server Browser with URL Scheme\n\n[Template](https://gist.github.com/theowenyoung/e09cb6e2c59f247fdc3f4e6fe4401481)\n\nUse this template to display the follow page:\n![](../attachments/caddy-file-template-screenshot.png)\n\n```bash\nlocalhost {\n  root * /root\n  encode gzip\n  file_server {\n    browse ./file-browser-template-for-caddy.html\n    hide .*\n  }\n}\n```\n"},{"fields":{"slug":"/caddy2-setup-for-debian/","title":"Caddy2 Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Caddy\n  - Debian\n  - Setup\n  - Proxies\n  - Server\n---\n\n# Caddy2 Setup for Debian\n\n[Official Site](https://caddyserver.com/v2)\n\n## Install\n\n```bash\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install caddy\n```\n\nOnce installed, caddy is running.\n\nThe default config file at `/etc/caddy/Caddyfile`\n\n## Resources\n\n- [GitHub - greenpau/caddy-auth-portal: Authentication Plugin for Caddy v2 implementing Form-Based, Basic, Local, LDAP, OpenID Connect, OAuth 2.0 (Github, Google, Facebook, Okta, etc.), SAML Authentication](https://github.com/greenpau/caddy-auth-portal)\n- [GitHub - greenpau/caddy-auth-jwt: JWT Authorization Plugin for Caddy v2](https://github.com/greenpau/caddy-auth-jwt)\n- [basicauth (Caddyfile directive) — Caddy Documentation](https://caddyserver.com/docs/caddyfile/directives/basicauth#basicauth)\n"},{"fields":{"slug":"/common-url-scheme/","title":"Common URL Scheme"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - URL\n  - Tips\n---\n\n# Common URL Scheme\n\n## IINA\n\n[IINA - The modern media player for macOS](https://iina.io/)\n\nOpen stream video:\n\n```bash\niina://weblink?url={encoed url}\n```\n"},{"fields":{"slug":"/debian-server-setup/","title":"Debian Server Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Debian\n  - Server\n  - Setup\n---\n\n# Debian Server Setup\n\n> For linux common commands, see [[linux-common-commands]]\n\n1. Update Source\n\n   ```bash\n   apt update --yes && apt upgrade --yes\n   ```\n\n2. Install sudo package\n\n   ```bash\n   apt install -y sudo\n   ```\n\n3. Open BBR: [[open-bbr-for-debian]]\n\n4. Use ssh key login instead of password, for more details see [How To Configure SSH Key-Based Authentication on a Linux Server](https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server)\n\n5. In your local machine:\n\n```bash\nssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\n```\n\n3. Change the default password\n\n   1. `passwd`\n\n4. Create an admin group\n   1. `groupadd admin`\n   2. Give admin group root access, and no password sudo\n      1. Backup sudo files `cp /etc/sudoers /root/sudoers.bak`\n      2. Edit the `/etc/sudoers` file by typing the command: `visudo`\n      3. Add `%admin ALL=(ALL:ALL) NOPASSWD:ALL` after `sudo` group\n5. Create a admin group user\n   1. `useradd username -g admin`\n6. Use ssh key login instead of password for normal user\n   1. `ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host`\n7. Login with new normal user `ssh username@ip`\n8. Install common utils:\n   1. `sudo apt install build-essential software-properties-common curl vim unzip --yes`\n9. Create `/data` for store data files with `777` permissions, avoid to use `/home` directory\n\n\nYou might want to read also:\n\n- [[shadowsocks-rust-setup-for-debian]]\n- [[caddy2-setup-for-debian]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[linux-common-commands]: linux-common-commands.md \"Linux Common Commands\"\n[open-bbr-for-debian]: open-bbr-for-debian.md \"Open BBR for Debian\"\n[shadowsocks-rust-setup-for-debian]: shadowsocks-rust-setup-for-debian.md \"Shadowsocks Rust Setup for Debian\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/docker-setup/","title":"Docker Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Docker\n  - Setup\n---\n\n# Docker Setup\n\n## Install\n\nSee [here](https://docs.docker.com/engine/install/debian/)\n\n[Install Docker compose](https://docs.docker.com/compose/install/)\n"},{"fields":{"slug":"/filebrowser-setup/","title":"FileBrowser Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Setup\n  - Files\n---\n\n# FileBrowser Setup\n\n## Install\n\n```bash\ncurl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash\n```\n\n## Systemd\n\n```bash\nsudo vim /etc/systemd/system/filebrowser.service\n```\n\n```bash\n[Unit]\nDescription=File browser: %I\nAfter=network.target\n\n[Service]\nUser=www-data\nGroup=www-data\nExecStart=/usr/local/sbin/filebrowser -c /etc/filebrowser/%I -d /etc/filebrowser/filebrowser.db\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now filebrowser\n```\n"},{"fields":{"slug":"/git-sshkey/","title":"Use ssh key for Git"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Git\n  - SSH\n  - Auth\n---\n\n# Use ssh key for Git\n\nReference: [Generating a new SSH key and adding it to the ssh-agent - GitHub Docs](https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)\n\n## Generate ssh key\n\n```bash\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n# Start the ssh-agent in the background.\neval \"$(ssh-agent -s)\"\n# Add your SSH private key to the ssh-agent\nssh-add ~/.ssh/id_ed25519\n```\n\n## Add ssh key to Github\n\n```bash\ncat .ssh/id_ed25519.pub\n```\n\n[SSH Keys Setting](https://github.com/settings/keys)\n"},{"fields":{"slug":"/git-tips/","title":"收集常用Git技巧"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 收集常用Git技巧\nlanguage: zh\ntags:\n  - Git\n  - Tips\n---\n\n## 回答合集\n\n- [Finding the date/time a file was first added to a Git repository - Stack Overflow](https://stackoverflow.com/questions/2390199/finding-the-date-time-a-file-was-first-added-to-a-git-repository/25633731) - 获取首次提交时间\n\n## 合并上游的时候不弹出确认框\n\n```bash\ngit pull upstream main --commit --no-edit\n```\n"},{"fields":{"slug":"/git-workflows/","title":"Git workflows"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Git\n  - Workflows\n---\n\n# Git workflows\n\n## Intro\n\nSee [here](https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)\n\n![](https://wac-cdn.atlassian.com/dam/jcr:8f00f1a4-ef2d-498a-a2c6-8020bb97902f/03%20Release%20branches.svg?cdnVersion=1770)\n"},{"fields":{"slug":"/go-template-tips/","title":"Go Template Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Go\n  - Templates\n  - Tips\n  - Programming-Languages\n---\n\n# Go Template Tips\n\n- Parent Variable, `{{$.XX}}`\n- URL encode, `urlquery \"https://test.com\"`\n"},{"fields":{"slug":"/goals-2021/","title":"2021 Goals"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: 2021 Goals\ntags:\n  - \"2021\"\n  - Todo\n---\n\n- [ ] Post 100 articles/wikis this year\n- [ ] More patient about stocks.\n- [ ] Significantly improve English level\n"},{"fields":{"slug":"/jackett-setup/","title":"Jackett Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Jackett\n  - Torrents\n  - BT\n  - Self-Hosted\n  - Setup\n---\n\n# Jackett Setup\n\nRead more at [here](https://github.com/Jackett/Jackett#install-as-service)\n\n1. Download and extract the latest `Jackett.Binaries.LinuxAMDx64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases)\n\n```bash\nwget https://github.com/Jackett/Jackett/releases/download/v0.18.545/Jackett.Binaries.LinuxAMDx64.tar.gz\n# tar to a directory you want\ntar -xf Jackett.Binaries.LinuxAMDx64.tar.gz\n```\n\n2. To install Jackett as a service, open a Terminal, cd to the jackett folder and run `sudo ./install_service_systemd.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\n`http://your-ip:9117`\n\nYou can set password, or port by UI.\n"},{"fields":{"slug":"/jellyfin-setup/","title":"Jellyfin setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Jellyfin\n  - Setup\n  - Self-Hosted\n---\n\n# Jellyfin setup\n\n## Install\n\nSee [Installing Jellyfin | Documentation - Jellyfin Project](https://jellyfin.org/docs/general/administration/installing.html#debian)\n\n## Usage\n\n```bash\nsudo systemctl restart jellyfin\n```\n\n## 中文字体\n\n1. Download google noto fonts:\n   This [repo](https://github.com/CodePlayer/webfont-noto) compiled noto fonts, so you can just download it and use it.\n\n   ```bash\n   wget https://github.com/CodePlayer/webfont-noto/raw/master/dist/NotoSans/NotoSansCJKsc-hinted/subset/NotoSansCJKsc-hinted-standard/NotoSansCJKsc-Regular.woff2\n   ```\n\n   At Jellyfin Admin dashboard, player, open back font, add the font path\n\n## FAQ\n\n- [Jellyfin 中文字体问题](https://github.com/jellyfin/jellyfin-web/issues/934)\n"},{"fields":{"slug":"/linux-common-commands/","title":"Linux Common Commands"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Tips\n  - Linux\n  - Commands\n  - Bash\n---\n\n# Linux Common Commands\n\n## View current system info\n\n```bash\nlsb_release -a\n```\n\nOutput:\n\n```bash\nDistributor ID:\tDebian\nDescription:\tDebian GNU/Linux 10 (buster)\nRelease:\t10\nCodename:\tbuster\n```\n\n## View all users\n\n```bash\ncat /etc/passwd | grep -v nologin|grep -v halt|grep -v shutdown|awk -F\":\" '{ print $1\"|\"$3\"|\"$4 }'|more\n```\n\n## Get Publish IP\n\n```bash\nhostname -I\n```\n\n## Change user group\n\n```bash\nusermod -g groupname username\n```\n\n## Get user group\n\n```bash\nid -g -n\n```\n\n## Remove apt ppa\n\n```bash\nsudo add-apt-repository --remove ppa:qbittorrent-team/qbittorrent-stable\n```\n\n## Get current shell\n\n```bash\necho \"$SHELL\"\n```\n\n## Get current cpu arch\n\n```bash\narch\n```\n\nor\n\n```bash\ndpkg --print-architecture\n```\n\n## Unzip tar.gz\n\n```bash\ntar -xf x.tar.gz\n```\n\nSee also [here](https://linuxize.com/post/how-to-extract-unzip-tar-gz-file/)\n\nTar to specific directory\n\n```bash\ntar -xf x.tar.gz -C ./xxx\n```\n"},{"fields":{"slug":"/makefile-templates/","title":"Makefile Templates"},"frontmatter":{"draft":false},"rawBody":"---\ntags: \n\t- Makefile\n  - Templates\n  - Workflows\n---\n\n# Makefile Templates\n\n```Makefile\n.PHONY: start reload stop\nstart:\n\tsystemctl start caddy\nstop:\n\tsystemctl stop caddy\nreload:\n\tsystemctl reload caddy\n```\n"},{"fields":{"slug":"/mini-reset-css/","title":"Mini Reset CSS"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - CSS\n---\n\n# Mini Reset CSS\n\n> Forked by <https://github.com/jgthms/minireset.css/blob/master/minireset.css>\n\n```css\nhtml {\n  font-family: \"SF Pro SC\", \"SF Pro Text\", \"SF Pro Icons\", \"PingFang SC\",\n    \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n}\nbody {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\nhtml,\nbody,\np,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal;\n}\n\nbutton,\ninput,\nselect {\n  margin: 0;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nimg,\nvideo {\n  height: auto;\n  max-width: 100%;\n}\n\niframe {\n  border: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n```\n"},{"fields":{"slug":"/nodejs-monorepo/","title":"Nodejs Monorepo"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Monorepo\n  - Javascript\n  - Workflows\n---\n\n# Nodejs Monorepo\n\n## Tools\n\n[GitHub - atlassian/changesets: 🦋 A way to manage your versioning and changelogs with a focus on monorepos](https://github.com/atlassian/changesets)\n\n## Use Changesets as monorepo manager\n\n### Init a monorepo\n\n```bash\nmkdir monorepo && cd monorepo\ngit init\n# Add .gitignore file for nodejs <https://github.com/github/gitignore/blob/master/Node.gitignore>\nnpm init --yes\n```\n\nAdd `\"private\":\"true\"` to the root `package.json`\n\n```bash\nnpm init -w packages/a\nnpm init -w packages/b\nnpm init -w packages/c\n```\n\nLet `c` depends `a` and `b`,\n\nAdd\n\n```json\n\"dependencies\": {\n  \"a\":\"^1.0.0\",\n  \"b\":\"^1.0.0\"\n}\n```\n\nto `packages/c/package.json`\n\n### Install changesets\n\nAlso see [here](https://github.com/atlassian/changesets/blob/main/docs/intro-to-using-changesets.md)\n\n```bash\nnpm install -D @changesets/cli && npx changeset init\n```\n\nThis action will add a `.changeset` folder, and a couple of files to help you out:\n\nYou should change the `.changeset/config.json` -> `baseBranch` to yourself main branch, also change `access` to `public`\n\nCommit current files.\n\n```bash\ngit add .\ngit commit -m \"feat: init\"\n```\n\nThat's done.\n\n### Usage\n\n#### First publish\n\nFirst publish you should just use the follow command to publish your module\n\n```bash\nnpx changeset publish\n```\n\n#### Future changes\n\nYou should see [changesets philosophy](https://github.com/atlassian/changesets/blob/main/docs/detailed-explanation.md)\n\nYou should first create an `intent to change`, that said, before what ever changes you want to make, you should create a `intent change`\n\n```bash\nnpx changeset\n```\n\n...Make some changes\n\nNow, generate new version, changeset will take care your dependences,\n\n> Note, by default, if `a` upgrade from `1.0.1` to `1.0.2`, `c` depends on `a@^1.0.1`, then `c` `package.json` will not change, cause npm will auto update `a@^1.0.1` to the last version `1.0.2`\n> if you want change to the exact version every time, you can set the config to\n>\n> ```bash\n>  \"___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH\": {\n>     \"updateInternalDependents\": \"always\"\n>  }\n> ```\n\n```bash\nnpx changeset version\n```\n\nThen, you can publish it.\n\n```bash\nnpx changeset publish\n```\n\n```bash\ngit add .\ngit commit -m \"chore: version\"\ngit push --follow-tags\n```\n\n## With CI\n\nI'll use Github Actions as example.\n\nThe CI workflow assume that you use [[git-workflows]] as your git workflow.\n\n> Note, you can use [`@changesets/changelog-github`](https://github.com/atlassian/changesets/tree/main/packages/changelog-github) as your changelog format log. with this, you can generate a log like [this](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-b%401.1.0) , without this, then the log will only include [commit link](https://github.com/theowenyoung/monorepo-example/releases/tag/%40theowenyoung%2Fpackage-example-c%401.1.2) > `npm i -D @changesets/changelog-github`\n>\n> ```json\n> {\n>   \"changelog\": [\n>     \"@changesets/changelog-github\",\n>     { \"repo\": \"theowenyoung/monorepo-example\" }\n>   ]\n> }\n> ```\n\n1. Create a script in root `package.json`\n\n```json\n{\n  \"scripts\": {\n    \"version-packages\": \"changeset version\",\n    \"release\": \"changeset publish\"\n  }\n}\n```\n\n2. Create github actions workflows\n\n```bash\nmkdir -p .github/workflows\n```\n\n```bash\ntouch .github/workflows/release.yml\n```\n\nWith the following content:\n\n```yaml\nname: Release\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  release:\n    name: Release\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@master\n        with:\n          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits\n          fetch-depth: 0\n\n      - name: Setup Node.js 12.x\n        uses: actions/setup-node@master\n        with:\n          node-version: 12.x\n      - name: Setup NPM Latest\n        run: npm i -g npm\n      - name: Install Dependencies\n        run: npm i\n\n      - name: Create Release Pull Request or Publish to npm\n        uses: changesets/action@master\n        with:\n          # this expects you to have a script called release which does a build for your packages and calls changeset publish\n          publish: npm run release\n          version: npm run version-packages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n```\n\n3. Add `NPM_TOKEN` to your github repo secret settings\n\nBy [[nodejs-tips]]:\n\n```bash\nnpm token create\n```\n\nDone.\n\nEvery time you use `npx changeset` to generate a new changeset intent, and the change is pulled to the `main` branch, then CI will create a pull request to generate a new version, and after the pull request was merged, CI will publish npm packages, and create a new release.\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[git-workflows]: git-workflows.md \"Git workflows\"\n[nodejs-tips]: nodejs-tips.md \"Nodejs Tips\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/nodejs-setup-for-debian/","title":"Nodejs Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Server\n  - Javascript\n  - Setup\n  - Debian\n  - Programming-Languages\n---\n\n# Nodejs Setup for Debian\n\n## Install\n\nSee also [here](https://github.com/nodesource/distributions/blob/master/README.md)\n\n```bash\n# Using Debian, as root\ncurl -fsSL https://deb.nodesource.com/setup_14.x | bash -\napt-get install -y nodejs\n```\n"},{"fields":{"slug":"/nodejs-tips/","title":"Nodejs Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Javascript\n  - Tips\n  - Programming-Languages\n---\n\n# Nodejs Tips\n\n## Answers\n\n### Delete node_modules folder recursively from a specified path using command line\n\n> [Delete node_modules folder recursively from a specified path using command line - Stack Overflow](https://stackoverflow.com/questions/42950501/delete-node-modules-folder-recursively-from-a-specified-path-using-command-line)\n\n```bash\nfind . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n```\n\n### Get NPM Token\n\n```bash\nnpm token create\n```\n"},{"fields":{"slug":"/now/","title":"What I’m doing now?"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: What I’m doing now?\ntags:\n  - Now\n  - Journal\n  - Me\n---\n\n> This is a [now](https://nownownow.com/about) page, read more about me at [[about]] page or [[projects]] page.\n\n## Projects now\n\n- **Maintaining [Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki)**\n- **Maintaining [Track Awesome List](https://www.trackawesomelist.com)**\n- **Maintaining [Actionsflow](https://github.com/actionsflow/actionsflow)**\n\n  [Actionsflow](https://github.com/actionsflow/actionsflow) helps you automate workflows - it's a free [IFTTT](https://ifttt.com/)/[Zapier](https://zapier.com/) alternative for developers. With [Actionsflow](https://github.com/actionsflow/actionsflow) you can connect your favorite apps, data, and APIs, receive notifications of actions as they occur, sync files, collect data, and more.\n\n- **Maintaining [Buzzing](https://www.buzzing.cc/)**\n\n  You can use [Buzzing](https://www.buzzing.cc/) to see hot discussions in your native language. Browse in your native language, Read more into the original text. Currently, it supports Chinese, I hope it can support more languages, and more topics.\n\n- **Starting a new Project about merchandising**\n\n  I'm ready into a new app about fresh food merchandising, hope I can get it online soon.\n\n- **Writing Letters**\n\n  Recently, I found a new penpal app [SLOWLY](https://slowly.app/en/), SLOWLY lets you meet pen pals from your smartphone! Match with someone that shares your passion, write a letter and collect stamps from around the world. Speak your mind – one letter at a time! I really like it, and now I have 5 firends.\n\n- **Practicing English**\n\n  I'm a failure of English learning. I've learned English more than 10 years, but it still sucks, so I registered a Twitter [@TheOwenYoung](https://twitter.com/TheOwenYoung) for only English tweets, and this [blog](https://blog.owenyoung.com) to force me to use more English. It's Feb, 01, 2021 today when I writing this, I hope this is my last goal after making so many goals. Once I reach my goal, I'll update here.\n\n## Goals\n\n[[goals-2021]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[about]: about.md \"About Me\"\n[projects]: projects.md \"Projects\"\n[goals-2021]: goals-2021.md \"2021 Goals\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/open-bbr-for-debian/","title":"Open BBR for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Debian\n  - Server\n  - BBR\n  - Proxies\n---\n\n# Open BBR for Debian\n\n## Steps\n\n1. Open the following configuration file to enable enable TCP BBR.\n\n```bash\nvi /etc/sysctl.conf\n```\n\n2. At the end of the config file, add the following lines.\n\n```bash\nnet.core.default_qdisc=fq\nnet.ipv4.tcp_congestion_control=bbr\n```\n\n3. reload\n\n```bash\nsysctl -p\n```\n\nNow, Verify if BBR is enabled in your system,\n\n```bash\nsysctl net.ipv4.tcp_congestion_control\n```\n\nOutput:\n\n```bash\nroot@vps:~# sysctl net.ipv4.tcp_congestion_control\nnet.ipv4.tcp_congestion_control = bbr\n```\n"},{"fields":{"slug":"/projects/","title":"Projects"},"frontmatter":{"draft":false},"rawBody":"---\ntitle: Projects\ntags:\n  - Projects\n  - Me\n---\n\nThis is a list of projects I've done and am doing.\n\n## List\n\n- **[Track Awesome List](https://www.trackawesomelist.com)**\n\n  Track your favorite github awesome repo, not just star it. trackawesomelist.com provides website, newsletter, RSS for tracking the popular awesome list by daily and weekly.\n\n- **[Gatsby Theme Primer Wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki)**\n\n  A gatsby theme for wiki site. Like this site is using the theme to generate. Cause this wiki is a thing that I want to maintain the whole life, so the theme would be maintain for a long time.\n\n- **[Actionsflow](https://github.com/actionsflow/actionsflow)**\n\n  [Actionsflow](https://github.com/actionsflow/actionsflow) helps you automate workflows - it's a free [IFTTT](https://ifttt.com/)/[Zapier](https://zapier.com/) alternative for developers. With [Actionsflow](https://github.com/actionsflow/actionsflow) you can connect your favorite apps, data, and APIs, receive notifications of actions as they occur, sync files, collect data, and more. We implemented it based on [Github actions](https://docs.github.com/en/actions), and you use a YAML file to build your workflows. The configuration format is the same as [Github actions](https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow), which makes it easy for you to get going if you've explored Github actions before. You can also use any [Github actions](https://github.com/marketplace?type=actions) as your job's steps.\n\n- **[Buzzing](https://www.buzzing.cc)**\n\n  You can use [Buzzing](https://www.buzzing.cc/) to see hot discussions in your native language. Browse in your native language, Read more into the original text. Currently, it supports Chinese, you can find topics like [Buzzing on Reddit](https://reddit.buzzing.cc), [Buzzing on Stocks](https://stocks.buzzing.cc), [Buzzing on Product Hunt](https://ph.buzzing.cc), [Buzzing on Hacker News](https://hn.buzzing.cc/), [Buzzing on Reddit ASK](https://ask.buzzing.cc/), etc.\n\n- **[Gatsby Theme Timeline](https://github.com/theowenyoung/gatsby-theme-timeline)**\n\n  A Gatsby theme, you can use it to show your all posts, tweets, instagram posts etc into one blog. In my opinion, this is a real personal home.\n"},{"fields":{"slug":"/qbittorrent-setup-for-debian/","title":"qBittorrent setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Downloads\n  - BT\n  - Torrents\n  - qBittorrent\n  - Jackett\n  - Debian\n  - Setup\n  - Server\n---\n\n# qBittorrent setup for Debian\n\n## Install\n\nBecause there is no official ppa of qBittorrent for debian, so we use a [third party service - qbittorrent-nox-static](https://github.com/userdocs/qbittorrent-nox-static) to compile qb.\n\n1. Download script\n\n```bash\nwget -qO ~/qbittorrent-nox-static.sh https://git.io/qbstatic\nchmod +x ~/qbittorrent-nox-static.sh\n# pre\nsudo ~/qbittorrent-nox-static.sh\n# build\n~/qbittorrent-nox-static.sh all\n# install\nsudo ~/qbittorrent-nox-static.sh install\n```\n\n## Configure\n\nRead more at [qbittorrent-nox configure](https://userdocs.github.io/qbittorrent-nox-static/#/install-qbittorrent?id=configuring-qbittorrent)\n\n```bash\nvim ~/.config/qBittorrent/qBittorrent.conf\n```\n\nWith follow config:\n\n```ini\n[LegalNotice]\nAccepted=true\n\n[Preferences]\nWebUI\\Port=8080\nWebUI\\HostHeaderValidation=false\n```\n\n## Systemd service\n\nReference at [here](https://userdocs.github.io/qbittorrent-nox-static/#/systemd)\n\n```bash\n# create a user\nsudo vim /etc/systemd/system/qbittorrent.service\n```\n\nConfig:\n\n```bash\n[Unit]\nDescription=qBittorrent-nox service\nWants=network-online.target\nAfter=network-online.target nss-lookup.target\n\n[Service]\nType=exec\nUser=qbtuser\nExecStart=/usr/local/bin/qbittorrent-nox\nRestart=on-failure\nSyslogIdentifier=qbittorrent-nox\n\n[Install]\nWantedBy=multi-user.target\n```\n\nAfter any changes to the services reload using this command.\n\n```bash\nsudo systemctl daemon-reload\n```\n\nNow you can enable the service\n\n```bash\nsudo systemctl enable --now qbittorrent.service\n```\n\nNow you can use these commands\n\n```bash\nsystemctl stop qbittorrent\nsystemctl start qbittorrent\nsystemctl restart qbittorrent\nsystemctl status qbittorrent\n\n```\n\n## Reverse Proxy (Optional)\n\nUse Caddy to access qBittorrent with domain. This should install [[caddy2-setup-for-debian]]\n\nConfig:\n\n```bash\nexample.com {\n   push\n   reverse_proxy 127.0.0.1:8080\n}\n\n```\n\nNow, you can access your qBittorrent web UI at: example.com, the default username and password is : admin/adminadmin\n\n> Note, you should change the default username/password\n\n## Config\n\n- Download directory, `/data/Downloads`\n- Settings, auto add [China](https://github.com/XIU2/TrackersListCollection) <https://trackerslist.com/best.txt> , [US](https://github.com/ngosang/trackerslist) <https://ngosang.github.io/trackerslist/trackers_best.txt>\n- Open `announce_to_all_trackers` at settings.\n\n## Install Search Plugin Jackett\n\n[Jackett](https://github.com/Jackett/Jackett) is a server program that provides support for more than 400 torrent sites (public and private).\n\n### Install Jackett\n\nSee [[jackett-setup]]\n\n### Install Jackett Plugin\n\nSee also at [here](https://github.com/qbittorrent/search-plugins/wiki/How-to-configure-Jackett-plugin)\n\nOpen qBittorrent Web UI, In the Search tab, click the Search plugins... button (bottom-right) -> add new plugin -> `https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/jackett.py`\n\nChange API key settings, You can get it from Jackett UI\n\n```bash\nvim ~/.local/share/qBittorrent/nova3/engines/jackett.json\n```\n\n## Resource\n\n[高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[jackett-setup]: jackett-setup.md \"Jackett Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/radarr-setup/","title":"Radarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Radarr\n  - Setup\n  - Self-Hosted\n---\n\n# Radarr Setup\n\n[repo](https://github.com/Radarr/Radarr)\n\n## Install\n\nSee also [here](https://wiki.servarr.com/radarr/installation#linux)\n\n[Latest Release](https://github.com/Radarr/Radarr/releases)\n\n### Systemd\n\n```bash\ncat << EOF | sudo tee /etc/systemd/system/radarr.service > /dev/null\n[Unit]\nDescription=Radarr Daemon\nAfter=syslog.target network.target\n[Service]\nUser=green\nGroup=admin\nType=simple\n\nExecStart=/home/green/radarr/Radarr -nobrowser -data=/home/green/.config/radarr/\nTimeoutStopSec=20\nKillMode=process\nRestart=always\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n"},{"fields":{"slug":"/rclone-setup/","title":"Rclone Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Rclone\n  - Setup\n  - Files\n---\n\n# Rclone Setup\n\n## Install\n\n```bash\ncurl https://rclone.org/install.sh | sudo bash\n```\n\nAlso see [here](https://rclone.org/drive/)\n\n## Transfer\n\n```bash\ncat ~/.config/rclone\n```\n\nCopy that to another machine.\n\n## Web UI\n\n```bash\nrclone rcd --rc-web-gui --rc-user=test --rc-pass=test --rc-web-gui-update --stats=24h --rc-enable-metrics --rc-web-gui-no-open-browser\n```\n"},{"fields":{"slug":"/rust-enviroment-setup-for-debian/","title":"Rust Environment Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Rust\n  - Debian\n  - Setup\n---\n\n# Rust Environment Setup for Debian\n\n[Official Site](https://www.rust-lang.org/learn/get-started)\n\n## Install\n\n```bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n"},{"fields":{"slug":"/shadowsocks-rust-setup-for-debian/","title":"Shadowsocks Rust Setup for Debian"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Shadowsocks\n  - Rust\n  - Setup\n  - Debian\n  - Proxies\n---\n\n# Shadowsocks Rust Setup for Debian\n\nRepo: <https://github.com/shadowsocks/shadowsocks-rust>\n\nSetup rust first: [[rust-enviroment-setup-for-debian]]\n\n## Install\n\n```bash\nrustup default nightly\ncargo install shadowsocks-rust\n```\n\n## Configure\n\n```bash\nmkdir ss\n```\n\nServer config sample:\n\n```json\n{\n  \"servers\": [\n    {\n      \"address\": \"::\",\n      \"port\": 9982,\n      \"method\": \"chacha20-ietf-poly1305\",\n      \"password\": \"strong-password\",\n      \"mode\": \"tcp_and_udp\",\n      \"fast_open\": false,\n      \"timeout\": 7200\n    }\n  ]\n}\n```\n\n## Add as a system service\n\n```bash\nsudo vim /etc/systemd/system/ss.service\n```\n\n```bash\n[Unit]\nDescription=ssserver service\nAfter=network.target\n\n[Service]\nExecStart=/home/username/.cargo/bin/ssserver -c /home/username/ss/config.json\nExecStop=/usr/bin/killall ssserver\nRestart=on-failure\nStandardOutput=syslog               # Output to syslog\nStandardError=syslog                # Output to syslog\nSyslogIdentifier=ss\nUser=username\nGroup=admin\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now ss\n```\n\n## Run\n\n## Status\n\n```bash\nsudo systemctl status ss\n```\n\n## Stop\n\n```bash\nsudo systemctl stop ss\n```\n\n## Update\n\n```bash\ncargo install shadowsocks-rust\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[rust-enviroment-setup-for-debian]: rust-enviroment-setup-for-debian.md \"Rust Environment Setup for Debian\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/smart-word-break-in-css/","title":"Smart word break in CSS"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - CSS\n---\n\n# Smart word break in CSS\n\n> From [Smarter word break in CSS? - Stack Overflow](https://stackoverflow.com/a/48830291)\n\n```css\nbody {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n```\n"},{"fields":{"slug":"/sonarr-setup/","title":"Sonarr Setup"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Self-Hosted\n  - Sonarr\n---\n\n# Sonarr Setup\n\nBefore setup sonarr, you should setup [[qbittorrent-setup-for-debian]]\n\n## Install\n\nSee [here](https://sonarr.tv/#downloads-v3-linux)\n\nOnce installed, visit <http://ip:8989>\n\n## Restart\n\n```bash\nsudo systemctl restart sonarr\n```\n\n## Setup\n\nSee also [Sonarr Quick Start Guide | WikiArr](https://wiki.servarr.com/sonarr/quick-start-guide)\n\n1. Click on `Settings => Media Management` on the left menu.\n\n   Check `Rename Episodes`\n\n2. Check left top `Show Advanced`\n\n   `Importing` -> `Import Extra Files` `.srt,.ass,.sub`\n\n3. Add `/data/TV` to `Root Folders`\n\n4. Indexers, Add `eztv`, `RARBG` as Indexers, see jackett home page.\n\n### Add qBittorrent Client:\n\n`Setting` -> `Download Clients ` -> `qBittorrent`\n\n## Resource\n\n- [高阶教程-追剧全流程自动化](https://sleele.com/2020/03/16/高阶教程-追剧全流程自动化/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[qbittorrent-setup-for-debian]: qbittorrent-setup-for-debian.md \"qBittorrent setup for Debian\"\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/subtitles/","title":"Subtitles"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Subtitles\n---\n\n# Subtitles\n\n## List\n\n- [ass to srt](https://sorz.github.io/asstosrt-wasm/) - ass to srt converter\n- [[bazarr-setup]] - Subtitle manager\n- [subtitles translate](https://translate-s ubtitles.com/) - Google translate subtitles\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[bazarr-setup]: bazarr-setup.md \"Bazarr Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/svg/","title":"SVG"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - SVG\n  - Front-End\n---\n\n# SVG\n\n## 教程\n\n- [SVG 图像入门教程 - 阮一峰的网络日志](https://www.ruanyifeng.com/blog/2018/08/svg.html)\n"},{"fields":{"slug":"/travel-approvals/","title":"旅行手续"},"frontmatter":{"draft":false},"rawBody":"---\nlanguage: zh\ntags:\n  - Travel\n  - Approvals\n  - 中文\n---\n\n# 旅行手续\n\n## List\n\n- [如何给车辆办理“护照”出境自驾？](https://zhuanlan.zhihu.com/p/25400818) ，[备份](https://web.archive.org/web/20210825164831/https://zhuanlan.zhihu.com/p/25400818)\n"},{"fields":{"slug":"/vim-tips/","title":"Vim Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Tips\n  - Editors\n  - Vim\n---\n\n# Vim Tips\n\n## Tips\n\n- Delete all words: `1,$d`\n"},{"fields":{"slug":"/vscode-tips/","title":"VS Code Tips"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - VS Code\n  - Editors\n  - Tips\n---\n\n# VS Code Tips\n\n## Tips\n\n### Open command palette: `⇧⌘P`\n\n### Select current line: `cmd+L`\n\n### Quick Switch Windows\n\nAlso see [here](https://stackoverflow.com/questions/37371739/os-x-cycle-between-windows-in-visual-studio-code)\n\nAdded the following shortcut to `keybindings.json`\n\n```json\n{\n  \"key\": \"alt+tab\",\n  \"command\": \"workbench.action.quickSwitchWindow\"\n}\n```\n\n## Read more:\n\n- [Visual Studio Code Tips and Tricks](https://code.visualstudio.com/docs/getstarted/tips-and-tricks)\n- [GitHub - microsoft/vscode-tips-and-tricks: Collection of helpful tips and tricks for VS Code.](https://github.com/microsoft/vscode-tips-and-tricks)\n"},{"fields":{"slug":"/youtube-download/","title":"Youtube Download"},"frontmatter":{"draft":false},"rawBody":"---\ntags:\n  - Medias\n  - Youtube\n  - Downloads\n  - Self-Hosted\n  - Metube\n---\n\n# Youtube Download\n\n## List\n\n- [GitHub - alexta69/metube: youtube-dl web UI](https://github.com/alexta69/metube)\n- [Metube chrome extension](https://chrome.google.com/webstore/detail/metube-downloader/fbmkmdnlhacefjljljlbhkodfmfkijdh)\n\n## Setup\n\nRun with [[docker-setup]]\n\n## Config\n\n```yaml\nversion: \"3\"\nservices:\n  metube:\n    image: alexta69/metube\n    container_name: metube\n    restart: unless-stopped\n    ports:\n      - \"10005:8081\"\n    volumes:\n      - /data/youtube:/downloads\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[docker-setup]: docker-setup.md \"Docker Setup\"\n[//end]: # \"Autogenerated link references\"\n"}]}}}