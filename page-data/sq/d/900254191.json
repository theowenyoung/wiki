{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/","title":"Everything I Know by Owen"},"rawBody":"# Everything I Know by Owen\n\nSince I found [Everything I know](https://wiki.nikitavoloboev.xyz), I realized that \"Yes, this is what I want to do\", I used to create many blogs, tumblr, wordpress, hexo, hugo, gatsbyjs etc. But I do not post too much posts, cause there is a certain cost for blog post. But not for note.\n\nSo I hope it's a gift for my grandchildren(if I have :)\n\nWhy I build this?\n\n- Knowledge that is not remembered/not found is useless\n- My memory is poor\n- I am eager to show(show off) what I know\n- The cost of writing a blog is high, but the cost of writing notes is low\n- I need a non-vendor locked solution to motivate me to record permanently\n"},{"fields":{"slug":"/alternatives/moment/","title":"Moment.js Alternatives"},"rawBody":"# Moment.js Alternatives\n\nYou probably don't need Moment.js\n\n## Articles\n\n[You probably don't need Moment.js](https://dev.to/aminnairi/you-probably-don-t-need-moment-js-493m)\n\n## Github\n\n[GitHub - you-dont-need/You-Dont-Need-Momentjs: List of functions which you can use to replace moment.js + ESLint Plugin](https://github.com/you-dont-need/You-Dont-Need-Momentjs)\n"},{"fields":{"slug":"/applications/file-managers/","title":"File Managers"},"rawBody":"# File Managers\n\n## List\n\n- [GitHub - filebrowser/filebrowser: üìÇ Web File Browser](https://github.com/filebrowser/filebrowser)\n"},{"fields":{"slug":"/applications/filebrowser-setup/","title":"FileBrowser Setup"},"rawBody":"# FileBrowser Setup\n\n## Install\n\n```bash\ncurl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash\n```\n\n## Systemd\n\n```bash\nsudo vim /etc/systemd/system/filebrowser.service\n```\n\n```bash\n[Unit]\nDescription=File browser: %I\nAfter=network.target\n\n[Service]\nUser=www-data\nGroup=www-data\nExecStart=/usr/local/sbin/filebrowser -c /etc/filebrowser/%I -d /etc/filebrowser/filebrowser.db\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now filebrowser\n```\n"},{"fields":{"slug":"/auth/git-sshkey/","title":"Use ssh key for Git"},"rawBody":"# Use ssh key for Git\n\nReference: [Generating a new SSH key and adding it to the ssh-agent - GitHub Docs](https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)\n\n## Generate ssh key\n\n```bash\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n# Start the ssh-agent in the background.\neval \"$(ssh-agent -s)\"\n# Add your SSH private key to the ssh-agent\nssh-add ~/.ssh/id_ed25519\n```\n\n## Add ssh key to Github\n\n```bash\ncat .ssh/id_ed25519.pub\n```\n\n[SSH Keys Setting](https://github.com/settings/keys)\n"},{"fields":{"slug":"/awesome/gatsby/","title":"Awesome Gatsby"},"rawBody":"# Awesome Gatsby\n\n## Plugins\n\n- [GitHub - kraynel/gatsby-transformer-gitinfo](https://github.com/kraynel/gatsby-transformer-gitinfo) - Add git info to file, so you can get last update date for your files.\n\n## Tutorials\n\n[How to get 'Last Update Date' of a blog post in GATSBY.js - Stack Overflow](https://stackoverflow.com/questions/56025679/how-to-get-last-update-date-of-a-blog-post-in-gatsby-js)\n"},{"fields":{"slug":"/awesome/jackett-indexes/","title":"Awesome Jackett Indexes"},"rawBody":"# Awesome Jackett Indexes\n\n## List\n\n- EZTV\n- RARBG\n- YTS\n\n## References\n\n[È´òÈò∂ÊïôÁ®ã-ËøΩÂâßÂÖ®ÊµÅÁ®ãËá™Âä®Âåñ](https://sleele.com/2020/03/16/È´òÈò∂ÊïôÁ®ã-ËøΩÂâßÂÖ®ÊµÅÁ®ãËá™Âä®Âåñ/)\n"},{"fields":{"slug":"/backend/rust-debian-setup/","title":"Rust Environment Setup for Debian"},"rawBody":"# Rust Environment Setup for Debian\n\n[Official Site](https://www.rust-lang.org/learn/get-started)\n\n## Install\n\n```bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```"},{"fields":{"slug":"/editors/vim/","title":"Vim Tips"},"rawBody":"# Vim Tips\n\n## Tips\n\n- Delete all words: `1,$d`\n"},{"fields":{"slug":"/editors/vscode/","title":"VS Code Tips"},"rawBody":"# VS Code Tips\n\n## Tips\n\n### Open command palette: `‚áß‚åòP`\n\n### Select current line: `cmd+L`\n\n### Quick Switch Windows\n\nAlso see [here](https://stackoverflow.com/questions/37371739/os-x-cycle-between-windows-in-visual-studio-code)\n\nAdded the following shortcut to `keybindings.json`\n\n```json\n{\n  \"key\": \"alt+tab\",\n  \"command\": \"workbench.action.quickSwitchWindow\"\n}\n```\n\n## Read more:\n\n- [Visual Studio Code Tips and Tricks](https://code.visualstudio.com/docs/getstarted/tips-and-tricks)\n- [GitHub - microsoft/vscode-tips-and-tricks: Collection of helpful tips and tricks for VS Code.](https://github.com/microsoft/vscode-tips-and-tricks)\n"},{"fields":{"slug":"/frontend/static-site-generator/","title":"Static Site Generator"},"rawBody":"# Static Site Generator\n\n## List\n\n- [Eleventy](https://www.11ty.dev/docs/getting-started/)\n- [Gatsby](https://www.gatsbyjs.com/docs/tutorial/)\n- [Docusaurus](https://docusaurus.io/)\n\n## Starter\n\n- [GitHub - stefanfrede/11st-starter-kit: 11ty, powered by Snowpack with Tailwind CSS and Alpine.js.](https://github.com/stefanfrede/11st-starter-kit)\n"},{"fields":{"slug":"/frontend/svg/","title":"SVG"},"rawBody":"# SVG\n\n## ÊïôÁ®ã\n\n- [SVG ÂõæÂÉèÂÖ•Èó®ÊïôÁ®ã - ÈòÆ‰∏ÄÂ≥∞ÁöÑÁΩëÁªúÊó•Âøó](https://www.ruanyifeng.com/blog/2018/08/svg.html)"},{"fields":{"slug":"/medias/bazarr-setup/","title":"Bazarr Setup"},"rawBody":"# Bazarr Setup\n\n## Install\n\nSee also [here](https://wiki.bazarr.media/Getting-Started/Installation/Linux/linux/)\n\n```bash\nsudo apt-get install python3-pip python3-distutils -y\nwget https://github.com/morpheus65535/bazarr/releases/latest/download/bazarr.zip\nunzip bazarr.zip -d ~/bazarr\ncd bazarr\npython3 -m pip install -r requirements.txt\n```\n\n### Setup as system service\n\nReference at [here](https://wiki.bazarr.media/Getting-Started/Autostart/Linux/linux/)\n\nYou have to create a `bazarr.service` file in `/etc/systemd/system` that would contain the following text:\n\n```bash\nsudo vim /etc/systemd/system/bazarr.service\n```\n\n```bash\n[Unit]\nDescription=Bazarr Daemon\nAfter=syslog.target network.target\n\n# After=syslog.target network.target sonarr.service radarr.service\n\n[Service]\nWorkingDirectory=/home/green/bazarr/\nUser=green\nGroup=admin\nUMask=0002\nRestart=on-failure\nRestartSec=5\nType=simple\nExecStart=/usr/bin/python3 /home/green/bazarr/bazarr.py\nKillSignal=SIGINT\nTimeoutStopSec=20\nSyslogIdentifier=bazarr\nExecStartPre=/bin/sleep 30\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now bazarr\nsudo systemctl status bazarr\nsudo systemctl restart bazarr\n\n```\n\n## Configure\n\nYou can set your password at the UI.\n\n### Sonarr\n\nEnabled, See [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#sonarr)\n\n### Provider\n\nAdd Zimuku, assrt, Opensubtitle\n\n### Language\n\nSee [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#languages)\n\nAdd default settings, see [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#default-settings)\n"},{"fields":{"slug":"/medias/caddy-file-server-url-scheme/","title":"Caddy File Server Browser with URL Scheme"},"rawBody":"# Caddy File Server Browser with URL Scheme\n\n[Template](https://gist.github.com/theowenyoung/e09cb6e2c59f247fdc3f4e6fe4401481)\n\nUse this template to display the follow page:\n![](../attachments/caddy-file-server-url-scheme/2021-08-18-04-02-53.png)\n\n```bash\nlocalhost {\n  root * /root\n  encode gzip\n  file_server {\n    browse ./file-browser-template-for-caddy.html\n    hide .*\n  }\n}\n```\n"},{"fields":{"slug":"/medias/jackett-setup/","title":"Setup Jackett"},"rawBody":"# Setup Jackett\n\nRead more at [here](https://github.com/Jackett/Jackett#install-as-service)\n\n1. Download and extract the latest `Jackett.Binaries.LinuxAMDx64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases)\n\n```bash\nwget https://github.com/Jackett/Jackett/releases/download/v0.18.545/Jackett.Binaries.LinuxAMDx64.tar.gz\n# tar to a directory you want\ntar -xf Jackett.Binaries.LinuxAMDx64.tar.gz\n```\n\n2. To install Jackett as a service, open a Terminal, cd to the jackett folder and run `sudo ./install_service_systemd.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\n`http://your-ip:9117`\n\nYou can set password, or port by UI.\n"},{"fields":{"slug":"/medias/jellyfin-setup/","title":"Jellyfin setup"},"rawBody":"# Jellyfin setup\n\n## Install\n\nSee [Installing Jellyfin | Documentation - Jellyfin Project](https://jellyfin.org/docs/general/administration/installing.html#debian)\n\n## Usage\n\n```bash\nsudo systemctl restart jellyfin\n```\n\n## ‰∏≠ÊñáÂ≠ó‰Ωì\n\n1. Download google noto fonts:\n   This [repo](https://github.com/CodePlayer/webfont-noto) compiled noto fonts, so you can just download it and use it.\n\n   ```bash\n   wget https://github.com/CodePlayer/webfont-noto/raw/master/dist/NotoSans/NotoSansCJKsc-hinted/subset/NotoSansCJKsc-hinted-standard/NotoSansCJKsc-Regular.woff2\n   ```\n\n   At Jellyfin Admin dashboard, player, open back font, add the font path\n\n## FAQ\n\n- [Jellyfin ‰∏≠ÊñáÂ≠ó‰ΩìÈóÆÈ¢ò](https://github.com/jellyfin/jellyfin-web/issues/934)\n"},{"fields":{"slug":"/medias/radarr-setup/","title":"Radarr Setup"},"rawBody":"# Radarr Setup\n\n[repo](https://github.com/Radarr/Radarr)\n\n## Install\n\nSee also [here](https://wiki.servarr.com/radarr/installation#linux)\n\n[Latest Release](https://github.com/Radarr/Radarr/releases)\n\n### Systemd\n\n```bash\ncat << EOF | sudo tee /etc/systemd/system/radarr.service > /dev/null\n[Unit]\nDescription=Radarr Daemon\nAfter=syslog.target network.target\n[Service]\nUser=green\nGroup=admin\nType=simple\n\nExecStart=/home/green/radarr/Radarr -nobrowser -data=/home/green/.config/radarr/\nTimeoutStopSec=20\nKillMode=process\nRestart=always\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n"},{"fields":{"slug":"/medias/rclone-setup/","title":"Rclone Setup"},"rawBody":"# Rclone Setup\n\n## Install\n\n```bash\ncurl https://rclone.org/install.sh | sudo bash\n```\n\nAlso see [here](https://rclone.org/drive/)\n\n## Transfer\n\n```bash\ncat ~/.config/rclone\n```\n\nCopy that to another machine.\n\n## Web UI\n\n```bash\nrclone rcd --rc-web-gui --rc-user=test --rc-pass=test --rc-web-gui-update --stats=24h --rc-enable-metrics --rc-web-gui-no-open-browser\n```\n"},{"fields":{"slug":"/medias/","title":"Medias"},"rawBody":"# Medias\n\n- [[sonarr-setup]]\n- [[jellyfin-setup]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[sonarr-setup]: sonarr-setup.md \"Sonarr Setup\"\n[jellyfin-setup]: jellyfin-setup.md \"jellyfin-setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/medias/sonarr-setup/","title":"Sonarr Setup"},"rawBody":"# Sonarr Setup\n\nBefore setup sonarr, you should setup [[qbittorrent]]\n\n## Install\n\nSee [here](https://sonarr.tv/#downloads-v3-linux)\n\nOnce installed, visit <http://ip:8989>\n\n## Restart\n\n```bash\nsudo systemctl restart sonarr\n```\n\n## Setup\n\nSee also [Sonarr Quick Start Guide | WikiArr](https://wiki.servarr.com/sonarr/quick-start-guide)\n\n1. Click on `Settings => Media Management` on the left menu.\n\n   Check `Rename Episodes`\n\n2. Check left top `Show Advanced`\n\n   `Importing` -> `Import Extra Files` `.srt,.ass,.sub`\n\n3. Add `/data/TV` to `Root Folders`\n\n4. Indexers, Add `eztv`, `RARBG` as Indexers, see jackett home page.\n\n### Add qBittorrent Client:\n\n`Setting` -> `Download Clients ` -> `qBittorrent`\n\n## Resource\n\n- [È´òÈò∂ÊïôÁ®ã-ËøΩÂâßÂÖ®ÊµÅÁ®ãËá™Âä®Âåñ](https://sleele.com/2020/03/16/È´òÈò∂ÊïôÁ®ã-ËøΩÂâßÂÖ®ÊµÅÁ®ãËá™Âä®Âåñ/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[qbittorrent]: ../server/qbittorrent.md \"Debian install qBittorrent with Jackett\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/medias/subtitles/","title":"Subtitles"},"rawBody":"# Subtitles\n\n## List\n\n- [ass to srt](https://sorz.github.io/asstosrt-wasm/) - ass to srt converter\n- [[bazarr-setup]] - Subtitle manager\n- [subtitles translate](https://translate-subtitles.com/) - Google translate subtitles\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[bazarr-setup]: bazarr-setup.md \"Bazarr Setup\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/notes/url-scheme/","title":"Common URL Scheme"},"rawBody":"# Common URL Scheme\n\n## IINA\n\n[IINA - The modern media player for macOS](https://iina.io/)\n\nOpen stream video:\n\n```bash\niina://weblink?url={encoed url}\n```\n"},{"fields":{"slug":"/programming-languages/bash-tips/","title":"Untitled"},"rawBody":"![](../assets/images/bash-tips/2021-08-21-05-22-45.png)\n"},{"fields":{"slug":"/programming-languages/go-template/","title":"Go Template Tips"},"rawBody":"# Go Template Tips\n\n- Parent Variable, `{{$.XX}}`\n- URL encode, `urlquery \"https://test.com\"`\n"},{"fields":{"slug":"/programming-languages/nodejs-tips/","title":"Nodejs Tips"},"rawBody":"# Nodejs Tips\n\n## Answers\n\n### Delete node_modules folder recursively from a specified path using command line\n\n> [Delete node_modules folder recursively from a specified path using command line - Stack Overflow](https://stackoverflow.com/questions/42950501/delete-node-modules-folder-recursively-from-a-specified-path-using-command-line)\n\n```bash\nfind . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n```\n"},{"fields":{"slug":"/proxy/caddy/","title":"Setup Caddy 2 in Debian 10"},"rawBody":"# Setup Caddy 2 in Debian 10\n\n[Official Site](https://caddyserver.com/v2)\n\n## Install\n\n```bash\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install caddy\n```\n\nOnce installed, caddy is running.\n\nThe default config file at `/etc/caddy/Caddyfile`\n"},{"fields":{"slug":"/proxy/ss-rust/","title":"Shadowsocks Rust Setup"},"rawBody":"# Shadowsocks Rust Setup\n\nRepo: <https://github.com/shadowsocks/shadowsocks-rust>\n\nSetup rust first: [[rust-debian-setup]]\n\n## Install\n\n```bash\nrustup default nightly\ncargo install shadowsocks-rust\n```\n\n## Configure\n\n```bash\nmkdir ss\n```\n\nServer config sample:\n\n```json\n{\n  \"servers\": [\n    {\n      \"address\": \"::\",\n      \"port\": 9982,\n      \"method\": \"chacha20-ietf-poly1305\",\n      \"password\": \"strong-password\",\n      \"mode\": \"tcp_and_udp\",\n      \"fast_open\": false,\n      \"timeout\": 7200\n    }\n  ]\n}\n```\n\n## Add as a system service\n\n```bash\nsudo vim /etc/systemd/system/ss.service\n```\n\n```bash\n[Unit]\nDescription=ssserver service\nAfter=network.target\n\n[Service]\nExecStart=/home/username/.cargo/bin/ssserver -c /home/username/ss/config.json\nExecStop=/usr/bin/killall ssserver\nRestart=on-failure\nStandardOutput=syslog               # Output to syslog\nStandardError=syslog                # Output to syslog\nSyslogIdentifier=ss\nUser=username\nGroup=admin\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now ss\n```\n\n## Run\n\n## Status\n\n```bash\nsudo systemctl status ss\n```\n\n## Stop\n\n```bash\nsudo systemctl stop ss\n```\n\n## Update\n\n```bash\ncargo install shadowsocks-rust\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[rust-debian-setup]: ../backend/rust-debian-setup.md \"Rust Environment Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/server/benchmark/","title":"Benchmark"},"rawBody":"# Benchmark\n\n## Proxy\n\n- [GitHub - NickMRamirez/Proxy-Benchmarks: Benchmarks for several proxies](https://github.com/NickMRamirez/Proxy-Benchmarks)\n"},{"fields":{"slug":"/server/chinese-font-setup/","title":"Debian add Google Chinese font"},"rawBody":"# Debian add Google Chinese font\n\nhttps://noto-website.storage.googleapis.com/pkgs/NotoSansCJKsc-hinted.zip\n\n```bash\n#!/bin/sh\n\n# Written by: Keefer Rourke <https://krourke.org>\n# Based on AUR package <https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=ttf-google-fonts-git>\n\n# dependancies: fonts-cantarell, ttf-ubuntu-font-family, git\nsudo apt-get install fonts-cantarell ttf-ubuntu-font-family git\nsrcdir=\"/tmp/google-fonts\"\npkgdir=\"/usr/share/fonts/truetype/google-fonts\"\ngiturl=\"git://github.com/google/fonts.git\"\n\nmkdir $srcdir\ncd $srcdir\necho \"Cloning Git repository...\"\ngit clone $giturl\n\necho \"Installing fonts...\"\nsudo mkdir -p $pkgdir\nsudo find $srcdir -type f -name \"*.ttf\" -exec install -Dm644 {} $pkgdir \\;\n\necho \"Cleaning up...\"\nsudo find $pkgdir -type f -name \"Cantarell-*.ttf\" -delete \\;\nsudo find $pkgdir -type f -name \"Ubuntu-*.ttf\" -delete \\;\n\n# provides roboto\nsudo apt-get --purge remove fonts-roboto\n\necho \"Updating font-cache...\"\nsudo fc-cache -f > /dev/null\n\necho \"Done!\"\n```\n"},{"fields":{"slug":"/server/debian-bbr/","title":"Debian Open BBR"},"rawBody":"# Debian Open BBR\n\n## Steps\n\n1. Open the following configuration file to enable enable TCP BBR.\n\n```bash\nvi /etc/sysctl.conf\n```\n\n2. At the end of the config file, add the following lines.\n\n```bash\nnet.core.default_qdisc=fq\nnet.ipv4.tcp_congestion_control=bbr\n```\n\n3. reload\n\n```bash\nsysctl -p\n```\n\nNow, Verify if BBR is enabled in your system,\n\n```bash\nsysctl net.ipv4.tcp_congestion_control\n```\n\nOutput:\n\n```bash\nroot@vps:~# sysctl net.ipv4.tcp_congestion_control\nnet.ipv4.tcp_congestion_control = bbr\n```\n"},{"fields":{"slug":"/server/debian-nodejs-setup/","title":"Nodejs Setup"},"rawBody":"# Nodejs Setup\n\n## Install\n\nSee also [here](https://github.com/nodesource/distributions/blob/master/README.md)\n\n```bash\n# Using Debian, as root\ncurl -fsSL https://deb.nodesource.com/setup_14.x | bash -\napt-get install -y nodejs\n```\n"},{"fields":{"slug":"/server/debian-setup/","title":"Debian Server Setup"},"rawBody":"---\nlanguage: en\n---\n\n# Debian Server Setup\n\n> For linux common commands, see [[linux-common-command]]\n\n1. Update Source\n\n   ```bash\n   apt update --yes && apt upgrade --yes\n   ```\n\n1. Install sudo package\n\n   ```bash\n   apt install -y sudo\n   ```\n\n1. Open BBR: [[debian-bbr]]\n\n1. Use ssh key login instead of password, for more details see [How To Configure SSH Key-Based Authentication on a Linux Server](https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server)\n\n1. In your local machine:\n\n```bash\nssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\n```\n\n3. Change the default password\n\n   1. `passwd`\n\n4. Create an admin group\n   1. `groupadd admin`\n   2. Give admin group root access, and no password sudo\n      1. Backup sudo files `cp /etc/sudoers /root/sudoers.bak`\n      2. Edit the `/etc/sudoers` file by typing the command: `visudo`\n      3. Add `%admin ALL=(ALL:ALL) NOPASSWD:ALL` after `sudo` group\n5. Create a admin group user\n   1. `useradd username -g admin`\n6. Use ssh key login instead of password for normal user\n   1. `ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host`\n7. Login with new normal user `ssh username@ip`\n8. Install common utils:\n   1. `sudo apt install build-essential software-properties-common curl vim unzip --yes`\n9. Create `/data` for store data files with `777` permissions, avoid to use `/home` directory\n\nYou might want to read also:\n\n- [[ss-rust]]\n- [[caddy]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[linux-common-command]: linux-common-command.md \"Linux Common Commands\"\n[debian-bbr]: debian-bbr.md \"Debian Open BBR\"\n[ss-rust]: ../proxy/ss-rust.md \"Shadowsocks Rust Setup\"\n[caddy]: ../proxy/caddy.md \"Setup Caddy 2 in Debian 10\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/server/linux-common-command/","title":"Linux Common Commands"},"rawBody":"# Linux Common Commands\n\n## View current system info\n\n```bash\nlsb_release -a\n```\n\nOutput:\n\n```bash\nDistributor ID:\tDebian\nDescription:\tDebian GNU/Linux 10 (buster)\nRelease:\t10\nCodename:\tbuster\n```\n\n## View all users\n\n```bash\ncat /etc/passwd | grep -v nologin|grep -v halt|grep -v shutdown|awk -F\":\" '{ print $1\"|\"$3\"|\"$4 }'|more\n```\n\n## Get Publish IP\n\n```bash\nhostname -I\n```\n\n## Change user group\n\n```bash\nusermod -g groupname username\n```\n\n## Get user group\n\n```bash\nid -g -n\n```\n\n## Remove apt ppa\n\n```bash\nsudo add-apt-repository --remove ppa:qbittorrent-team/qbittorrent-stable\n```\n\n## Get current shell\n\n```bash\necho \"$SHELL\"\n```\n\n## Get current cpu arch\n\n```bash\narch\n```\n\nor\n\n```bash\ndpkg --print-architecture\n```\n\n## Unzip tar.gz\n\n```bash\ntar -xf x.tar.gz\n```\n\nSee also [here](https://linuxize.com/post/how-to-extract-unzip-tar-gz-file/)\n\nTar to specific directory\n\n```bash\ntar -xf x.tar.gz -C ./xxx\n```\n"},{"fields":{"slug":"/server/qbittorrent/","title":"Debian install qBittorrent with Jackett"},"rawBody":"---\ntags:\n  - Download\n  - Bit Torrent\n  - qBittorrent\n  - Jackett\n---\n\n# Debian install qBittorrent with Jackett\n\n## Install\n\nBecause there is no official ppa of qBittorrent for debian, so we use a [third party service - qbittorrent-nox-static](https://github.com/userdocs/qbittorrent-nox-static) to compile qb.\n\n1. Download script\n\n```bash\nwget -qO ~/qbittorrent-nox-static.sh https://git.io/qbstatic\nchmod +x ~/qbittorrent-nox-static.sh\n# pre\nsudo ~/qbittorrent-nox-static.sh\n# build\n~/qbittorrent-nox-static.sh all\n# install\nsudo ~/qbittorrent-nox-static.sh install\n```\n\n## Configure\n\nRead more at [qbittorrent-nox configure](https://userdocs.github.io/qbittorrent-nox-static/#/install-qbittorrent?id=configuring-qbittorrent)\n\n```bash\nvim ~/.config/qBittorrent/qBittorrent.conf\n```\n\nWith follow config:\n\n```ini\n[LegalNotice]\nAccepted=true\n\n[Preferences]\nWebUI\\Port=8080\nWebUI\\HostHeaderValidation=false\n```\n\n## Systemd service\n\nReference at [here](https://userdocs.github.io/qbittorrent-nox-static/#/systemd)\n\n```bash\n# create a user\nsudo vim /etc/systemd/system/qbittorrent.service\n```\n\nConfig:\n\n```bash\n[Unit]\nDescription=qBittorrent-nox service\nWants=network-online.target\nAfter=network-online.target nss-lookup.target\n\n[Service]\nType=exec\nUser=qbtuser\nExecStart=/usr/local/bin/qbittorrent-nox\nRestart=on-failure\nSyslogIdentifier=qbittorrent-nox\n\n[Install]\nWantedBy=multi-user.target\n```\n\nAfter any changes to the services reload using this command.\n\n```bash\nsudo systemctl daemon-reload\n```\n\nNow you can enable the service\n\n```bash\nsudo systemctl enable --now qbittorrent.service\n```\n\nNow you can use these commands\n\n```bash\nsystemctl stop qbittorrent\nsystemctl start qbittorrent\nsystemctl restart qbittorrent\nsystemctl status qbittorrent\n\n```\n\n## Reverse Proxy (Optional)\n\nUse Caddy to access qBittorrent with domain. This should install [[caddy]]\n\nConfig:\n\n```bash\nexample.com {\n   push\n   reverse_proxy 127.0.0.1:8080\n}\n\n```\n\nNow, you can access your qBittorrent web UI at: example.com, the default username and password is : admin/adminadmin\n\n> Note, you should change the default username/password\n\n## Config\n\n- Download directory, `/data/Downloads`\n- Settings, auto add [China](https://github.com/XIU2/TrackersListCollection) <https://trackerslist.com/best.txt> , [US](https://github.com/ngosang/trackerslist) <https://ngosang.github.io/trackerslist/trackers_best.txt>\n- Open `announce_to_all_trackers` at settings.\n\n## Install Search Plugin Jackett\n\n[Jackett](https://github.com/Jackett/Jackett) is a server program that provides support for more than 400 torrent sites (public and private).\n\n### Install Jackett\n\nSee [[jackett-setup]]\n\n### Install Jackett Plugin\n\nSee also at [here](https://github.com/qbittorrent/search-plugins/wiki/How-to-configure-Jackett-plugin)\n\nOpen qBittorrent Web UI, In the Search tab, click the Search plugins... button (bottom-right) -> add new plugin -> `https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/jackett.py`\n\nChange API key settings, You can get it from Jackett UI\n\n```bash\nvim ~/.local/share/qBittorrent/nova3/engines/jackett.json\n```\n\n## Resource\n\n[È´òÈò∂ÊïôÁ®ã-ËøΩÂâßÂÖ®ÊµÅÁ®ãËá™Âä®Âåñ](https://sleele.com/2020/03/16/È´òÈò∂ÊïôÁ®ã-ËøΩÂâßÂÖ®ÊµÅÁ®ãËá™Âä®Âåñ/)\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[caddy]: ../proxy/caddy.md \"Setup Caddy 2 in Debian 10\"\n[jackett-setup]: ../medias/jackett-setup.md \"Setup Jackett\"\n[//end]: # \"Autogenerated link references\"\n"},{"fields":{"slug":"/todos/wiki-theme/","title":"Wiki Todo"},"rawBody":"---\ndraft: true\n---\n\n# Wiki Todo\n\n[] - excerpt as description\n[] - Better performance for reference\n"},{"fields":{"slug":"/versions/git-tips/","title":"Git Tips"},"rawBody":"# Git Tips\n\n## Answers\n\n- [Finding the date/time a file was first added to a Git repository - Stack Overflow](https://stackoverflow.com/questions/2390199/finding-the-date-time-a-file-was-first-added-to-a-git-repository/25633731)\n"},{"fields":{"slug":"/workflows/makefile/","title":"Makefile Sample"},"rawBody":"# Makefile Sample\n\n```Makefile\n.PHONY: start reload stop\nstart:\n\tsystemctl start caddy\nstop:\n\tsystemctl stop caddy\nreload:\n\tsystemctl reload caddy\n```\n"},{"fields":{"slug":"/SUMMARY/","title":"Summary"},"rawBody":"# Summary\n\n## Categories\n\n- Applications\n  - [[file-managers]]\n  - [[filebrowser-setup.md]]\n- Auth\n  - [[git-sshkey]]\n- Awesomes\n  - [[jackett-indexes]]\n- Backend\n  - [[rust-debian-setup]]\n- Editors\n  - [[vim]]\n  - [[vscode]]\n- Frontend\n  - [[static-site-generator]]\n  - [[svg]]\n- [[readme]]\n  - [[bazarr-setup]]\n  - [[caddy-file-server-url-scheme]]\n  - [[jackett-setup]]\n  - [[jellyfin-setup]]\n  - [[radarr-setup]]\n  - [[rclone-setup]]\n  - [[sonarr-setup]]\n  - [[subtitles]]\n- Programming Languages\n  - [[go-template]]\n- Proxy\n  - [[caddy]]\n  - [[ss-rust]]\n- Server\n  - [[benchmark]]\n  - [[debian-setup]]\n  - [[chinese-font-setup]]\n  - [[debian-bbr]]\n  - [[debian-nodejs-setup]]\n  - [[linux-common-command]]\n  - [[qbittorrent]]\n- Versions\n- Workflows\n  - [[makefile]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[file-managers]: applications/file-managers.md \"File Managers\"\n[filebrowser-setup.md]: applications/filebrowser-setup.md \"FileBrowser Setup\"\n[git-sshkey]: auth/git-sshkey.md \"Use ssh key for Git\"\n[jackett-indexes]: awesome/jackett-indexes.md \"Awesome Jackett Indexes\"\n[rust-debian-setup]: backend/rust-debian-setup.md \"Rust Environment Setup for Debian\"\n[vim]: editors/vim.md \"Vim Tips\"\n[vscode]: editors/vscode.md \"VS Code Tips\"\n[static-site-generator]: frontend/static-site-generator.md \"Static Site Generator\"\n[svg]: frontend/svg.md \"SVG\"\n[readme]: medias/readme.md \"Medias\"\n[bazarr-setup]: medias/bazarr-setup.md \"Bazarr Setup\"\n[caddy-file-server-url-scheme]: medias/caddy-file-server-url-scheme.md \"Caddy File Server Browser with URL Scheme\"\n[jackett-setup]: medias/jackett-setup.md \"Setup Jackett\"\n[jellyfin-setup]: medias/jellyfin-setup.md \"Jellyfin setup\"\n[radarr-setup]: medias/radarr-setup.md \"Radarr Setup\"\n[rclone-setup]: medias/rclone-setup.md \"Rclone Setup\"\n[sonarr-setup]: medias/sonarr-setup.md \"Sonarr Setup\"\n[subtitles]: medias/subtitles.md \"Subtitles\"\n[go-template]: programming-languages/go-template.md \"Go Template Tips\"\n[caddy]: proxy/caddy.md \"Setup Caddy 2 in Debian 10\"\n[ss-rust]: proxy/ss-rust.md \"Shadowsocks Rust Setup\"\n[benchmark]: server/benchmark.md \"Benchmark\"\n[debian-setup]: server/debian-setup.md \"Debian Server Setup\"\n[chinese-font-setup]: server/chinese-font-setup.md \"Debian add Google Chinese font\"\n[debian-bbr]: server/debian-bbr.md \"Debian Open BBR\"\n[debian-nodejs-setup]: server/debian-nodejs-setup.md \"Nodejs Setup\"\n[linux-common-command]: server/linux-common-command.md \"Linux Common Commands\"\n[qbittorrent]: server/qbittorrent.md \"Debian install qBittorrent with Jackett\"\n[makefile]: workflows/makefile.md \"Makefile Sample\"\n[//end]: # \"Autogenerated link references\"ces\"\n"}]}}}