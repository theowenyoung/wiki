{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/shadowsocks-rust-setup-for-debian/",
    "result": {"data":{"allSummaryGroup":{"nodes":[]},"mdx":{"id":"96e1eeca-5b15-54f4-8622-d73b78c66a36","tableOfContents":{"items":[{"url":"#shadowsocks-rust-setup-for-debian","title":"Shadowsocks Rust Setup for Debian","items":[{"url":"#install","title":"Install"},{"url":"#configure","title":"Configure"},{"url":"#add-as-a-system-service","title":"Add as a system service"},{"url":"#run","title":"Run"},{"url":"#status","title":"Status"},{"url":"#stop","title":"Stop"},{"url":"#update","title":"Update"}]}]},"fields":{"title":"Shadowsocks Rust Setup for Debian","slug":"/shadowsocks-rust-setup-for-debian/","url":"https://wiki.owenyoung.com/shadowsocks-rust-setup-for-debian/","editUrl":"https://github.com/theowenyoung/wiki/tree/main/shadowsocks-rust-setup-for-debian.md","lastUpdatedAt":"2021-08-27T02:25:34.000Z","lastUpdated":"8/27/2021","gitCreatedAt":"2021-08-27T02:25:34.000Z"},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Shadowsocks","Rust","Setup","Debian","Proxies"],"date":null,"dateModified":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Shadowsocks\", \"Rust\", \"Setup\", \"Debian\", \"Proxies\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"shadowsocks-rust-setup-for-debian\"\n  }, \"Shadowsocks Rust Setup for Debian\"), mdx(\"p\", null, \"Repo: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/shadowsocks/shadowsocks-rust\"\n  }, \"https://github.com/shadowsocks/shadowsocks-rust\")), mdx(\"p\", null, \"Setup rust first: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rust-enviroment-setup-for-debian/\",\n    \"title\": \"Rust Environment Setup for Debian\"\n  }, \"rust-enviroment-setup-for-debian\"), \"\"), mdx(\"h2\", {\n    \"id\": \"install\"\n  }, \"Install\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"rustup default nightly\\ncargo install shadowsocks-rust\\n\")), mdx(\"h2\", {\n    \"id\": \"configure\"\n  }, \"Configure\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir ss\\n\")), mdx(\"p\", null, \"Server config sample:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"servers\\\": [\\n    {\\n      \\\"address\\\": \\\"::\\\",\\n      \\\"port\\\": 9982,\\n      \\\"method\\\": \\\"chacha20-ietf-poly1305\\\",\\n      \\\"password\\\": \\\"strong-password\\\",\\n      \\\"mode\\\": \\\"tcp_and_udp\\\",\\n      \\\"fast_open\\\": false,\\n      \\\"timeout\\\": 7200\\n    }\\n  ]\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"add-as-a-system-service\"\n  }, \"Add as a system service\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo vim /etc/systemd/system/ss.service\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"[Unit]\\nDescription=ssserver service\\nAfter=network.target\\n\\n[Service]\\nExecStart=/home/username/.cargo/bin/ssserver -c /home/username/ss/config.json\\nExecStop=/usr/bin/killall ssserver\\nRestart=on-failure\\nStandardOutput=syslog               # Output to syslog\\nStandardError=syslog                # Output to syslog\\nSyslogIdentifier=ss\\nUser=username\\nGroup=admin\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl daemon-reload\\nsudo systemctl enable --now ss\\n\")), mdx(\"h2\", {\n    \"id\": \"run\"\n  }, \"Run\"), mdx(\"h2\", {\n    \"id\": \"status\"\n  }, \"Status\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl status ss\\n\")), mdx(\"h2\", {\n    \"id\": \"stop\"\n  }, \"Stop\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl stop ss\\n\")), mdx(\"h2\", {\n    \"id\": \"update\"\n  }, \"Update\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cargo install shadowsocks-rust\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntags:\n  - Shadowsocks\n  - Rust\n  - Setup\n  - Debian\n  - Proxies\n---\n\n# Shadowsocks Rust Setup for Debian\n\nRepo: <https://github.com/shadowsocks/shadowsocks-rust>\n\nSetup rust first: [[rust-enviroment-setup-for-debian]]\n\n## Install\n\n```bash\nrustup default nightly\ncargo install shadowsocks-rust\n```\n\n## Configure\n\n```bash\nmkdir ss\n```\n\nServer config sample:\n\n```json\n{\n  \"servers\": [\n    {\n      \"address\": \"::\",\n      \"port\": 9982,\n      \"method\": \"chacha20-ietf-poly1305\",\n      \"password\": \"strong-password\",\n      \"mode\": \"tcp_and_udp\",\n      \"fast_open\": false,\n      \"timeout\": 7200\n    }\n  ]\n}\n```\n\n## Add as a system service\n\n```bash\nsudo vim /etc/systemd/system/ss.service\n```\n\n```bash\n[Unit]\nDescription=ssserver service\nAfter=network.target\n\n[Service]\nExecStart=/home/username/.cargo/bin/ssserver -c /home/username/ss/config.json\nExecStop=/usr/bin/killall ssserver\nRestart=on-failure\nStandardOutput=syslog               # Output to syslog\nStandardError=syslog                # Output to syslog\nSyslogIdentifier=ss\nUser=username\nGroup=admin\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now ss\n```\n\n## Run\n\n## Status\n\n```bash\nsudo systemctl status ss\n```\n\n## Stop\n\n```bash\nsudo systemctl stop ss\n```\n\n## Update\n\n```bash\ncargo install shadowsocks-rust\n```\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[rust-enviroment-setup-for-debian]: rust-enviroment-setup-for-debian.md \"Rust Environment Setup for Debian\"\n[//end]: # \"Autogenerated link references\"","excerpt":"Shadowsocks Rust Setup for Debian Repo:  https://github.com/shadowsocks/shadowsocks-rust Setup rust first: [ rust-enviroment-setup-for-debiâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Rust\", \"Debian\", \"Setup\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"rust-environment-setup-for-debian\"\n  }, \"Rust Environment Setup for Debian\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.rust-lang.org/learn/get-started\"\n  }, \"Official Site\")), mdx(\"h2\", {\n    \"id\": \"install\"\n  }, \"Install\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/rust-enviroment-setup-for-debian/","title":"Rust Environment Setup for Debian"}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Debian\", \"Server\", \"Setup\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"debian-server-setup\"\n  }, \"Debian Server Setup\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"For linux common commands, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/linux-common-commands/\",\n    \"title\": \"Linux Common Commands\"\n  }, \"linux-common-commands\"), \"\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Update Source\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"apt update --yes && apt upgrade --yes\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install sudo package\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"apt install -y sudo\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Open BBR: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/open-bbr-for-debian/\",\n    \"title\": \"Open BBR for Debian\"\n  }, \"open-bbr-for-debian\"), \"\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use ssh key login instead of password, for more details see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server\"\n  }, \"How To Configure SSH Key-Based Authentication on a Linux Server\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In your local machine:\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Change the default password\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"passwd\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create an admin group\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"groupadd admin\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Give admin group root access, and no password sudo\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Backup sudo files \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cp /etc/sudoers /root/sudoers.bak\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Edit the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/etc/sudoers\"), \" file by typing the command: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"visudo\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"%admin ALL=(ALL:ALL) NOPASSWD:ALL\"), \" after \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo\"), \" group\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a admin group user\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useradd username -g admin\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use ssh key login instead of password for normal user\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Login with new normal user \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssh username@ip\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install common utils:\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install build-essential software-properties-common curl vim unzip --yes\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/data\"), \" for store data files with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"777\"), \" permissions, avoid to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/home\"), \" directory\"))), mdx(\"p\", null, \"You might want to read also:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/shadowsocks-rust-setup-for-debian/\",\n    \"title\": \"Shadowsocks Rust Setup for Debian\"\n  }, \"shadowsocks-rust-setup-for-debian\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/caddy2-setup-for-debian/\",\n    \"title\": \"Caddy2 Setup for Debian\"\n  }, \"caddy2-setup-for-debian\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/debian-server-setup/","title":"Debian Server Setup"}}]}},"pageContext":{"slug":"/shadowsocks-rust-setup-for-debian/"}},
    "staticQueryHashes": ["1749056788","1831670082","2426452686","2962529501","3495835395","3583993237","476497397","900254191"]}