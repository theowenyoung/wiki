{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/jackett-setup/",
    "result": {"data":{"allSummaryGroup":{"nodes":[]},"mdx":{"id":"feab1fd8-d4cc-564d-9692-9386387217a5","tableOfContents":{"items":[{"url":"#jackett-setup","title":"Jackett Setup"}]},"fields":{"title":"Jackett Setup","slug":"/jackett-setup/","url":"https://wiki.owenyoung.com/jackett-setup/","editUrl":"https://github.com/theowenyoung/wiki/tree/main/jackett-setup.md","lastUpdatedAt":"2021-08-27T02:25:34.000Z","lastUpdated":"8/27/2021","gitCreatedAt":"2021-08-27T02:25:34.000Z"},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Medias","Jackett","Torrents","BT","Self-Hosted","Setup"],"date":null,"dateModified":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Medias\", \"Jackett\", \"Torrents\", \"BT\", \"Self-Hosted\", \"Setup\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"jackett-setup\"\n  }, \"Jackett Setup\"), mdx(\"p\", null, \"Read more at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Jackett/Jackett#install-as-service\"\n  }, \"here\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download and extract the latest \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Jackett.Binaries.LinuxAMDx64.tar.gz\"), \" release from the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Jackett/Jackett/releases\"\n  }, \"releases page\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"wget https://github.com/Jackett/Jackett/releases/download/v0.18.545/Jackett.Binaries.LinuxAMDx64.tar.gz\\n# tar to a directory you want\\ntar -xf Jackett.Binaries.LinuxAMDx64.tar.gz\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To install Jackett as a service, open a Terminal, cd to the jackett folder and run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo ./install_service_systemd.sh\"), \" You need root permissions to install the service. The service will start on each logon. You can always stop it by running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"systemctl stop jackett.service\"), \" from Terminal. You can start it again it using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"systemctl start jackett.service\"), \". Logs are stored as usual under \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.config/Jackett/log.txt\"), \" and also in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"journalctl -u jackett.service\"), \".\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://your-ip:9117\")), mdx(\"p\", null, \"You can set password, or port by UI.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntags:\n  - Medias\n  - Jackett\n  - Torrents\n  - BT\n  - Self-Hosted\n  - Setup\n---\n\n# Jackett Setup\n\nRead more at [here](https://github.com/Jackett/Jackett#install-as-service)\n\n1. Download and extract the latest `Jackett.Binaries.LinuxAMDx64.tar.gz` release from the [releases page](https://github.com/Jackett/Jackett/releases)\n\n```bash\nwget https://github.com/Jackett/Jackett/releases/download/v0.18.545/Jackett.Binaries.LinuxAMDx64.tar.gz\n# tar to a directory you want\ntar -xf Jackett.Binaries.LinuxAMDx64.tar.gz\n```\n\n2. To install Jackett as a service, open a Terminal, cd to the jackett folder and run `sudo ./install_service_systemd.sh` You need root permissions to install the service. The service will start on each logon. You can always stop it by running `systemctl stop jackett.service` from Terminal. You can start it again it using `systemctl start jackett.service`. Logs are stored as usual under `~/.config/Jackett/log.txt` and also in `journalctl -u jackett.service`.\n\n`http://your-ip:9117`\n\nYou can set password, or port by UI.\n","excerpt":"Jackett Setup Read more at  here Download and extract the latest  Jackett.Binaries.LinuxAMDx64.tar.gz  release from the  releases page To iâ€¦","outboundReferences":[],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Downloads\", \"BT\", \"Torrents\", \"qBittorrent\", \"Jackett\", \"Debian\", \"Setup\", \"Server\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"qbittorrent-setup-for-debian\"\n  }, \"qBittorrent setup for Debian\"), mdx(\"h2\", {\n    \"id\": \"install\"\n  }, \"Install\"), mdx(\"p\", null, \"Because there is no official ppa of qBittorrent for debian, so we use a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/userdocs/qbittorrent-nox-static\"\n  }, \"third party service - qbittorrent-nox-static\"), \" to compile qb.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download script\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"wget -qO ~/qbittorrent-nox-static.sh https://git.io/qbstatic\\nchmod +x ~/qbittorrent-nox-static.sh\\n# pre\\nsudo ~/qbittorrent-nox-static.sh\\n# build\\n~/qbittorrent-nox-static.sh all\\n# install\\nsudo ~/qbittorrent-nox-static.sh install\\n\")), mdx(\"h2\", {\n    \"id\": \"configure\"\n  }, \"Configure\"), mdx(\"p\", null, \"Read more at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://userdocs.github.io/qbittorrent-nox-static/#/install-qbittorrent?id=configuring-qbittorrent\"\n  }, \"qbittorrent-nox configure\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"vim ~/.config/qBittorrent/qBittorrent.conf\\n\")), mdx(\"p\", null, \"With follow config:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ini\"\n  }, \"[LegalNotice]\\nAccepted=true\\n\\n[Preferences]\\nWebUI\\\\Port=8080\\nWebUI\\\\HostHeaderValidation=false\\n\")), mdx(\"h2\", {\n    \"id\": \"systemd-service\"\n  }, \"Systemd service\"), mdx(\"p\", null, \"Reference at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://userdocs.github.io/qbittorrent-nox-static/#/systemd\"\n  }, \"here\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# create a user\\nsudo vim /etc/systemd/system/qbittorrent.service\\n\")), mdx(\"p\", null, \"Config:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"[Unit]\\nDescription=qBittorrent-nox service\\nWants=network-online.target\\nAfter=network-online.target nss-lookup.target\\n\\n[Service]\\nType=exec\\nUser=qbtuser\\nExecStart=/usr/local/bin/qbittorrent-nox\\nRestart=on-failure\\nSyslogIdentifier=qbittorrent-nox\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")), mdx(\"p\", null, \"After any changes to the services reload using this command.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl daemon-reload\\n\")), mdx(\"p\", null, \"Now you can enable the service\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl enable --now qbittorrent.service\\n\")), mdx(\"p\", null, \"Now you can use these commands\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"systemctl stop qbittorrent\\nsystemctl start qbittorrent\\nsystemctl restart qbittorrent\\nsystemctl status qbittorrent\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"reverse-proxy-optional\"\n  }, \"Reverse Proxy (Optional)\"), mdx(\"p\", null, \"Use Caddy to access qBittorrent with domain. This should install \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/caddy2-setup-for-debian/\",\n    \"title\": \"Caddy2 Setup for Debian\"\n  }, \"caddy2-setup-for-debian\"), \"\"), mdx(\"p\", null, \"Config:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"example.com {\\n   push\\n   reverse_proxy 127.0.0.1:8080\\n}\\n\\n\")), mdx(\"p\", null, \"Now, you can access your qBittorrent web UI at: example.com, the default username and password is : admin/adminadmin\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note, you should change the default username/password\")), mdx(\"h2\", {\n    \"id\": \"config\"\n  }, \"Config\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Download directory, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/data/Downloads\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Settings, auto add \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/XIU2/TrackersListCollection\"\n  }, \"China\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://trackerslist.com/best.txt\"\n  }, \"https://trackerslist.com/best.txt\"), \" , \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ngosang/trackerslist\"\n  }, \"US\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ngosang.github.io/trackerslist/trackers_best.txt\"\n  }, \"https://ngosang.github.io/trackerslist/trackers_best.txt\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"announce_to_all_trackers\"), \" at settings.\")), mdx(\"h2\", {\n    \"id\": \"install-search-plugin-jackett\"\n  }, \"Install Search Plugin Jackett\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Jackett/Jackett\"\n  }, \"Jackett\"), \" is a server program that provides support for more than 400 torrent sites (public and private).\"), mdx(\"h3\", {\n    \"id\": \"install-jackett\"\n  }, \"Install Jackett\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/jackett-setup/\",\n    \"title\": \"Jackett Setup\"\n  }, \"jackett-setup\"), \"\"), mdx(\"h3\", {\n    \"id\": \"install-jackett-plugin\"\n  }, \"Install Jackett Plugin\"), mdx(\"p\", null, \"See also at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/qbittorrent/search-plugins/wiki/How-to-configure-Jackett-plugin\"\n  }, \"here\")), mdx(\"p\", null, \"Open qBittorrent Web UI, In the Search tab, click the Search plugins... button (bottom-right) -> add new plugin -> \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/jackett.py\")), mdx(\"p\", null, \"Change API key settings, You can get it from Jackett UI\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"vim ~/.local/share/qBittorrent/nova3/engines/jackett.json\\n\")), mdx(\"h2\", {\n    \"id\": \"resource\"\n  }, \"Resource\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://sleele.com/2020/03/16/%E9%AB%98%E9%98%B6%E6%95%99%E7%A8%8B-%E8%BF%BD%E5%89%A7%E5%85%A8%E6%B5%81%E7%A8%8B%E8%87%AA%E5%8A%A8%E5%8C%96/\"\n  }, \"\\u9AD8\\u9636\\u6559\\u7A0B-\\u8FFD\\u5267\\u5168\\u6D41\\u7A0B\\u81EA\\u52A8\\u5316\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/qbittorrent-setup-for-debian/","title":"qBittorrent setup for Debian"}}]}},"pageContext":{"slug":"/jackett-setup/"}},
    "staticQueryHashes": ["1749056788","1831670082","2426452686","2962529501","3495835395","3583993237","476497397","900254191"]}