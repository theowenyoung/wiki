{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/bazarr-setup/",
    "result": {"data":{"allSummaryGroup":{"nodes":[]},"mdx":{"id":"2e2eca33-d6e0-51ba-bb94-1f31830b22b1","tableOfContents":{"items":[{"url":"#bazarr-setup","title":"Bazarr Setup","items":[{"url":"#install","title":"Install"},{"url":"#configure","title":"Configure"}]}]},"fields":{"title":"Bazarr Setup","slug":"/bazarr-setup/","url":"https://wiki.owenyoung.com/bazarr-setup/","editUrl":"https://github.com/theowenyoung/wiki/tree/main/bazarr-setup.md","lastUpdatedAt":"2021-08-27T02:25:34.000Z","lastUpdated":"8/27/2021","gitCreatedAt":"2021-08-27T02:25:34.000Z"},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Medias","Subtitles","Setup","Self-Hosted"],"date":null,"dateModified":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Medias\", \"Subtitles\", \"Setup\", \"Self-Hosted\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bazarr-setup\"\n  }, \"Bazarr Setup\"), mdx(\"h2\", {\n    \"id\": \"install\"\n  }, \"Install\"), mdx(\"p\", null, \"See also \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.bazarr.media/Getting-Started/Installation/Linux/linux/\"\n  }, \"here\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo apt-get install python3-pip python3-distutils -y\\nwget https://github.com/morpheus65535/bazarr/releases/latest/download/bazarr.zip\\nunzip bazarr.zip -d ~/bazarr\\ncd bazarr\\npython3 -m pip install -r requirements.txt\\n\")), mdx(\"h3\", {\n    \"id\": \"setup-as-system-service\"\n  }, \"Setup as system service\"), mdx(\"p\", null, \"Reference at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.bazarr.media/Getting-Started/Autostart/Linux/linux/\"\n  }, \"here\")), mdx(\"p\", null, \"You have to create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bazarr.service\"), \" file in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/systemd/system\"), \" that would contain the following text:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo vim /etc/systemd/system/bazarr.service\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"[Unit]\\nDescription=Bazarr Daemon\\nAfter=syslog.target network.target\\n\\n# After=syslog.target network.target sonarr.service radarr.service\\n\\n[Service]\\nWorkingDirectory=/home/green/bazarr/\\nUser=green\\nGroup=admin\\nUMask=0002\\nRestart=on-failure\\nRestartSec=5\\nType=simple\\nExecStart=/usr/bin/python3 /home/green/bazarr/bazarr.py\\nKillSignal=SIGINT\\nTimeoutStopSec=20\\nSyslogIdentifier=bazarr\\nExecStartPre=/bin/sleep 30\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl daemon-reload\\nsudo systemctl enable --now bazarr\\nsudo systemctl status bazarr\\nsudo systemctl restart bazarr\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"configure\"\n  }, \"Configure\"), mdx(\"p\", null, \"You can set your password at the UI.\"), mdx(\"h3\", {\n    \"id\": \"sonarr\"\n  }, \"Sonarr\"), mdx(\"p\", null, \"Enabled, See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.bazarr.media/Getting-Started/Setup-Guide/#sonarr\"\n  }, \"here\")), mdx(\"h3\", {\n    \"id\": \"provider\"\n  }, \"Provider\"), mdx(\"p\", null, \"Add Zimuku, assrt, Opensubtitle\"), mdx(\"h3\", {\n    \"id\": \"language\"\n  }, \"Language\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.bazarr.media/Getting-Started/Setup-Guide/#languages\"\n  }, \"here\")), mdx(\"p\", null, \"Add default settings, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.bazarr.media/Getting-Started/Setup-Guide/#default-settings\"\n  }, \"here\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntags:\n  - Medias\n  - Subtitles\n  - Setup\n  - Self-Hosted\n---\n\n# Bazarr Setup\n\n## Install\n\nSee also [here](https://wiki.bazarr.media/Getting-Started/Installation/Linux/linux/)\n\n```bash\nsudo apt-get install python3-pip python3-distutils -y\nwget https://github.com/morpheus65535/bazarr/releases/latest/download/bazarr.zip\nunzip bazarr.zip -d ~/bazarr\ncd bazarr\npython3 -m pip install -r requirements.txt\n```\n\n### Setup as system service\n\nReference at [here](https://wiki.bazarr.media/Getting-Started/Autostart/Linux/linux/)\n\nYou have to create a `bazarr.service` file in `/etc/systemd/system` that would contain the following text:\n\n```bash\nsudo vim /etc/systemd/system/bazarr.service\n```\n\n```bash\n[Unit]\nDescription=Bazarr Daemon\nAfter=syslog.target network.target\n\n# After=syslog.target network.target sonarr.service radarr.service\n\n[Service]\nWorkingDirectory=/home/green/bazarr/\nUser=green\nGroup=admin\nUMask=0002\nRestart=on-failure\nRestartSec=5\nType=simple\nExecStart=/usr/bin/python3 /home/green/bazarr/bazarr.py\nKillSignal=SIGINT\nTimeoutStopSec=20\nSyslogIdentifier=bazarr\nExecStartPre=/bin/sleep 30\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable --now bazarr\nsudo systemctl status bazarr\nsudo systemctl restart bazarr\n\n```\n\n## Configure\n\nYou can set your password at the UI.\n\n### Sonarr\n\nEnabled, See [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#sonarr)\n\n### Provider\n\nAdd Zimuku, assrt, Opensubtitle\n\n### Language\n\nSee [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#languages)\n\nAdd default settings, see [here](https://wiki.bazarr.media/Getting-Started/Setup-Guide/#default-settings)\n","excerpt":"Bazarr Setup Install See also  here Setup as system service Reference at  here You have to create a  bazarr.service  file in  /etc/systemd/â€¦","outboundReferences":[],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Medias\", \"Subtitles\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"subtitles\"\n  }, \"Subtitles\"), mdx(\"h2\", {\n    \"id\": \"list\"\n  }, \"List\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sorz.github.io/asstosrt-wasm/\"\n  }, \"ass to srt\"), \" - ass to srt converter\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/bazarr-setup/\",\n    \"title\": \"Bazarr Setup\"\n  }, \"bazarr-setup\"), \" - Subtitle manager\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[subtitles translate]\", \"(https://translate-s ubtitles.com/) - Google translate subtitles\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/subtitles/","title":"Subtitles"}}]}},"pageContext":{"slug":"/bazarr-setup/"}},
    "staticQueryHashes": ["1749056788","1831670082","2426452686","2962529501","3495835395","3583993237","476497397","900254191"]}