{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/debian-server-setup/",
    "result": {"data":{"allSummaryGroup":{"nodes":[]},"mdx":{"id":"a500301a-1a6b-5b6c-a650-e4929f1bd6ef","tableOfContents":{"items":[{"url":"#debian-server-setup","title":"Debian Server Setup"}]},"fields":{"title":"Debian Server Setup","slug":"/debian-server-setup/","url":"https://wiki.owenyoung.com/debian-server-setup/","editUrl":"https://github.com/theowenyoung/wiki/tree/main/debian-server-setup.md","lastUpdatedAt":"2021-08-27T03:43:35.000Z","lastUpdated":"8/27/2021","gitCreatedAt":"2021-08-27T03:43:35.000Z"},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":["Debian","Server","Setup"],"date":null,"dateModified":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Debian\", \"Server\", \"Setup\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"debian-server-setup\"\n  }, \"Debian Server Setup\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"For linux common commands, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/linux-common-commands/\",\n    \"title\": \"Linux Common Commands\"\n  }, \"linux-common-commands\"), \"\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Update Source\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"apt update --yes && apt upgrade --yes\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install sudo package\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"apt install -y sudo\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Open BBR: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/open-bbr-for-debian/\",\n    \"title\": \"Open BBR for Debian\"\n  }, \"open-bbr-for-debian\"), \"\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use ssh key login instead of password, for more details see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server\"\n  }, \"How To Configure SSH Key-Based Authentication on a Linux Server\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In your local machine:\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Change the default password\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"passwd\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create an admin group\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"groupadd admin\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Give admin group root access, and no password sudo\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Backup sudo files \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cp /etc/sudoers /root/sudoers.bak\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Edit the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/etc/sudoers\"), \" file by typing the command: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"visudo\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"%admin ALL=(ALL:ALL) NOPASSWD:ALL\"), \" after \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo\"), \" group\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a admin group user\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useradd username -g admin\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use ssh key login instead of password for normal user\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Login with new normal user \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssh username@ip\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install common utils:\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo apt install build-essential software-properties-common curl vim unzip --yes\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/data\"), \" for store data files with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"777\"), \" permissions, avoid to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/home\"), \" directory\"))), mdx(\"p\", null, \"You might want to read also:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/shadowsocks-rust-setup-for-debian/\",\n    \"title\": \"Shadowsocks Rust Setup for Debian\"\n  }, \"shadowsocks-rust-setup-for-debian\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/caddy2-setup-for-debian/\",\n    \"title\": \"Caddy2 Setup for Debian\"\n  }, \"caddy2-setup-for-debian\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\ntags:\n  - Debian\n  - Server\n  - Setup\n---\n\n# Debian Server Setup\n\n> For linux common commands, see [[linux-common-commands]]\n\n1. Update Source\n\n   ```bash\n   apt update --yes && apt upgrade --yes\n   ```\n\n2. Install sudo package\n\n   ```bash\n   apt install -y sudo\n   ```\n\n3. Open BBR: [[open-bbr-for-debian]]\n\n4. Use ssh key login instead of password, for more details see [How To Configure SSH Key-Based Authentication on a Linux Server](https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server)\n\n5. In your local machine:\n\n```bash\nssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host\n```\n\n3. Change the default password\n\n   1. `passwd`\n\n4. Create an admin group\n   1. `groupadd admin`\n   2. Give admin group root access, and no password sudo\n      1. Backup sudo files `cp /etc/sudoers /root/sudoers.bak`\n      2. Edit the `/etc/sudoers` file by typing the command: `visudo`\n      3. Add `%admin ALL=(ALL:ALL) NOPASSWD:ALL` after `sudo` group\n5. Create a admin group user\n   1. `useradd username -g admin`\n6. Use ssh key login instead of password for normal user\n   1. `ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote_host`\n7. Login with new normal user `ssh username@ip`\n8. Install common utils:\n   1. `sudo apt install build-essential software-properties-common curl vim unzip --yes`\n9. Create `/data` for store data files with `777` permissions, avoid to use `/home` directory\n\nYou might want to read also:\n\n- [[shadowsocks-rust-setup-for-debian]]\n- [[caddy2-setup-for-debian]]\n\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\n[linux-common-commands]: linux-common-commands.md \"Linux Common Commands\"\n[open-bbr-for-debian]: open-bbr-for-debian.md \"Open BBR for Debian\"\n[shadowsocks-rust-setup-for-debian]: shadowsocks-rust-setup-for-debian.md \"Shadowsocks Rust Setup for Debian\"\n[caddy2-setup-for-debian]: caddy2-setup-for-debian.md \"Caddy2 Setup for Debian\"\n[//end]: # \"Autogenerated link references\"\n","excerpt":"Debian Server Setup For linux common commands, see [ linux-common-commands ] Update Source Install sudo package Open BBR: [ open-bbr-for-de…","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Caddy\", \"Debian\", \"Setup\", \"Proxies\", \"Server\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"caddy2-setup-for-debian\"\n  }, \"Caddy2 Setup for Debian\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://caddyserver.com/v2\"\n  }, \"Official Site\")), mdx(\"h2\", {\n    \"id\": \"install\"\n  }, \"Install\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https\\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo tee /etc/apt/trusted.gpg.d/caddy-stable.asc\\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\\nsudo apt update\\nsudo apt install caddy\\n\")), mdx(\"p\", null, \"Once installed, caddy is running.\"), mdx(\"p\", null, \"The default config file at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/caddy/Caddyfile\")), mdx(\"h2\", {\n    \"id\": \"resources\"\n  }, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/greenpau/caddy-auth-portal\"\n  }, \"GitHub - greenpau/caddy-auth-portal: Authentication Plugin for Caddy v2 implementing Form-Based, Basic, Local, LDAP, OpenID Connect, OAuth 2.0 (Github, Google, Facebook, Okta, etc.), SAML Authentication\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/greenpau/caddy-auth-jwt\"\n  }, \"GitHub - greenpau/caddy-auth-jwt: JWT Authorization Plugin for Caddy v2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://caddyserver.com/docs/caddyfile/directives/basicauth#basicauth\"\n  }, \"basicauth (Caddyfile directive) \\u2014 Caddy Documentation\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/caddy2-setup-for-debian/","title":"Caddy2 Setup for Debian"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Tips\", \"Linux\", \"Commands\", \"Bash\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"linux-common-commands\"\n  }, \"Linux Common Commands\"), mdx(\"h2\", {\n    \"id\": \"view-current-system-info\"\n  }, \"View current system info\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"lsb_release -a\\n\")), mdx(\"p\", null, \"Output:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"Distributor ID: Debian\\nDescription:    Debian GNU/Linux 10 (buster)\\nRelease:    10\\nCodename:   buster\\n\")), mdx(\"h2\", {\n    \"id\": \"view-all-users\"\n  }, \"View all users\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cat /etc/passwd | grep -v nologin|grep -v halt|grep -v shutdown|awk -F\\\":\\\" '{ print $1\\\"|\\\"$3\\\"|\\\"$4 }'|more\\n\")), mdx(\"h2\", {\n    \"id\": \"get-publish-ip\"\n  }, \"Get Publish IP\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"hostname -I\\n\")), mdx(\"h2\", {\n    \"id\": \"change-user-group\"\n  }, \"Change user group\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"usermod -g groupname username\\n\")), mdx(\"h2\", {\n    \"id\": \"get-user-group\"\n  }, \"Get user group\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"id -g -n\\n\")), mdx(\"h2\", {\n    \"id\": \"remove-apt-ppa\"\n  }, \"Remove apt ppa\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo add-apt-repository --remove ppa:qbittorrent-team/qbittorrent-stable\\n\")), mdx(\"h2\", {\n    \"id\": \"get-current-shell\"\n  }, \"Get current shell\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"echo \\\"$SHELL\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"get-current-cpu-arch\"\n  }, \"Get current cpu arch\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"arch\\n\")), mdx(\"p\", null, \"or\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"dpkg --print-architecture\\n\")), mdx(\"h2\", {\n    \"id\": \"unzip-targz\"\n  }, \"Unzip tar.gz\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"tar -xf x.tar.gz\\n\")), mdx(\"p\", null, \"See also \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://linuxize.com/post/how-to-extract-unzip-tar-gz-file/\"\n  }, \"here\")), mdx(\"p\", null, \"Tar to specific directory\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"tar -xf x.tar.gz -C ./xxx\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/linux-common-commands/","title":"Linux Common Commands"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Debian\", \"Server\", \"BBR\", \"Proxies\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"open-bbr-for-debian\"\n  }, \"Open BBR for Debian\"), mdx(\"h2\", {\n    \"id\": \"steps\"\n  }, \"Steps\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open the following configuration file to enable enable TCP BBR.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"vi /etc/sysctl.conf\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"At the end of the config file, add the following lines.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"net.core.default_qdisc=fq\\nnet.ipv4.tcp_congestion_control=bbr\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"reload\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sysctl -p\\n\")), mdx(\"p\", null, \"Now, Verify if BBR is enabled in your system,\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sysctl net.ipv4.tcp_congestion_control\\n\")), mdx(\"p\", null, \"Output:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"root@vps:~# sysctl net.ipv4.tcp_congestion_control\\nnet.ipv4.tcp_congestion_control = bbr\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/open-bbr-for-debian/","title":"Open BBR for Debian"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": [\"Shadowsocks\", \"Rust\", \"Setup\", \"Debian\", \"Proxies\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"shadowsocks-rust-setup-for-debian\"\n  }, \"Shadowsocks Rust Setup for Debian\"), mdx(\"p\", null, \"Repo: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/shadowsocks/shadowsocks-rust\"\n  }, \"https://github.com/shadowsocks/shadowsocks-rust\")), mdx(\"p\", null, \"Setup rust first: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rust-enviroment-setup-for-debian/\",\n    \"title\": \"Rust Environment Setup for Debian\"\n  }, \"rust-enviroment-setup-for-debian\"), \"\"), mdx(\"h2\", {\n    \"id\": \"install\"\n  }, \"Install\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"rustup default nightly\\ncargo install shadowsocks-rust\\n\")), mdx(\"h2\", {\n    \"id\": \"configure\"\n  }, \"Configure\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"mkdir ss\\n\")), mdx(\"p\", null, \"Server config sample:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"servers\\\": [\\n    {\\n      \\\"address\\\": \\\"::\\\",\\n      \\\"port\\\": 9982,\\n      \\\"method\\\": \\\"chacha20-ietf-poly1305\\\",\\n      \\\"password\\\": \\\"strong-password\\\",\\n      \\\"mode\\\": \\\"tcp_and_udp\\\",\\n      \\\"fast_open\\\": false,\\n      \\\"timeout\\\": 7200\\n    }\\n  ]\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"add-as-a-system-service\"\n  }, \"Add as a system service\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo vim /etc/systemd/system/ss.service\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"[Unit]\\nDescription=ssserver service\\nAfter=network.target\\n\\n[Service]\\nExecStart=/home/username/.cargo/bin/ssserver -c /home/username/ss/config.json\\nExecStop=/usr/bin/killall ssserver\\nRestart=on-failure\\nStandardOutput=syslog               # Output to syslog\\nStandardError=syslog                # Output to syslog\\nSyslogIdentifier=ss\\nUser=username\\nGroup=admin\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl daemon-reload\\nsudo systemctl enable --now ss\\n\")), mdx(\"h2\", {\n    \"id\": \"run\"\n  }, \"Run\"), mdx(\"h2\", {\n    \"id\": \"status\"\n  }, \"Status\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl status ss\\n\")), mdx(\"h2\", {\n    \"id\": \"stop\"\n  }, \"Stop\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"sudo systemctl stop ss\\n\")), mdx(\"h2\", {\n    \"id\": \"update\"\n  }, \"Update\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cargo install shadowsocks-rust\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":""},"fields":{"slug":"/shadowsocks-rust-setup-for-debian/","title":"Shadowsocks Rust Setup for Debian"}}],"inboundReferences":[]}},"pageContext":{"slug":"/debian-server-setup/","sidebarItems":[{"title":"Tags","items":[{"title":"#API","items":[{"title":"API Tokens","url":"/api-tokens/"}]},{"title":"#Approvals","items":[{"title":"旅行手续","url":"/travel-approvals/"}]},{"title":"#Auth","items":[{"title":"API Tokens","url":"/api-tokens/"},{"title":"Auth Gateway","url":"/auth-gateway/"},{"title":"Use ssh key for Git","url":"/git-sshkey/"}]},{"title":"#Awesome","items":[{"title":"Awesome Backup","url":"/awesome-backup/"},{"title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"title":"Awesome Bookmarks","url":"/awesome-bookmarks/"},{"title":"Awesome File Managers","url":"/awesome-file-managers/"},{"title":"Awesome Gatsby","url":"/awesome-gatsby/"},{"title":"Awesome Jackett Indexes","url":"/awesome-jackett-indexes/"},{"title":"Awesome JS Date","url":"/awesome-js-date/"},{"title":"Awesome Socials","url":"/awesome-socials/"},{"title":"Awesome Static Site Generator","url":"/awesome-static-site-generator/"},{"title":"Awesome UI","url":"/awesome-ui/"}]},{"title":"#BBR","items":[{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"}]},{"title":"#BT","items":[{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Bash","items":[{"title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"#Benchmark","items":[{"title":"Awesome Benchmark","url":"/awesome-benchmark/"}]},{"title":"#Caddy","items":[{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"}]},{"title":"#Commands","items":[{"title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"#Date","items":[{"title":"Awesome JS Date","url":"/awesome-js-date/"}]},{"title":"#Debian","items":[{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Debian Server Setup","url":"/debian-server-setup/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Docker","items":[{"title":"Docker Setup","url":"/docker-setup/"}]},{"title":"#Downloads","items":[{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Editors","items":[{"title":"Vim Tips","url":"/vim-tips/"},{"title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"#Files","items":[{"title":"Awesome File Managers","url":"/awesome-file-managers/"},{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"FileBrowser Setup","url":"/filebrowser-setup/"},{"title":"Rclone Setup","url":"/rclone-setup/"}]},{"title":"#Front-End","items":[{"title":"Awesome UI","url":"/awesome-ui/"},{"title":"SVG","url":"/svg/"}]},{"title":"#Git","items":[{"title":"Use ssh key for Git","url":"/git-sshkey/"},{"title":"Git Tips","url":"/git-tips/"},{"title":"Git workflows","url":"/git-workflows/"}]},{"title":"#Go","items":[{"title":"Go Template Tips","url":"/go-template-tips/"}]},{"title":"#Jackett","items":[{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Javascript","items":[{"title":"Awesome JS Date","url":"/awesome-js-date/"}]},{"title":"#Jellyfin","items":[{"title":"Jellyfin setup","url":"/jellyfin-setup/"}]},{"title":"#Linux","items":[{"title":"Linux Common Commands","url":"/linux-common-commands/"}]},{"title":"#Makefile - Templates - Workflows","items":[{"title":"Makefile Templates","url":"/makefile-templates/"}]},{"title":"#Medias","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"Jellyfin setup","url":"/jellyfin-setup/"},{"title":"Radarr Setup","url":"/radarr-setup/"},{"title":"Rclone Setup","url":"/rclone-setup/"},{"title":"Sonarr Setup","url":"/sonarr-setup/"},{"title":"Subtitles","url":"/subtitles/"},{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Metube","items":[{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Monorepo","items":[{"title":"Nodejs Monorepo","url":"/nodejs-monorepo/"}]},{"title":"#Nodejs","items":[{"title":"Nodejs Monorepo","url":"/nodejs-monorepo/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Nodejs Tips","url":"/nodejs-tips/"}]},{"title":"#Programming-Languages","items":[{"title":"Go Template Tips","url":"/go-template-tips/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Nodejs Tips","url":"/nodejs-tips/"}]},{"title":"#Proxies","items":[{"title":"Awesome Benchmark","url":"/awesome-benchmark/"},{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Radarr","items":[{"title":"Radarr Setup","url":"/radarr-setup/"}]},{"title":"#Rclone","items":[{"title":"Rclone Setup","url":"/rclone-setup/"}]},{"title":"#Rust","items":[{"title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#SSH","items":[{"title":"Use ssh key for Git","url":"/git-sshkey/"}]},{"title":"#SVG","items":[{"title":"SVG","url":"/svg/"}]},{"title":"#Self-Hosted","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"Jellyfin setup","url":"/jellyfin-setup/"},{"title":"Radarr Setup","url":"/radarr-setup/"},{"title":"Sonarr Setup","url":"/sonarr-setup/"},{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#Server","items":[{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Debian Server Setup","url":"/debian-server-setup/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"Open BBR for Debian","url":"/open-bbr-for-debian/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Setup","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Caddy2 Setup for Debian","url":"/caddy2-setup-for-debian/"},{"title":"Debian Server Setup","url":"/debian-server-setup/"},{"title":"Docker Setup","url":"/docker-setup/"},{"title":"FileBrowser Setup","url":"/filebrowser-setup/"},{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"Jellyfin setup","url":"/jellyfin-setup/"},{"title":"Nodejs Setup for Debian","url":"/nodejs-setup-for-debian/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"},{"title":"Radarr Setup","url":"/radarr-setup/"},{"title":"Rclone Setup","url":"/rclone-setup/"},{"title":"Rust Environment Setup for Debian","url":"/rust-enviroment-setup-for-debian/"},{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Shadowsocks","items":[{"title":"Shadowsocks Rust Setup for Debian","url":"/shadowsocks-rust-setup-for-debian/"}]},{"title":"#Social","items":[{"title":"Awesome Socials","url":"/awesome-socials/"}]},{"title":"#Sonarr","items":[{"title":"Sonarr Setup","url":"/sonarr-setup/"}]},{"title":"#Static-Site-Generator","items":[{"title":"Awesome Static Site Generator","url":"/awesome-static-site-generator/"}]},{"title":"#Subtitles","items":[{"title":"Bazarr Setup","url":"/bazarr-setup/"},{"title":"Subtitles","url":"/subtitles/"}]},{"title":"#Templates","items":[{"title":"Caddy File Server Browser with URL Scheme","url":"/caddy-file-server-url-scheme/"},{"title":"Go Template Tips","url":"/go-template-tips/"}]},{"title":"#Tips","items":[{"title":"Common URL Scheme","url":"/common-url-scheme/"},{"title":"Git Tips","url":"/git-tips/"},{"title":"Go Template Tips","url":"/go-template-tips/"},{"title":"Linux Common Commands","url":"/linux-common-commands/"},{"title":"Nodejs Tips","url":"/nodejs-tips/"},{"title":"Vim Tips","url":"/vim-tips/"},{"title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"#Torrents","items":[{"title":"Jackett Setup","url":"/jackett-setup/"},{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]},{"title":"#Travel","items":[{"title":"旅行手续","url":"/travel-approvals/"}]},{"title":"#UI","items":[{"title":"Awesome UI","url":"/awesome-ui/"}]},{"title":"#URL","items":[{"title":"Common URL Scheme","url":"/common-url-scheme/"}]},{"title":"#VS Code","items":[{"title":"VS Code Tips","url":"/vscode-tips/"}]},{"title":"#Vim","items":[{"title":"Vim Tips","url":"/vim-tips/"}]},{"title":"#Workflows","items":[{"title":"Git workflows","url":"/git-workflows/"},{"title":"Nodejs Monorepo","url":"/nodejs-monorepo/"}]},{"title":"#Youtube","items":[{"title":"Youtube Download","url":"/youtube-download/"}]},{"title":"#qBittorrent","items":[{"title":"qBittorrent setup for Debian","url":"/qbittorrent-setup-for-debian/"}]}]}]}},
    "staticQueryHashes": ["1831670082","2962529501","3495835395","3583993237","476497397","900254191"]}