{"version":3,"file":"component---node-modules-gatsby-theme-primer-wiki-src-templates-tag-query-js-88c0ed8733fd7065d8e7.js","mappings":"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","sources":["webpack://wiki/./node_modules/url-join/lib/url-join.js","webpack://wiki/./node_modules/gatsby-theme-primer-wiki/src/components/sidebar.js","webpack://wiki/./node_modules/gatsby-theme-primer-wiki/src/components/layout.js","webpack://wiki/./node_modules/gatsby-theme-primer-wiki/src/templates/tag-query.js","webpack://wiki/./node_modules/gatsby-theme-primer-wiki/src/components/tag-page.js"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n\n    if (strArray.length === 0) {\n      return '';\n    }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    } // If the first part is a plain protocol, we combine it with the next part.\n\n\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    } // There must be two or three slashes in the file protocol, two slashes in anything else.\n\n\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') {\n        continue;\n      }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n    }\n\n    var str = resultArray.join('/'); // Each input component is now separated by a single slash except the possible first plain protocol part.\n    // remove trailing slash before parameters or hash\n\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1'); // replace ? in parameters with &\n\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n});","import { Box } from \"@primer/components\";\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { HEADER_HEIGHT } from \"./header\";\nimport NavItems from \"./nav-items\";\n\nfunction usePersistentScroll(id) {\n  const ref = React.useRef();\n\n  const handleScroll = React.useCallback(\n    // Save scroll position in session storage on every scroll change\n    (event) => window.sessionStorage.setItem(id, event.target.scrollTop),\n    [id]\n  );\n\n  React.useEffect(() => {\n    // Restore scroll position when component mounts\n    const scrollPosition = window.sessionStorage.getItem(id);\n    if (scrollPosition && ref.current) {\n      ref.current.scrollTop = scrollPosition;\n    }\n  }, [id]);\n\n  // Return props to spread onto the scroll container\n  return {\n    ref,\n    onScroll: handleScroll,\n  };\n}\n\nfunction Sidebar({ location, sidebarItems }) {\n  const scrollContainerProps = usePersistentScroll(\"sidebar\");\n\n  if (!(Array.isArray(sidebarItems) && sidebarItems.length > 0)) {\n    return null;\n  }\n  return (\n    <Box\n      display={[\"none\", null, null, \"block\"]}\n      position=\"sticky\"\n      top={HEADER_HEIGHT}\n      height={`calc(100vh - ${HEADER_HEIGHT}px)`}\n      minWidth={260}\n      color=\"auto.gray.8\"\n      bg=\"auto.gray.0\"\n    >\n      <Box\n        borderStyle=\"solid\"\n        borderColor=\"border.primary\"\n        {...scrollContainerProps}\n        borderWidth={0}\n        borderRightWidth={1}\n        borderRadius={0}\n        height=\"100%\"\n        style={{ overflow: \"auto\" }}\n      >\n        <Box display=\"flex\" flexDirection=\"column\">\n          <NavItems location={location} items={sidebarItems} />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Sidebar;\n","import { Box } from \"@primer/components\";\nimport React from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport \"../styles/global.css\";\nfunction Layout({ children, location, pageContext }) {\n  const sidebarItems = pageContext.sidebarItems;\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" minHeight=\"100vh\">\n      <Header location={location} sidebarItems={sidebarItems} />\n      <Box\n        display=\"flex\"\n        flex=\"1 1 auto\"\n        flexDirection=\"row\"\n        css={{ zIndex: 0 }}\n      >\n        <Sidebar location={location} sidebarItems={sidebarItems} />\n        <Box as=\"main\">{children}</Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Layout;\n","import { graphql } from \"gatsby\";\nimport TagPage from \"../components/tag-page\";\n\nexport default TagPage;\n\nexport const query = graphql`\n  query tagQuery($tag: String) {\n    site {\n      pathPrefix\n      siteMetadata {\n        siteUrl\n      }\n    }\n    primerWikiThemeConfig(id: { eq: \"gatsby-theme-primer-wiki-config\" }) {\n      shouldShowLastUpdated\n      lastUpdatedText\n    }\n    allMdx(filter: { frontmatter: { tags: { eq: $tag } } }) {\n      nodes {\n        frontmatter {\n          title\n        }\n        body\n        fields {\n          slug\n          title\n          lastUpdated\n          lastUpdatedAt\n          gitCreatedAt\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Layout from \"./layout\";\nimport components from \"./mdx-components\";\nimport SEO from \"./seo\";\nimport { Box, Text } from \"@primer/components\";\nimport urlJoin from \"url-join\";\nconst Tag = ({ data, pageContext, location }) => {\n  const pathPrefix = data.site.pathPrefix || \"\";\n  const slug = pageContext.slug;\n  const themeConfig = data.primerWikiThemeConfig;\n  const fullPath = urlJoin(pathPrefix || \"/\", slug);\n  const siteUrl = data.site.siteMetadata.siteUrl;\n  const fullUrl = urlJoin(siteUrl, fullPath);\n  const posts = data.allMdx.nodes.sort((a, b) => {\n    const aDate = new Date(a.fields.lastUpdatedAt || 0).getTime();\n    const bDate = new Date(b.fields.lastUpdatedAt || 0).getTime();\n    return bDate - aDate;\n  });\n  let firstPublistedAt = null;\n  let dateModified = null;\n  if (posts.length > 0) {\n    if (posts[posts.length - 1].fields.gitCreatedAt) {\n      firstPublistedAt = new Date(posts[posts.length - 1].fields.gitCreatedAt);\n    }\n    if (posts[0].fields.lastUpdatedAt) {\n      dateModified = new Date(posts[0].fields.lastUpdatedAt);\n    }\n  }\n  const tag = pageContext.tag;\n  const title = `#${tag}`;\n  const palinBody = posts.map((post) => post.fields.title).join(\", \");\n  const description = `All posts about #${tag}, ${palinBody.slice(0, 256)}`;\n  const postSeoData = {\n    title,\n    frontmatterTitle: \"\",\n    description,\n    rawBody: palinBody,\n    excerpt: description,\n    datePublished: firstPublistedAt,\n    dateModified: dateModified,\n    category: tag,\n    imageUrl: null,\n    imageAlt: \"\",\n    url: fullUrl,\n    slug: slug,\n    tags: [tag],\n  };\n  const AnchorTag = (props) => <components.a {...props} references={posts} />;\n  return (\n    <Layout pageContext={pageContext} location={location}>\n      <SEO post={postSeoData}></SEO>\n      <Box p={[4, 5, 6, 7]}>\n        <components.h2># {tag}</components.h2>\n        <Box>\n          <components.ul>\n            {posts &&\n              posts.map((post) => {\n                return (\n                  <li key={post.fields.slug}>\n                    <AnchorTag href={post.fields.slug}>\n                      {post.fields.title}\n                    </AnchorTag>\n                    {themeConfig.shouldShowLastUpdated && (\n                      <Text color=\"text.placeholder\" fontSize={1}>\n                        &nbsp; - {themeConfig.lastUpdatedText}&nbsp;\n                        {post.fields.lastUpdated}\n                      </Text>\n                    )}\n                  </li>\n                );\n              })}\n          </components.ul>\n        </Box>\n      </Box>\n    </Layout>\n  );\n};\nexport default Tag;\n"],"names":["normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","definition","id","ref","handleScroll","location","sidebarItems","scrollContainerProps","React","event","window","sessionStorage","setItem","target","scrollTop","scrollPosition","getItem","current","onScroll","Array","isArray","Box","display","position","top","HEADER_HEIGHT","height","minWidth","color","bg","borderStyle","borderColor","borderWidth","borderRightWidth","borderRadius","style","overflow","flexDirection","items","children","pageContext","minHeight","flex","as","zIndex","data","pathPrefix","site","slug","themeConfig","primerWikiThemeConfig","fullPath","urlJoin","siteUrl","siteMetadata","fullUrl","posts","allMdx","nodes","sort","a","b","aDate","Date","fields","lastUpdatedAt","getTime","firstPublistedAt","dateModified","gitCreatedAt","tag","title","palinBody","map","post","description","postSeoData","frontmatterTitle","rawBody","excerpt","datePublished","category","imageUrl","imageAlt","url","tags","AnchorTag","props","references","p","key","href","shouldShowLastUpdated","Text","fontSize","lastUpdatedText","lastUpdated"],"sourceRoot":""}